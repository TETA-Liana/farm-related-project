{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstant.js","constants/supplierConstant.js","store.js","reducers/productSeedReducer.js","reducers/productLendMachineReducer.js","reducers/consumerProductsReducer.js","reducers/orderReducers.js","reducers/supplierReducers.js","reducers/cartReducers.js","reducers/userReducer.js","components/Footer/Footer.jsx","actions/userActions.js","components/Header/Header.jsx","components/Message/Message.jsx","components/Loader/Loader.jsx","components/FormContainer/FormContainer.jsx","components/Helmet/Meta.jsx","components/Login/LoginComponent.jsx","components/Register/Register.jsx","components/CheckoutSteps/CheckoutSteps.jsx","actions/orderAction.js","components/PlaceOrder/PlaceOrder.jsx","components/CardMenuSet/CardMenu.jsx","components/OurServices/OurServices.jsx","components/Slider/sliderData.js","components/Slider/Slider.jsx","actions/supplierProduct.js","screens/Map/MapStyles.js","screens/Map/Rating/Rating.jsx","screens/Map/Map.jsx","screens/Map/GenralMap.jsx","screens/Home/HomeScreen.jsx","components/ConsumerProducts/ConsumerProducts.jsx","actions/consumerProductAction.js","screens/Consumer/ConsumerScreen.jsx","screens/Farmer/FarmerScreen.jsx","components/SupplierProduct/AddSupplierProduct.jsx","screens/Supplier/SupplierScreen.jsx","screens/Profile/ProfileScreen.jsx","components/SideBar/SideBarComponents.jsx","components/DashBoard/Statistics/StatCards/StatCards.jsx","components/DashBoard/Statistics/BarChart/Bar.jsx","components/DashBoard/Statistics/Doughnut/Doughnut.jsx","components/DashBoard/Statistics/LineChart/LineChart.jsx","components/DashBoard/Statistics/StatisticsList.jsx","screens/Dashboard/DashboardScreen.jsx","components/DashBoard/Profile/EditProfile.jsx","screens/Dashboard/ProfileScreen.jsx","components/Rating/Rating.jsx","components/PurchaseSeeds/PurchaseSeeds.jsx","actions/productSeedActions.js","screens/Farmer_ProductSeed/Farmer_ProductSeedScreen.jsx","screens/Product_Seed/SeedProductScreen.jsx","components/LendMachines/LendMachines.jsx","actions/productLendMachinesActions.js","screens/Farmer_LendMachine/Farmer_LendScreen.jsx","screens/Product_LendMachine/LendMachineProduct.jsx","actions/cartActions.js","screens/Payment/PaymentMethodScreen.jsx","screens/Product_Consumer/ConsumerProductDetailScreen.jsx","screens/Shipping/ShippingScreen.jsx","screens/Order/OrderScreen.jsx","screens/Cart/Cart.jsx","components/DashBoard/UserList/UserList.jsx","screens/Dashboard/UserListScreen.jsx","screens/UserEdit/UserEditScreen.jsx","components/DashBoard/ProductList/SeedList/SeedList.jsx","components/DashBoard/ProductList/LendMachineList/LendMachineList.jsx","components/DashBoard/ProductList/ConsumerList/ConsumerList.jsx","components/DashBoard/ProductList/ProductListHome.jsx","screens/Dashboard/ProductListScreen.jsx","screens/ProductListEdit/SeedListEdit/SeedListEdit.jsx","screens/ProductListEdit/MachineListEdit/MachineListEdit.jsx","screens/ProductListEdit/ConsumerListEdit/ConsumerListEdit.jsx","components/SupplierProductEdit/SupplierProductEdit.jsx","components/DashBoard/OrderList/OrderList.jsx","screens/Dashboard/OrderListScreen.jsx","components/DashBoard/Harvest/Harvest.jsx","screens/Dashboard/HarvestScreen.jsx","screens/FarmerProducts/FarmerProducts.jsx","components/DashBoard/Map/MapStyles.js","components/DashBoard/Map/Rating/Rating.jsx","components/DashBoard/Map/Map.jsx","components/DashBoard/Map/OverLay.jsx","screens/Dashboard/MapScreen.jsx","Layout.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_SEED_LIST_REQUEST","PRODUCT_SEED_LIST_SUCCESS","PRODUCT_SEED_LIST_FAIL","PRODUCT_SEED_DETAILS_REQUEST","PRODUCT_SEED_DETAILS_SUCCESS","PRODUCT_SEED_DETAILS_FAIL","SEED_DELETE_REQUEST","SEED_DELETE_SUCCESS","SEED_DELETE_FAIL","SEED_CREATE_REQUEST","SEED_CREATE_SUCCESS","SEED_CREATE_FAIL","SEED_CREATE_RESET","SEED_UPDATE_REQUEST","SEED_UPDATE_SUCCESS","SEED_UPDATE_FAIL","SEED_UPDATE_RESET","PRODUCT_MACHINE_LIST_REQUEST","PRODUCT_MACHINE_LIST_SUCCESS","PRODUCT_MACHINE_LIST_FAIL","PRODUCT_MACHINE_DETAILS_REQUEST","PRODUCT_MACHINE_DETAILS_SUCCESS","PRODUCT_MACHINE_DETAILS_FAIL","MACHINE_DELETE_REQUEST","MACHINE_DELETE_SUCCESS","MACHINE_DELETE_FAIL","MACHINE_CREATE_REQUEST","MACHINE_CREATE_SUCCESS","MACHINE_CREATE_FAIL","MACHINE_CREATE_RESET","MACHINE_UPDATE_REQUEST","MACHINE_UPDATE_SUCCESS","MACHINE_UPDATE_FAIL","MACHINE_UPDATE_RESET","CONSUMER_PRODUCT_LIST_REQUEST","CONSUMER_PRODUCT_LIST_SUCCESS","CONSUMER_PRODUCT_LIST_FAIL","CONSUMER_PRODUCT_DETAILS_REQUEST","CONSUMER_PRODUCT_DETAILS_SUCCESS","CONSUMER_PRODUCT_DETAILS_FAIL","CONSUMER_DELETE_REQUEST","CONSUMER_DELETE_SUCCESS","CONSUMER_DELETE_FAIL","CONSUMER_CREATE_REQUEST","CONSUMER_CREATE_SUCCESS","CONSUMER_CREATE_FAIL","CONSUMER_CREATE_RESET","CONSUMER_UPDATE_REQUEST","CONSUMER_UPDATE_SUCCESS","CONSUMER_UPDATE_FAIL","CONSUMER_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESSS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SAVE","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SAVE","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SAVE","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SAVE","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SAVE","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SAVE","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","SUPPLIER_PRODUCT_CREATE_REQUEST","SUPPLIER_PRODUCT_CREATE_SUCCESS","SUPPLIER_PRODUCT_CREATE_FAIL","SUPPLIER_PRODUCT_LIST_REQUEST","SUPPLIER_PRODUCT_LIST_SUCCESS","SUPPLIER_PRODUCT_LIST_FAIL","SUPPLIER_PRODUCT_LIST_MY_REQUEST","SUPPLIER_PRODUCT_LIST_MY_SUCCESS","SUPPLIER_PRODUCT_LIST_MY_FAIL","SUPPLIER_PRODUCT_REQUEST","SUPPLIER_PRODUCT_SUCCESS","SUPPLIER_PRODUCT_FAIL","FARMER_PRODUCT_CREATE_REVIEW_REQUEST","FARMER_PRODUCT_CREATE_REVIEW_SUCCESS","FARMER_PRODUCT_CREATE_REVIEW_FAIL","SUPPLIER_PRODUCT_UPDATE_REQUEST","SUPPLIER_PRODUCT_UPDATE_SUCCESS","SUPPLIER_PRODUCT_UPDATE_FAIL","SUPPLIER_PRODUCT_UPDATE_RESET","SUPPLIER_PRODUCT_FOR_ALL_REQUEST","SUPPLIER_PRODUCT_FOR_ALL_SUCCESS","SUPPLIER_PRODUCT_FOR_ALL_FAIL","reducer","combineReducers","prodcutSeedList","state","arguments","length","undefined","productSeeds","action","type","loading","payload","error","prodcutSeedDetails","productSeed","reviews","prodcutSeedDelete","success","seedCreate","product","seedUpdate","seed","productReviewCreate","productLendMachinesList","productLendMachines","productLendMachinesDetails","productLendMachinesDelete","LendMachinesCreate","LendMachinesUpdate","machine","consumerProductList","consumerProducts","consumerProductDetails","consumerProduct","consumerProductDelete","consumerCreate","consumerUpdate","consumer","orderDeliver","productCreate","supplierProdictListMy","products","supplierProductList","FarmerProductDetails","farmerReviewCreate","farmerProductUpdate","productReviewed","supplierProductForAllList","cartSeed","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","orderCreate","order","orderDetails","orderItems","shippingAddres","orderPay","orderListMy","orders","orderList","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","_jsx","BrowserRouter","children","_jsxs","MDBFooter","color","className","style","backgroundColor","MDBContainer","MDBRow","MDBCol","md","lg","Link","to","xl","width","Form","Group","controlId","Label","Control","placeholder","as","rows","Button","variant","fluid","Date","getFullYear","getUserDetails","id","async","dispatch","getState","config","headers","Authorization","concat","token","data","axios","get","response","message","updateUserProfile","put","listUsers","logout","removeItem","Header","useDispatch","useSelector","Navbar","collapseOnSelect","expand","fixed","LinkContainer","Brand","Image","src","Toggle","Collapse","Nav","NavDropdown","title","name","toUpperCase","isAdmin","Item","onClick","logoutHandler","Message","_ref","Alert","defaultProps","override","css","_templateObject","_taggedTemplateLiteral","Loader","useState","PuffLoader","size","FormContainer","Container","Row","Col","xs","Meta","description","keywords","Helmet","content","LoginComponent","location","history","email","setEmail","password","setPassword","redirect","search","split","useEffect","push","marginTop","onSubmit","e","preventDefault","login","post","setItem","stringify","value","required","onChange","target","marginBottom","Register","setName","cropSelection","setCropSelection","confirmPassword","setConfirmPassword","setMessage","register","CheckoutSteps","step1","step2","step3","step4","disabled","listMyOrders","listOrders","PlaceOrder","cart","num","itemsPrice","reduce","acc","qty","price","toFixed","shippingPrice","taxPrice","Number","Math","round","totalPrice","_id","ListGroup","address","city","postalCode","country","index","image","alt","rounded","Card","placeOrder","createOrder","CardMenu","CardDeck","border","Body","Title","Text","OurServices","slider","tag","SliderComponent","setSlider","Slider","background","toLowerCase","listSupplierProducts","getroductsDetails","MapStyles","Rating","text","WrappedMap","withScriptjs","withGoogleMap","Map","selectedPlace","setSelectedPlace","loadingProducts","errorProducts","GoogleMap","defaultCenter","lat","lng","defaultZoom","defaultOptions","styles","place","Marker","position","latitude","longitude","icon","url","scaledSize","window","google","maps","Size","InfoWindow","onCloseClick","textAlign","isReviwed","_Fragment","rating","GenralMap","Scrollbar","height","googleMapURL","process","REACT_APP_GOOGLE_KEY","loadingElement","containerElement","mapElement","HomeScreen","ConsumerProducts","prod_name","avalaible_location","prod_size","sm","Img","fontWeight","varient","listConsumerProducts","listConsumerProductsDetails","ConsumerScreen","numberOfItems","setNumberOfItems","slice","seller_name","quantity","showMore","FarmerScreen","AddSupplierProduct","setImage","setAddress","setDescription","phonenumber","setPhonenumber","storage","setStorage","uploading","setUploading","useHistory","createSupplierProduct","File","label","custom","file","files","formData","FormData","append","console","SupplierScreen","ProfileScreen","show","setShow","setTarget","ref","useRef","loadingOrders","errorOrders","handleClick","event","Table","striped","bordered","hover","responsive","createdAt","substring","isPaid","paidAt","isDelivered","deliveredAt","fontSize","Overlay","placement","container","current","containerPadding","Popover","review","Content","comment","SideBarComponents","StatCards","userCount","setUserCount","orderCount","setOrderCount","userLen","orderLen","BarChart","Bar","labels","datasets","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","maintainAspectRatio","DoughnutComponent","Doughnut","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","LineChart","Line","StatisticsList","DashboardScreen","marginLeft","EditProfile","PurchaseSeeds","listSeedProducts","listSeedProductsDetails","Farmer_ProductSeedScreen","numReviews","SeedProductScreen","match","setQty","setRating","setComment","successProductReview","loadingProductReview","errorProductReview","params","countInStock","Array","keys","addToCartHandler","createProductReview","productId","row","LendMachines","targetPlant","listLendMachineProducts","listLendMachineProductsDetails","Farmer_LendScreen","target_plant","LendMachineProduct","machine_power","addtoCartHandler","addToCart","PaymentScreen","setPaymentMethod","Check","checked","ConsumerProductDetailScreen","ShippingScreen","setCity","setPostalCode","setCountry","OrderScreen","orderId","sdkReady","setSdkReady","successPay","loadingPay","successDeliver","loadingDeliver","paypal","clientId","script","document","createElement","onload","body","appendChild","addPayPalScript","href","PayPalButton","amount","onSuccess","paymentResult","payOrder","deliverHandler","deliverOrder","Cart","removeFromCartHandler","removeFromCart","checkoutHandler","UserList","successDelete","deleteHandler","confirm","delete","deleteUsers","float","UserListScreen","UserEditScreen","userId","setIsAdmin","loadingUpdate","successUpdate","errorUpdate","updateUser","SeedList","loadingSeed","errorSeed","successSeedDelete","loadingDelete","errorDelete","successSeedCreate","loadingCreate","errorCreate","deleteSeedProducts","createSeedProductHandler","category","loadingMachine","errorMachine","successCreate","deleteLendMachineProduct","createMachineProductHandler","ConsumerList","loadingConsumer","errorConsumer","deleteLoadingConsumer","errorDeleteConsumer","createLoadingConsumer","errorcreateConsumer","deleteConsumerProduct","createConsumerProductHandler","ProductListHome","LendMachineList","ProductListScreen","SeedListEdit","setPrice","setCategory","setCountInStock","setTarget_plant","setQuantity","setMachine_power","ConsumerListEdit","prodName","setProdName","sellerName","setSellerName","prodSize","setProdSize","avalaibleLoc","setAvalaibleLoc","SupplierProductEdit","updateSupplierProduct","OrderListScreen","varinat","OrderList","Harvest","rel","HarvestScreen","FarmerProduct","loadingReview","loadingError","successReview","OverLay","MapScreen","Layout","Router","Switch","Route","exact","path","component","Farmer","Consumer","Supplier","PaymentMethodScreen","AdminProfileScreen","MachineListEdit","Farmer_ProductSeed","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dotenv","ReactDOM","render","Provider","getElementById"],"mappings":"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","file":"static/js/main.318726fa.chunk.js","sourcesContent":["// SEEDS\r\nexport const PRODUCT_SEED_LIST_REQUEST = 'PRODUCT_SEED_LIST_REQUEST'\r\nexport const PRODUCT_SEED_LIST_SUCCESS = 'PRODUCT_SEED_LIST_SUCCESS'\r\nexport const PRODUCT_SEED_LIST_FAIL = 'PRODUCT_SEED_LIST_FAIL'\r\n\r\nexport const PRODUCT_SEED_DETAILS_REQUEST = 'PRODUCT_SEED_DETAILS_REQUEST'\r\nexport const PRODUCT_SEED_DETAILS_SUCCESS = 'PRODUCT_SEED_DETAILS_SUCCESS'\r\nexport const PRODUCT_SEED_DETAILS_FAIL = 'PRODUCT_SEED_DETAILS_FAIL'\r\n\r\nexport const SEED_DELETE_REQUEST = 'SEED_DELETE_REQUEST'\r\nexport const SEED_DELETE_SUCCESS = 'SEED_DELETE_SUCCESS'\r\nexport const SEED_DELETE_FAIL = 'SEED_DELETE_FAIL'\r\n\r\nexport const SEED_CREATE_REQUEST = 'SEED_CREATE_REQUEST'\r\nexport const SEED_CREATE_SUCCESS = 'SEED_CREATE_SUCCESS'\r\nexport const SEED_CREATE_FAIL = 'SEED_CREATE_FAIL'\r\nexport const SEED_CREATE_RESET = 'SEED_CREATE_RESET'\r\n\r\nexport const SEED_UPDATE_REQUEST = 'SEED_UPDATE_REQUEST'\r\nexport const SEED_UPDATE_SUCCESS = 'SEED_UPDATE_SUCCESS'\r\nexport const SEED_UPDATE_FAIL = 'SEED_UPDATE_FAIL'\r\nexport const SEED_UPDATE_RESET = 'SEED_UPDATE_RESET'\r\n\r\n\r\n// LEND MACHINES\r\nexport const PRODUCT_MACHINE_LIST_REQUEST = 'PRODUCT_MACHINE_LIST_REQUEST'\r\nexport const PRODUCT_MACHINE_LIST_SUCCESS = 'PRODUCT_MACHINE_LIST_SUCCESS'\r\nexport const PRODUCT_MACHINE_LIST_FAIL = 'PRODUCT_MACHINE_LIST_FAIL'\r\n\r\nexport const PRODUCT_MACHINE_DETAILS_REQUEST = 'PRODUCT_MACHINE_DETAILS_REQUEST'\r\nexport const PRODUCT_MACHINE_DETAILS_SUCCESS = 'PRODUCT_MACHINE_DETAILS_SUCCESS'\r\nexport const PRODUCT_MACHINE_DETAILS_FAIL = 'PRODUCT_MACHINE_DETAILS_FAIL'\r\n\r\nexport const MACHINE_DELETE_REQUEST = 'MACHINE_DELETE_REQUEST'\r\nexport const MACHINE_DELETE_SUCCESS = 'MACHINE_DELETE_SUCCESS'\r\nexport const MACHINE_DELETE_FAIL = 'MACHINE_DELETE_FAIL'\r\n\r\nexport const MACHINE_CREATE_REQUEST = 'MACHINE_CREATE_REQUEST'\r\nexport const MACHINE_CREATE_SUCCESS = 'MACHINE_CREATE_SUCCESS'\r\nexport const MACHINE_CREATE_FAIL = 'MACHINE_CREATE_FAIL'\r\nexport const MACHINE_CREATE_RESET = 'MACHINE_CREATE_RESET'\r\n\r\nexport const MACHINE_UPDATE_REQUEST = 'MACHINE_UPDATE_REQUEST'\r\nexport const MACHINE_UPDATE_SUCCESS = 'MACHINE_UPDATE_SUCCESS'\r\nexport const MACHINE_UPDATE_FAIL = 'MACHINE_UPDATE_FAIL'\r\nexport const MACHINE_UPDATE_RESET = 'MACHINE_UPDATE_RESET'\r\n\r\n// CONSUMER\r\nexport const CONSUMER_PRODUCT_LIST_REQUEST = 'CONSUMER_PRODUCT_LIST_REQUEST'\r\nexport const CONSUMER_PRODUCT_LIST_SUCCESS = 'CONSUMER_PRODUCT_LIST_SUCCESS'\r\nexport const CONSUMER_PRODUCT_LIST_FAIL = 'CONSUMER_PRODUCT_LIST_FAIL'\r\n\r\nexport const CONSUMER_PRODUCT_DETAILS_REQUEST = 'CONSUMER_PRODUCT_DETAILS_REQUEST'\r\nexport const CONSUMER_PRODUCT_DETAILS_SUCCESS = 'CONSUMER_PRODUCT_DETAILS_SUCCESS'\r\nexport const CONSUMER_PRODUCT_DETAILS_FAIL = 'CONSUMER_PRODUCT_DETAILS_FAIL'\r\n\r\nexport const CONSUMER_DELETE_REQUEST = 'CONSUMER_DELETE_REQUEST'\r\nexport const CONSUMER_DELETE_SUCCESS = 'CONSUMER_DELETE_SUCCESS'\r\nexport const CONSUMER_DELETE_FAIL = 'CONSUMER_DELETE_FAIL'\r\n\r\nexport const CONSUMER_CREATE_REQUEST = 'CONSUMER_CREATE_REQUEST'\r\nexport const CONSUMER_CREATE_SUCCESS = 'CONSUMER_CREATE_SUCCESS'\r\nexport const CONSUMER_CREATE_FAIL = 'CONSUMER_CREATE_FAIL'\r\nexport const CONSUMER_CREATE_RESET = 'CONSUMER_CREATE_RESET'\r\n\r\nexport const CONSUMER_UPDATE_REQUEST = 'CONSUMER_UPDATE_REQUEST'\r\nexport const CONSUMER_UPDATE_SUCCESS = 'CONSUMER_UPDATE_SUCCESS'\r\nexport const CONSUMER_UPDATE_FAIL = 'CONSUMER_UPDATE_FAIL'\r\nexport const CONSUMER_UPDATE_RESET = 'CONSUMER_UPDATE_RESET'\r\n\r\n// Reviews\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESSS = 'CART_SAVE_SHIPPING_ADDRESSS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SAVE = 'ORDER_CREATE_SAVE'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SAVE = 'ORDER_DETAILS_SAVE'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SAVE = 'ORDER_PAY_SAVE'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SAVE = 'ORDER_LIST_MY_SAVE'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SAVE = 'ORDER_LIST_SAVE'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SAVE = 'ORDER_DELIVER_SAVE'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","export const SUPPLIER_PRODUCT_CREATE_REQUEST = 'SUPPLIER_PRODUCT_CREATE_REQUEST'\r\nexport const SUPPLIER_PRODUCT_CREATE_SUCCESS = 'SUPPLIER_PRODUCT_CREATE_SUCCESS'\r\nexport const SUPPLIER_PRODUCT_CREATE_FAIL = 'SUPPLIER_PRODUCT_CREATE_FAIL'\r\n\r\nexport const SUPPLIER_PRODUCT_LIST_REQUEST = 'SUPPLIER_PRODUCT_LIST_REQUEST'\r\nexport const SUPPLIER_PRODUCT_LIST_SUCCESS = 'SUPPLIER_PRODUCT_LIST_SUCCESS'\r\nexport const SUPPLIER_PRODUCT_LIST_FAIL = 'SUPPLIER_PRODUCT_LIST_FAIL'\r\n\r\nexport const SUPPLIER_PRODUCT_LIST_MY_REQUEST = 'SUPPLIER_PRODUCT_LIST_MY_REQUEST'\r\nexport const SUPPLIER_PRODUCT_LIST_MY_SUCCESS = 'SUPPLIER_PRODUCT_LIST_MY_SUCCESS'\r\nexport const SUPPLIER_PRODUCT_LIST_MY_FAIL = 'SUPPLIER_PRODUCT_LIST_MY_FAIL'\r\n\r\nexport const SUPPLIER_PRODUCT_REQUEST = 'SUPPLIER_PRODUCT_REQUEST'\r\nexport const SUPPLIER_PRODUCT_SUCCESS = 'SUPPLIER_PRODUCT_SUCCESS'\r\nexport const SUPPLIER_PRODUCT_FAIL = 'SUPPLIER_PRODUCT_FAIL'\r\n\r\n// Reviews\r\nexport const FARMER_PRODUCT_CREATE_REVIEW_REQUEST = 'FARMER_PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const FARMER_PRODUCT_CREATE_REVIEW_SUCCESS = 'FARMER_PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const FARMER_PRODUCT_CREATE_REVIEW_FAIL = 'FARMER_PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const FARMER_PRODUCT_CREATE_REVIEW_RESET = 'FARMER_PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const SUPPLIER_PRODUCT_UPDATE_REQUEST = 'SUPPLIER_PRODUCT_UPDATE_REQUEST'\r\nexport const SUPPLIER_PRODUCT_UPDATE_SUCCESS = 'SUPPLIER_PRODUCT_UPDATE_SUCCESS'\r\nexport const SUPPLIER_PRODUCT_UPDATE_FAIL = 'SUPPLIER_PRODUCT_UPDATE_FAIL'\r\nexport const SUPPLIER_PRODUCT_UPDATE_RESET = 'SUPPLIER_PRODUCT_UPDATE_RESET'\r\n\r\n// For all\r\n\r\nexport const SUPPLIER_PRODUCT_FOR_ALL_REQUEST = 'SUPPLIER_PRODUCT_FOR_ALL_REQUEST'\r\nexport const SUPPLIER_PRODUCT_FOR_ALL_SUCCESS = 'SUPPLIER_PRODUCT_FOR_ALL_SUCCESS'\r\nexport const SUPPLIER_PRODUCT_FOR_ALL_FAIL = 'SUPPLIER_PRODUCT_FOR_ALL_FAIL'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport {\r\n    prodcutSeedListReducer,\r\n    prodcutSeedDetailsReducer,\r\n    prodcutSeedDeleteReducer,\r\n    seedCreateReducer,\r\n    seedUpdateReducer,\r\n    productReviewCreateReducer\r\n} from './reducers/productSeedReducer'\r\nimport {\r\n    productLendMachinesListReducer,\r\n    productLendMachinesDetailsReducer,\r\n    productLendMachinesDeleteReducer,\r\n    LendMachinesCreateReducer,\r\n    LendMachinesUpdateReducer\r\n} from './reducers/productLendMachineReducer'\r\nimport { cartSeedReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListeReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from './reducers/userReducer.js'\r\nimport {\r\n    consumerProductListReducer,\r\n    consumerProductDetailsReducer,\r\n    consumerProductDeleteReducer,\r\n    consumerCreateReducer,\r\n    consumerUpdateReducer\r\n} from './reducers/consumerProductsReducer'\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer\r\n} from './reducers/orderReducers'\r\n\r\nimport {\r\n    productCreateReducer,\r\n    supplierProdictListMyReducer,\r\n    supplierProductListReducer,\r\n    FarmerProductDetailsReducer,\r\n    farmerReviewCreateReducer,\r\n    farmerProductUpdateReducer,\r\n    supplierProductForAllListReducer\r\n} from './reducers/supplierReducers'\r\n\r\nconst reducer = combineReducers({\r\n    prodcutSeedList: prodcutSeedListReducer,\r\n    prodcutSeedDetails: prodcutSeedDetailsReducer,\r\n    prodcutSeedDelete: prodcutSeedDeleteReducer,\r\n    seedCreate: seedCreateReducer,\r\n    seedUpdate: seedUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n\r\n    productLendMachinesList: productLendMachinesListReducer,\r\n    productLendMachinesDetails: productLendMachinesDetailsReducer,\r\n    productLendMachinesDelete: productLendMachinesDeleteReducer,\r\n    LendMachinesCreate: LendMachinesCreateReducer,\r\n    LendMachinesUpdate: LendMachinesUpdateReducer,\r\n\r\n    consumerProductList: consumerProductListReducer,\r\n    consumerProductDetails: consumerProductDetailsReducer,\r\n    consumerProductDelete: consumerProductDeleteReducer,\r\n    consumerCreate: consumerCreateReducer,\r\n    consumerUpdate: consumerUpdateReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n\r\n    productCreate: productCreateReducer,\r\n    supplierProdictListMy: supplierProdictListMyReducer,\r\n    supplierProductList: supplierProductListReducer,\r\n    FarmerProductDetails: FarmerProductDetailsReducer,\r\n    farmerReviewCreate: farmerReviewCreateReducer,\r\n    farmerProductUpdate: farmerProductUpdateReducer,\r\n    supplierProductForAllList: supplierProductForAllListReducer,\r\n\r\n    cartSeed: cartSeedReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListeReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems'))\r\n    : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n    : {}\r\n\r\nconst initialState = {\r\n    cartSeed: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: {\r\n        userInfo: userInfoFromStorage\r\n    }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import {\r\n    PRODUCT_SEED_LIST_REQUEST,\r\n    PRODUCT_SEED_LIST_SUCCESS,\r\n    PRODUCT_SEED_LIST_FAIL,\r\n    PRODUCT_SEED_DETAILS_REQUEST,\r\n    PRODUCT_SEED_DETAILS_SUCCESS,\r\n    PRODUCT_SEED_DETAILS_FAIL,\r\n    SEED_DELETE_REQUEST,\r\n    SEED_DELETE_SUCCESS,\r\n    SEED_DELETE_FAIL,\r\n    SEED_CREATE_REQUEST,\r\n    SEED_CREATE_SUCCESS,\r\n    SEED_CREATE_FAIL,\r\n    SEED_CREATE_RESET,\r\n    SEED_UPDATE_REQUEST,\r\n    SEED_UPDATE_SUCCESS,\r\n    SEED_UPDATE_FAIL,\r\n    SEED_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET\r\n} from './../constants/productConstants.js'\r\n\r\nexport const prodcutSeedListReducer = (state = { productSeeds: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_SEED_LIST_REQUEST:\r\n            return { loading: true, productSeeds: [] }\r\n        case PRODUCT_SEED_LIST_SUCCESS:\r\n            return { loading: false, productSeeds: action.payload }\r\n        case PRODUCT_SEED_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const prodcutSeedDetailsReducer = (state = { productSeed: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_SEED_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_SEED_DETAILS_SUCCESS:\r\n            return { loading: false, productSeed: action.payload }\r\n        case PRODUCT_SEED_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const prodcutSeedDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SEED_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case SEED_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case SEED_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const seedCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SEED_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case SEED_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case SEED_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case SEED_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const seedUpdateReducer = (state = { seed: {} }, action) => {\r\n    switch (action.type) {\r\n        case SEED_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case SEED_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, seed: action.payload }\r\n        case SEED_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case SEED_UPDATE_RESET:\r\n            return {\r\n                seed: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    PRODUCT_MACHINE_LIST_REQUEST, \r\n    PRODUCT_MACHINE_LIST_SUCCESS, \r\n    PRODUCT_MACHINE_LIST_FAIL,\r\n    PRODUCT_MACHINE_DETAILS_REQUEST, \r\n    PRODUCT_MACHINE_DETAILS_SUCCESS, \r\n    PRODUCT_MACHINE_DETAILS_FAIL,\r\n    MACHINE_DELETE_REQUEST,\r\n    MACHINE_DELETE_SUCCESS,\r\n    MACHINE_DELETE_FAIL,\r\n    MACHINE_CREATE_REQUEST,\r\n    MACHINE_CREATE_SUCCESS,\r\n    MACHINE_CREATE_FAIL,\r\n    MACHINE_CREATE_RESET,\r\n    MACHINE_UPDATE_SUCCESS,\r\n    MACHINE_UPDATE_FAIL,\r\n    MACHINE_UPDATE_RESET,\r\n    MACHINE_UPDATE_REQUEST\r\n} from './../constants/productConstants.js'\r\n\r\nexport const productLendMachinesListReducer = (state = { productLendMachines: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_MACHINE_LIST_REQUEST:\r\n            return { loading: true, productLendMachines: [] }\r\n        case PRODUCT_MACHINE_LIST_SUCCESS:\r\n            return { loading: false, productLendMachines: action.payload }\r\n        case PRODUCT_MACHINE_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productLendMachinesDetailsReducer = (state = { productLendMachines: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_MACHINE_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_MACHINE_DETAILS_SUCCESS:\r\n            return { loading: false, productLendMachines: action.payload }\r\n        case PRODUCT_MACHINE_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productLendMachinesDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case MACHINE_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case MACHINE_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case MACHINE_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const LendMachinesCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case MACHINE_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case MACHINE_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case MACHINE_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case MACHINE_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const LendMachinesUpdateReducer = (state = { machine: {} }, action) => {\r\n    switch (action.type) {\r\n        case MACHINE_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case MACHINE_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, machine: action.payload }\r\n        case MACHINE_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case MACHINE_UPDATE_RESET:\r\n            return {\r\n                machine: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CONSUMER_PRODUCT_LIST_REQUEST,\r\n    CONSUMER_PRODUCT_LIST_SUCCESS,\r\n    CONSUMER_PRODUCT_LIST_FAIL,\r\n    CONSUMER_PRODUCT_DETAILS_REQUEST,\r\n    CONSUMER_PRODUCT_DETAILS_SUCCESS,\r\n    CONSUMER_PRODUCT_DETAILS_FAIL,\r\n    CONSUMER_DELETE_REQUEST,\r\n    CONSUMER_DELETE_SUCCESS,\r\n    CONSUMER_DELETE_FAIL,\r\n    CONSUMER_CREATE_REQUEST,\r\n    CONSUMER_CREATE_SUCCESS,\r\n    CONSUMER_CREATE_FAIL,\r\n    CONSUMER_CREATE_RESET,\r\n    CONSUMER_UPDATE_REQUEST,\r\n    CONSUMER_UPDATE_SUCCESS,\r\n    CONSUMER_UPDATE_FAIL,\r\n    CONSUMER_UPDATE_RESET\r\n} from '../constants/productConstants'\r\n\r\nexport const consumerProductListReducer = (state = { consumerProducts: [] }, action) => {\r\n    switch (action.type) {\r\n        case CONSUMER_PRODUCT_LIST_REQUEST:\r\n            return { loading: true, consumerProducts: [] }\r\n        case CONSUMER_PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, consumerProducts: action.payload }\r\n        case CONSUMER_PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const consumerProductDetailsReducer = (state = { consumerProduct: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case CONSUMER_PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case CONSUMER_PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, consumerProduct: action.payload }\r\n        case CONSUMER_PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const consumerProductDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CONSUMER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case CONSUMER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case CONSUMER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const consumerCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CONSUMER_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case CONSUMER_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case CONSUMER_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case CONSUMER_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const consumerUpdateReducer = (state = { consumer: {} }, action) => {\r\n    switch (action.type) {\r\n        case CONSUMER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case CONSUMER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, consumer: action.payload }\r\n        case CONSUMER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case CONSUMER_UPDATE_RESET:\r\n            return {\r\n                consumer: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SAVE,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SAVE,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SAVE,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SAVE,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SAVE,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SAVE,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from '../constants/orderConstant'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SAVE:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddres: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SAVE:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SAVE:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SAVE:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_MY_SAVE:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_SAVE:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    SUPPLIER_PRODUCT_CREATE_FAIL,\r\n    SUPPLIER_PRODUCT_CREATE_REQUEST,\r\n    SUPPLIER_PRODUCT_CREATE_SUCCESS,\r\n    SUPPLIER_PRODUCT_LIST_REQUEST,\r\n    SUPPLIER_PRODUCT_LIST_SUCCESS,\r\n    SUPPLIER_PRODUCT_LIST_FAIL,\r\n    SUPPLIER_PRODUCT_LIST_MY_REQUEST,\r\n    SUPPLIER_PRODUCT_LIST_MY_SUCCESS,\r\n    SUPPLIER_PRODUCT_LIST_MY_FAIL,\r\n    SUPPLIER_PRODUCT_REQUEST,\r\n    SUPPLIER_PRODUCT_SUCCESS,\r\n    SUPPLIER_PRODUCT_FAIL,\r\n    FARMER_PRODUCT_CREATE_REVIEW_REQUEST,\r\n    FARMER_PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    FARMER_PRODUCT_CREATE_REVIEW_FAIL,\r\n    FARMER_PRODUCT_CREATE_REVIEW_RESET,\r\n    SUPPLIER_PRODUCT_UPDATE_REQUEST,\r\n    SUPPLIER_PRODUCT_UPDATE_SUCCESS,\r\n    SUPPLIER_PRODUCT_UPDATE_FAIL,\r\n    SUPPLIER_PRODUCT_UPDATE_RESET,\r\n    SUPPLIER_PRODUCT_FOR_ALL_REQUEST,\r\n    SUPPLIER_PRODUCT_FOR_ALL_SUCCESS,\r\n    SUPPLIER_PRODUCT_FOR_ALL_FAIL\r\n} from './../constants/supplierConstant'\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SUPPLIER_PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case SUPPLIER_PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case SUPPLIER_PRODUCT_CREATE_FAIL:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const supplierProductListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case SUPPLIER_PRODUCT_LIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case SUPPLIER_PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload,\r\n            }\r\n        case SUPPLIER_PRODUCT_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const supplierProdictListMyReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case SUPPLIER_PRODUCT_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case SUPPLIER_PRODUCT_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload,\r\n            }\r\n        case SUPPLIER_PRODUCT_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const FarmerProductDetailsReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case SUPPLIER_PRODUCT_REQUEST:\r\n            return { loading: true, ...state }\r\n        case SUPPLIER_PRODUCT_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case SUPPLIER_PRODUCT_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const farmerReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FARMER_PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case FARMER_PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case FARMER_PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case FARMER_PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const farmerProductUpdateReducer = (state = { productReviewed: {} }, action) => {\r\n    switch (action.type) {\r\n        case SUPPLIER_PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case SUPPLIER_PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case SUPPLIER_PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case SUPPLIER_PRODUCT_UPDATE_RESET:\r\n            return {\r\n                productReviewed: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// For all\r\nexport const supplierProductForAllListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case SUPPLIER_PRODUCT_FOR_ALL_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case SUPPLIER_PRODUCT_FOR_ALL_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload,\r\n            }\r\n        case SUPPLIER_PRODUCT_FOR_ALL_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESSS,\r\n    CART_SAVE_PAYMENT_METHOD \r\n} from './../constants/cartConstants'\r\n\r\nexport const cartSeedReducer = (state = { cartItems: [], shippingAddress: [] }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.seed === item.seed)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.seed === existItem.seed ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.seed !== action.payload),\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESSS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL\r\n} from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListeReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\r\nimport { Link, BrowserRouter } from 'react-router-dom';\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <MDBFooter color=\"blue-grey\" className=\"page-footer font-small lighten-5 pt-0\">\r\n                <div style={{ backgroundColor: \"#008f11\" }}>\r\n                    <MDBContainer>\r\n                        <MDBRow className=\"py-4 d-flex align-items-center\">\r\n                            <MDBCol md=\"6\" lg=\"5\" className=\"text-center text-md-left mb-4 mb-md-0\">\r\n                                <h6 className=\"mb-0 \" style={{ color: \"white\" }}> Get connected with us on social networks!</h6>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"6\" lg=\"7\" className=\"text-center text-md-right\">\r\n                                <Link to=\"/\" className=\"fb-ic ml-0\">\r\n                                    <i className=\"fab fa-facebook-f white-text mr-lg-4\"> </i>\r\n                                </Link>\r\n                                <Link to=\"/\" className=\"tw-ic\">\r\n                                    <i className=\"fab fa-twitter white-text mr-lg-4\"> </i>\r\n                                </Link>\r\n                                <Link to=\"/\" className=\"gplus-ic\">\r\n                                    <i className=\"fab fa-google-plus-g white-text mr-lg-4\"> </i>\r\n                                </Link>\r\n                                <Link to=\"/\" className=\"li-ic\">\r\n                                    <i className=\"fab fa-linkedin-in white-text mr-lg-4\"> </i>\r\n                                </Link>\r\n                                <Link to=\"/\" className=\"ins-ic\">\r\n                                    <i className=\"fab fa-instagram white-text mr-lg-4\"> </i>\r\n                                </Link>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                </div>\r\n                <MDBContainer className=\"mt-5 mb-4 text-center text-md-left\">\r\n                    <MDBRow className=\"mt-3\">\r\n                        <MDBCol md=\"3\" lg=\"3    \" xl=\"3\" className=\"mb-4 dark-grey-text\">\r\n                            <h6 className=\"text-uppercase font-weight-bold\">\r\n                                <strong>Agroic</strong>\r\n                            </h6>\r\n                            <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{ width: \"60px\" }} />\r\n                            <p>\r\n                                The purpose of Agroic is to provide connections between different roles in the agriculture industry. As the farmers are not getting a fair price for their goods because of contractors. This app removes the requirement of contractors for farmers. Farmers can buy their required needs for farming from Sellers and they can also sell their products to the Consumers\r\n                            </p>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"2\" lg=\"2\" xl=\"2\" className=\"mb-4 dark-grey-text\">\r\n                            <h6 className=\"text-uppercase font-weight-bold\">\r\n                                <strong>Links</strong>\r\n                            </h6>\r\n                            <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{ width: \"60px\" }} />\r\n                            <p><Link to=\"/farmer\" className=\"dark-grey-text\">Famer</Link></p>\r\n                            <p><Link to=\"/consumer\" className=\"dark-grey-text\">Consumer </Link></p>\r\n                            <p><Link to=\"/supplier\" className=\"dark-grey-text\">Supplier</Link></p>\r\n                            <p><Link to=\"/cart\" className=\"dark-grey-text\">Cart</Link></p>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"3\" lg=\"3\" xl=\"4\" className=\"mb-4 dark-grey-text\">\r\n                            <h6 className=\"text-uppercase font-weight-bold\">\r\n                                <strong>Contact</strong>\r\n                            </h6>\r\n                            <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{ width: \"60px\" }} />\r\n                            <p><i className=\"fa fa-home mr-3\" /> Colombo, Sri Lanka</p>\r\n                            <p><i className=\"fa fa-envelope mr-3\" /> info@example.com</p>\r\n                            <p><i className=\"fa fa-phone mr-3\" /> + 01 234 567 88</p>\r\n                            <p><i className=\"fa fa-print mr-3\" /> + 01 234 567 89</p>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"3\" lg=\"4\" xl=\"3\" className=\"mb-4 dark-grey-text\">\r\n                            <h6 className=\"text-uppercase font-weight-bold\">\r\n                                <strong>Get in touch</strong>\r\n                            </h6>\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Email address</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Email\" />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Comment</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={3} type=\"text\" placeholder=\"Write Your Thoughts\" />\r\n                                </Form.Group>\r\n                                <Button variant=\"primary\" type=\"submit\">Send message</Button>\r\n                            </Form>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n                <div className=\"footer-copyright text-center py-3\">\r\n                    <MDBContainer fluid>\r\n                        &copy; {new Date().getFullYear()} Copyright:{\" \"}\r\n                    Sanjula De Alwis\r\n                </MDBContainer>\r\n                </div>\r\n            </MDBFooter>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import axios from 'axios'\r\nimport {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL\r\n} from './../constants/userConstants.js'\r\nimport { ORDER_LIST_MY_RESET } from './../constants/orderConstant'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const register = (name, email, password, cropSelection) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/',\r\n            { name, email, password, cropSelection },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUsers = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        const { data } = await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({ type: USER_DETAILS_RESET })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Nav, Navbar, NavDropdown, Image } from 'react-bootstrap';\r\nimport './Header.css'\r\n\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" fixed=\"top\">\r\n            <LinkContainer to=\"/\">\r\n                <Navbar.Brand className=\"nav-cal\" >\r\n                    <Image width=\"80px\"src=\"/Logo.png\" />\r\n                </Navbar.Brand>\r\n            </LinkContainer>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto \">\r\n                    <LinkContainer to=\"/\">\r\n                        <Nav.Link className=\"nav-cal\">HOME</Nav.Link>\r\n                    </LinkContainer>\r\n                    <LinkContainer to=\"/farmer\">\r\n                        <Nav.Link className=\"nav-cal\">FARMER</Nav.Link>\r\n                    </LinkContainer>\r\n                    <LinkContainer to=\"/consumer\">\r\n                        <Nav.Link className=\"nav-cal\">CONSUMER</Nav.Link>\r\n                    </LinkContainer>\r\n                    <LinkContainer to=\"login?redirect=supplier\">\r\n                        <Nav.Link className=\"nav-cal\">SUPPLIER</Nav.Link>\r\n                    </LinkContainer>\r\n                    <LinkContainer to=\"/cart\" >\r\n                        <Nav.Link className={`${userInfo ? \"remove-space\" : \"add-space cart nav-cal\"} `}>\r\n                            <i className=\"fas fa-shopping-cart\"></i>\r\n                            CART\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                    {\r\n                        userInfo ? (\r\n                            <NavDropdown title={userInfo.name.toUpperCase()} id='username'>\r\n                                {\r\n                                    userInfo && userInfo.isAdmin && (\r\n                                        <LinkContainer to='/admin/dashboard'>\r\n                                            <NavDropdown.Item>DASHBOARD</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                    )\r\n                                }\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>PROFILE</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/login'>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>LOGOUT</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                                <LinkContainer to=\"/login\">\r\n                                    <Nav.Link className=\"login nav-cal\">SIGN IN</Nav.Link>\r\n                                </LinkContainer>\r\n                            )\r\n                    }\r\n                    {\r\n                        userInfo && userInfo.isAdmin && (\r\n                            <NavDropdown title=\"ADMIN\" id='adminmenu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>USERS</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>PRODUCTS</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>ORDERS</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        )\r\n                    }\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'ínfo'\r\n}\r\n\r\nexport default Message\r\n","import React, { useState } from 'react'\r\nimport { css } from \"@emotion/react\";\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: green;\r\n`;\r\n\r\nconst Loader = () => {\r\n\r\n    let [loading] = useState(true);\r\n    let [color] = useState(\"#24d32b\");\r\n\r\n    return (\r\n        <div className=\"sweet-loading\">\r\n            <PuffLoader color={color} loading={loading} css={override} size={100} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React from 'react'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n           <title>{title}</title> \r\n           <meta name='description' content={description} />\r\n           <meta name='keyword' content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To Agroic',\r\n    description: 'Agriclutural website by The Department of Agriculture (DoA) of Sri Lanka along with the Keels ',\r\n    keywords: 'farmers, argio, department of agriculture, agricultural science'\r\n}\r\n\r\nexport default Meta\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Form,\r\n    Button,\r\n    Row,\r\n    Col\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Message/Message'\r\nimport Loader from '../Loader/Loader'\r\nimport FormContainer from '../FormContainer/FormContainer'\r\nimport { login } from '../../actions/userActions'\r\nimport Meta from '../Helmet/Meta'\r\n\r\nconst LoginComponent = ({ location, history }) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, userInfo, error } = userLogin\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [userInfo, history, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Meta\r\n                title=\"Agroic | Sign In\"\r\n            />\r\n            <h1 style={{ marginTop: '120px' }}>Sign In</h1>\r\n            { error && <Message variant='danger'>{error}</Message>}\r\n            { loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address / NIC <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                    <Form.Control\r\n                        type=\"nic\"\r\n                        placeholder=\"Enter email or NIC\"\r\n                        value={email}\r\n                        required\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        value={password}\r\n                        required\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">Sign In</Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col style={{ marginBottom: '30px' }}>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginComponent\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Form,\r\n    Button,\r\n    Row,\r\n    Col\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../Message/Message'\r\nimport Loader from '../Loader/Loader'\r\nimport FormContainer from '../FormContainer/FormContainer'\r\nimport { register } from '../../actions/userActions'\r\nimport Meta from '../Helmet/Meta'\r\n\r\nconst Register = ({ location, history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [cropSelection, setCropSelection] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, userInfo, error } = userRegister\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [userInfo, history, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password, cropSelection))\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <FormContainer>\r\n            <Meta\r\n                title=\"Agroic | Register\"\r\n            />\r\n            <h1 style={{ marginTop: '120px' }}>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                placeholder=\"Enter name\"\r\n                                value={name}\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address / NIC <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"nic\"\r\n                                placeholder=\"Enter email or NIC\"\r\n                                value={email}\r\n                                required\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='cropSelection'>\r\n                            <Form.Label>Crop Selection (optional)</Form.Label>\r\n                            <Form.Control\r\n                                type=\"cropSelection\"\r\n                                placeholder=\"Enter crop               \"\r\n                                value={cropSelection}\r\n                                onChange={(e) => setCropSelection(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>Password <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Enter password\"\r\n                                value={password}\r\n                                required\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='confirmPassword'>\r\n                            <Form.Label>Confirm password <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm password\"\r\n                                value={confirmPassword}\r\n                                required\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"primary\">Register</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col style={{ marginBottom: '30px' }}>\r\n                    Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"jusitfy-content-center mb-4\">\r\n            <Nav.Item>\r\n                {\r\n                    step1 \r\n                        ? <LinkContainer to='/login'>\r\n                            <Nav.Link>Sign In</Nav.Link>\r\n                        </LinkContainer>\r\n                        :  <Nav.Link disabled>Sign In</Nav.Link>\r\n                }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {\r\n                    step2 \r\n                        ? <LinkContainer to='/shipping'>\r\n                            <Nav.Link>Shipping</Nav.Link>\r\n                        </LinkContainer>\r\n                        :  <Nav.Link disabled>Shipping</Nav.Link>\r\n                }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {\r\n                    step3\r\n                        ? <LinkContainer to='/payment'>\r\n                            <Nav.Link>Payment</Nav.Link>\r\n                        </LinkContainer>\r\n                        :  <Nav.Link disabled>Payment</Nav.Link>\r\n                }\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {\r\n                    step4\r\n                        ? <LinkContainer to='/placeorder'>\r\n                            <Nav.Link>Place Order</Nav.Link>\r\n                        </LinkContainer>\r\n                        :  <Nav.Link disabled>Place Order</Nav.Link>\r\n                }\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SAVE,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SAVE,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SAVE,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SAVE,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SAVE,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SAVE,\r\n    ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstant'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/orders',\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SAVE,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SAVE,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SAVE,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${orderId}/pay`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SAVE,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SAVE,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SAVE,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport {\r\n    Container,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    ListGroup,\r\n    Image,\r\n    Card\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from './../../components/CheckoutSteps/CheckoutSteps'\r\nimport Message from '../../components/Message/Message'\r\nimport { createOrder } from './../../actions/orderAction'\r\nimport Meta from '../Helmet/Meta'\r\n\r\nconst PlaceOrder = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cartSeed)\r\n\r\n    // Calculate Price\r\n    const addDecimals = num => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)\r\n    cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 100\r\n    cart.taxPrice = addDecimals(Number(0.15 * cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [history, success])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginTop: '100px' }}>\r\n            <Container>\r\n                <Meta\r\n                    title=\"Agroic | Order\"\r\n                />\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col xs={12} md={6}>\r\n                        <CheckoutSteps step1 step2 step3 step4 />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <ListGroup variant='flush' className=\"mb-3\">\r\n                            <ListGroup.Item>\r\n                                <h1>Shipping</h1>\r\n                                <p>\r\n                                    <strong>Address : </strong>\r\n                                    {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                                    {cart.shippingAddress.postalCode},{' '}\r\n                                    {cart.shippingAddress.country}\r\n                                </p>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <p>\r\n                                    <strong>Method : </strong>\r\n                                    {cart.paymentMethod}\r\n                                </p>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {cart.cartItems.length === 0\r\n                                    ? <Message>Your cart is empty</Message>\r\n                                    : (\r\n                                        <ListGroup variant=\"flush\">\r\n                                            {\r\n                                                cart.cartItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n                                                            <Col>\r\n                                                                {item.name}\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                {`${item.qty} x RS. ${item.price} = RS. ${item.qty * item.price}`}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))\r\n                                            }\r\n                                        </ListGroup>\r\n                                    )\r\n                                }\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items</Col>\r\n                                        <Col>{`RS. ${cart.itemsPrice}`}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping</Col>\r\n                                        <Col>{`RS. ${cart.shippingPrice}`}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax</Col>\r\n                                        <Col>{`RS. ${cart.taxPrice}`}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item><ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total</Col>\r\n                                        <Col>{`RS. ${cart.totalPrice}`}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    {error && <ListGroup.Item>\r\n                                        <Message variant=\"danger\">{error}</Message>\r\n                                    </ListGroup.Item>\r\n                                    }\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        className=\"btn-block\"\r\n                                        disabled={cart.cartItems === 0}\r\n                                        onClick={placeOrder}\r\n                                    >Place Order</Button>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrder\r\n","import React from 'react'\r\nimport {\r\n    Container,\r\n    Row,\r\n    Card,\r\n    CardDeck,\r\n    Button\r\n} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport './CardMenuStyles.css'\r\n\r\nconst CardMenu = () => {\r\n    return (\r\n        <Container><Row>\r\n            <CardDeck className='card-deck'>\r\n                <Card border='primary'>\r\n                    <Card.Body>\r\n                        <Card.Title className='title'>Farmer</Card.Title>\r\n                        <Card.Text className='card-text'>If you are a farmer then you are at perfect platfrom from where you can order all of your farming related products and you can sell your production also.</Card.Text>\r\n                        <Link to='/farmer'>\r\n                            <Button variant=\"success\" className=\"btn-explore btn-md m-2\">EXPLORE MORE</Button>\r\n                        </Link>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card border='primary'>\r\n                    <Card.Body>\r\n                        <Card.Title className='title'>Supplier</Card.Title>\r\n                        <Card.Text className='card-text'>\r\n                            Sell your wide variety of products related to farming, through our platform. We have millions of farmers connected from all parts of country.\r\n                        </Card.Text>\r\n                        <Link to='login?redirect=supplier'>\r\n                            <Button variant=\"success\" className=\"btn-explore btn-md m-2\">EXPLORE MORE</Button>\r\n                        </Link>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card border='primary'>\r\n                    <Card.Body>\r\n                        <Card.Title className='title'>Consumer</Card.Title>\r\n                        <Card.Text className='card-text'>\r\n                            No need to visit field to get grains!!! Just order here and and get all kinds of grains deliverd at your doorstep. Why to wait? Go and order.\r\n                        </Card.Text>\r\n                        <Link to='/consumer'>\r\n                            <Button variant=\"success\" className=\"btn-explore btn-md m-2\">EXPLORE MORE</Button>\r\n                        </Link>\r\n                    </Card.Body>\r\n                </Card>\r\n            </CardDeck>\r\n        </Row></Container>\r\n    )\r\n}\r\n\r\nexport default CardMenu\r\n","import React from 'react'\r\nimport {\r\n    Col,\r\n    Container,\r\n    Row,\r\n    Image\r\n} from 'react-bootstrap'\r\nimport './ourSerices.css'\r\n\r\nconst OurServices = () => {\r\n    return (\r\n        <Container className=\"main\" fluid>\r\n            <h1 className=\"main-title\">COMPREHENSIVE SERVICES</h1>\r\n            <p className=\"description\">\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ac nunc non arcu aliquet sollicitudin. Sed elementum placerat ex. Donec a lectus vel lectus faucibus mattis.\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ac nunc non arcu aliquet sollicitudin. Sed elementum placerat ex. Donec a lectus vel lectus faucibus mattis\r\n            </p>\r\n            <Container className=\"services\">\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <h5 className=\"sub-title\">Heavy Machine</h5>\r\n                        <Image className=\"img\" src=\"images/services/heavy.svg\" fluid />\r\n                        <p className=\"sub-desc\">No need to worry of labour costing more. Just rent all types of machine here!!</p>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <h5 className=\"sub-title\">Gardening Kits</h5>\r\n                        <Image className=\"img\" src=\"images/services/gardening.svg\" fluid />\r\n                        <p className=\"sub-desc\">We provides all of the gardening related products i.e seeds, pestisides and heavy machine.</p>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <h5 className=\"sub-title\">Supplier</h5>\r\n                        <Image className=\"img\" src=\"images/services/supplier.svg\" fluid />\r\n                        <p className=\"sub-desc\">Now you produce. And we are here to sell your product. Just list your sell, and get proper pay for it.</p>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <h5 className=\"sub-title\">Consumer</h5>\r\n                        <Image className=\"img\" src=\"images/services/consumer.svg\" fluid />\r\n                        <p className=\"sub-desc\">Why to visit Super Store and Pay High? Order all products and get deliver at your doorstep.</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OurServices\r\n","const slider = [\r\n    {\r\n        title: \"We cultivate new crops to make farmers increase profits!\",\r\n        description: \"'' Agricultural growth is a proven driver of poverty reduction. When agriculture stimulates growth ... the growth is twice as effective in reducing poverty as growth based in other sectors ''\",\r\n        tag: \"GIZA MDOE\",\r\n        image: \"https://images.unsplash.com/photo-1574943320219-553eb213f72d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=682&q=80\",\r\n    },\r\n    {\r\n        title: \"Solutions for a healthier, sustainable future\",\r\n        description: \"'' Agriculture is the greatest and fundamentally the most important of our industries. The cities are but the branches of the tree of national life, the roots of which go deeply into the land. We all flourish or decline with the farmer. ''\",\r\n        tag: \"BERNARD BARUCH\",\r\n        image: \"https://images.unsplash.com/photo-1592982537447-7440770cbfc9?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1499&q=80\",\r\n    },\r\n    {\r\n        title: \"Helping farmers.Fighting climate change.\",\r\n        description: \"'' I know of no pursuit in which more real and important services can be rendered to any country than by improving its agriculture, its breed of useful animals, and other branches of a husbandman's cares. ''\",\r\n        tag: \"GEORGE WASHINGTON\",\r\n        image: \"https://images.unsplash.com/photo-1523348837708-15d4a09cfac2?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80\",\r\n    },\r\n];\r\n\r\nexport default slider;","import React, { useState, useEffect } from 'react';\r\nimport Slider from \"react-animated-slider\";\r\nimport data from './sliderData.js';\r\nimport \"react-animated-slider/build/horizontal.css\";\r\nimport \"normalize.css/normalize.css\";\r\nimport './styles/slider-animation.css';\r\nimport './styles/styles.css'\r\n\r\nconst SliderComponent = () => {\r\n\r\n    const [slider, setSlider] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setSlider(data)\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <Slider className=\"slider-wrapper\">\r\n                {slider.map((item, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className=\"slider-content\"\r\n                        style={{ background: `url('${item.image}') no-repeat center center`, marginTop: \"40px\" }}\r\n                    >\r\n                        <div className=\"inner\">\r\n                            <h1>{item.title}</h1>\r\n                            <p>{item.description} <br />- {item.tag.toLowerCase()}</p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </Slider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SliderComponent\r\n","import axios from 'axios'\r\nimport {\r\n    SUPPLIER_PRODUCT_CREATE_FAIL,\r\n    SUPPLIER_PRODUCT_CREATE_REQUEST,\r\n    SUPPLIER_PRODUCT_CREATE_SUCCESS,\r\n    SUPPLIER_PRODUCT_LIST_MY_REQUEST,\r\n    SUPPLIER_PRODUCT_LIST_MY_SUCCESS,\r\n    SUPPLIER_PRODUCT_LIST_MY_FAIL,\r\n    SUPPLIER_PRODUCT_LIST_REQUEST,\r\n    SUPPLIER_PRODUCT_LIST_SUCCESS,\r\n    SUPPLIER_PRODUCT_LIST_FAIL,\r\n    SUPPLIER_PRODUCT_REQUEST,\r\n    SUPPLIER_PRODUCT_SUCCESS,\r\n    SUPPLIER_PRODUCT_FAIL,\r\n    FARMER_PRODUCT_CREATE_REVIEW_REQUEST,\r\n    FARMER_PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    FARMER_PRODUCT_CREATE_REVIEW_FAIL,\r\n    SUPPLIER_PRODUCT_UPDATE_FAIL,\r\n    SUPPLIER_PRODUCT_UPDATE_REQUEST,\r\n    SUPPLIER_PRODUCT_UPDATE_SUCCESS,\r\n    SUPPLIER_PRODUCT_FOR_ALL_REQUEST,\r\n    SUPPLIER_PRODUCT_FOR_ALL_SUCCESS,\r\n    SUPPLIER_PRODUCT_FOR_ALL_FAIL\r\n} from './../constants/supplierConstant'\r\nimport { logout } from './userActions'\r\n\r\nexport const createSupplierProduct = ({\r\n    name,\r\n    email,\r\n    address,\r\n    cropSelection,\r\n    storage,\r\n    image,\r\n    phonenumber,\r\n    description\r\n}) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/supplier',\r\n            {\r\n                name,\r\n                email,\r\n                address,\r\n                cropSelection,\r\n                storage,\r\n                image,\r\n                phonenumber,\r\n                description\r\n            },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyProducts = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/supplier/myproducts`, config)\r\n\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_LIST_MY_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listSupplierProducts = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/supplier`, config)\r\n\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_LIST_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getroductsDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: SUPPLIER_PRODUCT_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/supplier/product/${id}`, config)\r\n\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: FARMER_PRODUCT_CREATE_REVIEW_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        await axios.post(`/api/supplier/product/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: FARMER_PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: FARMER_PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateReviewed = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/supplier/product/${product._id}/reviews`, product, config)\r\n\r\n        dispatch({ type: FARMER_PRODUCT_CREATE_REVIEW_SUCCESS })\r\n\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateSupplierProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/supplier/product/${product._id}/edit`, product, config)\r\n\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// For all\r\nexport const listSupplierProductsForAll = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_FOR_ALL_REQUEST,\r\n        })\r\n\r\n        const { data } = await axios.get(`/api/supplier/all`)\r\n\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_FOR_ALL_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: SUPPLIER_PRODUCT_FOR_ALL_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","const MapStyles = [\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#e9e9e9\"\r\n            },\r\n            {\r\n                \"lightness\": 17\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f5f5f5\"\r\n            },\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            },\r\n            {\r\n                \"lightness\": 17\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            },\r\n            {\r\n                \"lightness\": 29\r\n            },\r\n            {\r\n                \"weight\": 0.2\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            },\r\n            {\r\n                \"lightness\": 18\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            },\r\n            {\r\n                \"lightness\": 16\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f5f5f5\"\r\n            },\r\n            {\r\n                \"lightness\": 21\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi.park\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#dedede\"\r\n            },\r\n            {\r\n                \"lightness\": 21\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            },\r\n            {\r\n                \"lightness\": 16\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": 36\r\n            },\r\n            {\r\n                \"color\": \"#333333\"\r\n            },\r\n            {\r\n                \"lightness\": 40\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            },\r\n            {\r\n                \"lightness\": 19\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#fefefe\"\r\n            },\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#fefefe\"\r\n            },\r\n            {\r\n                \"lightness\": 17\r\n            },\r\n            {\r\n                \"weight\": 1.2\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default MapStyles","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Rating.css'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>{text && text}</span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#47cf38'\r\n}\r\n\r\nexport default Rating\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image } from 'react-bootstrap'\r\nimport {\r\n    GoogleMap,\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    Marker,\r\n    InfoWindow\r\n} from 'react-google-maps'\r\nimport Message from './../../components/Message/Message'\r\nimport Loader from './../../components/Loader/Loader'\r\nimport { listSupplierProductsForAll } from './../../actions/supplierProduct'\r\nimport MapStyles from './MapStyles'\r\nimport Rating from './Rating/Rating'\r\n\r\nconst Map = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [selectedPlace, setSelectedPlace] = useState(null)\r\n\r\n    const supplierProductForAllList = useSelector(state => state.supplierProductForAllList)\r\n    const { loading: loadingProducts, error: errorProducts, products } = supplierProductForAllList\r\n\r\n    useEffect(() => {\r\n        dispatch(listSupplierProductsForAll())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <GoogleMap\r\n            defaultCenter={{ lat: 6.927079, lng: 79.861244 }}\r\n            defaultZoom={10}\r\n            defaultOptions={{ styles: MapStyles }}\r\n        >\r\n            {\r\n                loadingProducts ? <Loader />\r\n                    : errorProducts\r\n                        ? <Message variant='danger'>{errorProducts}</Message>\r\n                        : (\r\n                            products.map(place => (\r\n                                <Marker\r\n                                    key={place._id}\r\n                                    position={{\r\n                                        lat: place.latitude,\r\n                                        lng: place.longitude\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        setSelectedPlace(place)\r\n                                    }}\r\n                                    icon={{\r\n                                        url: '/mapIcon.svg',\r\n                                        scaledSize: new window.google.maps.Size(25, 25)\r\n                                    }}\r\n                                />\r\n                            ))\r\n                        )\r\n\r\n            }\r\n            {\r\n                selectedPlace && (\r\n                    <InfoWindow\r\n                        position={{\r\n                            lat: selectedPlace.latitude,\r\n                            lng: selectedPlace.longitude\r\n                        }}\r\n                        onCloseClick={() => {\r\n                            setSelectedPlace(null)\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <Image className=\"mx-auto d-block img-fluid mb-1\" rounded width=\"120px\" src={selectedPlace.image} alt={selectedPlace.name} />\r\n                            <h4 style={{ textAlign: \"center\" }}>{selectedPlace.cropSelection}</h4>\r\n                            <p>\r\n                                Description: {selectedPlace.description}<br />\r\n                                {\r\n                                    selectedPlace.isReviwed\r\n                                        ? (<>\r\n                                            <p><Rating text=\"Rating\" value={selectedPlace.rating} /></p>\r\n                                        </>\r\n                                        )\r\n                                        : ''\r\n                                }\r\n                            </p>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )\r\n            }\r\n        </GoogleMap>\r\n\r\n    )\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\r\n\r\nexport default WrappedMap\r\n","import React from 'react'\r\nimport WrappedMap from './Map'\r\nimport { Scrollbar } from \"react-scrollbars-custom\";\r\n\r\nconst GenralMap = () => {\r\n    return (\r\n        <Scrollbar style={{ width: '100%', height: 500 }}>\r\n            <div style={{ width: '100%', height: '100vh' }}>\r\n                <WrappedMap\r\n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\r\n                    loadingElement={<div style={{ height: '100%' }} />}\r\n                    containerElement={<div style={{ height: '400px' }} />}\r\n                    mapElement={<div style={{ height: '100vh' }} />}\r\n                />\r\n            </div>\r\n        </Scrollbar>\r\n    )\r\n}\r\n\r\nexport default GenralMap\r\n","import React from 'react';\r\n\r\nimport CardMenu from '../../components/CardMenuSet/CardMenu';\r\nimport Meta from '../../components/Helmet/Meta';\r\nimport OurServices from '../../components/OurServices/OurServices';\r\nimport SliderComponent from '../../components/Slider/Slider';\r\nimport GenralMap from '../Map/GenralMap';\r\n\r\nconst HomeScreen = () => {\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            <SliderComponent />\r\n            <CardMenu />\r\n            <OurServices />\r\n            <GenralMap />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Card, Col, Button } from 'react-bootstrap';\r\nimport './ConsumerProduts.css'\r\n\r\nconst ConsumerProducts = ({ _id, prod_name, image, price, avalaible_location, prod_size }) => {\r\n    return (\r\n        <Col sm={12} md={6} lg={4}>\r\n            <Card className=\"my-3 p-3 \">\r\n                <Card.Img className=\"image mx-auto\" src={image} variant=\"top\" />\r\n                <Card.Body>\r\n                    <LinkContainer to={`/consumer/${_id}`}>\r\n                        <Card.Title className=\"prod-title\" as=\"div\">\r\n                            {prod_name}\r\n                        </Card.Title>\r\n                    </LinkContainer>\r\n                    <Card.Text as=\"h5\">\r\n                        Price: RS.{price} <br />Product Size: {prod_size}\r\n                    </Card.Text>\r\n                    <Card.Text as=\"p\">\r\n                        Location: <span style={{fontWeight:'bold'}}>{avalaible_location}</span>\r\n                    </Card.Text><br />\r\n                    <LinkContainer to={`/consumer/${_id}`}>\r\n                        <Button className=\"btn-preview\" varient=\"success\">Preview here</Button>\r\n                    </LinkContainer>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ConsumerProducts\r\n","import axios from 'axios'\r\nimport {\r\n    CONSUMER_PRODUCT_LIST_REQUEST,\r\n    CONSUMER_PRODUCT_LIST_SUCCESS,\r\n    CONSUMER_PRODUCT_LIST_FAIL,\r\n    CONSUMER_PRODUCT_DETAILS_REQUEST,\r\n    CONSUMER_PRODUCT_DETAILS_SUCCESS,\r\n    CONSUMER_PRODUCT_DETAILS_FAIL,\r\n    CONSUMER_DELETE_REQUEST,\r\n    CONSUMER_DELETE_SUCCESS,\r\n    CONSUMER_DELETE_FAIL,\r\n    CONSUMER_CREATE_REQUEST,\r\n    CONSUMER_CREATE_SUCCESS,\r\n    CONSUMER_CREATE_FAIL,\r\n    CONSUMER_UPDATE_REQUEST,\r\n    CONSUMER_UPDATE_SUCCESS,\r\n    CONSUMER_UPDATE_FAIL,\r\n    CONSUMER_UPDATE_RESET,\r\n} from './../constants/productConstants'\r\n\r\nexport const listConsumerProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CONSUMER_PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/consumer')\r\n\r\n        dispatch({\r\n            type: CONSUMER_PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CONSUMER_PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listConsumerProductsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CONSUMER_PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/consumer/${id}`)\r\n\r\n        dispatch({\r\n            type: CONSUMER_PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CONSUMER_PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteConsumerProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CONSUMER_DELETE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/consumer/${id}`, config)\r\n\r\n        dispatch({\r\n            type: CONSUMER_DELETE_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CONSUMER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createConsumer = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CONSUMER_CREATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/consumer/`, {}, config)\r\n\r\n        dispatch({\r\n            type: CONSUMER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CONSUMER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateConsumer = (consumer) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CONSUMER_UPDATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/consumer/${consumer._id}`, consumer, config)\r\n\r\n        dispatch({\r\n            type: CONSUMER_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({ type: CONSUMER_UPDATE_RESET })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CONSUMER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    Container,\r\n    Row,\r\n    Button,\r\n    Alert\r\n} from 'react-bootstrap';\r\nimport ConsumerProducts from './../../components/ConsumerProducts/ConsumerProducts'\r\nimport { listConsumerProducts } from './../../actions/consumerProductAction.js'\r\nimport Message from './../../components/Message/Message';\r\nimport Loader from './../../components/Loader/Loader';\r\nimport './ConsumerStyles.css'\r\nimport Meta from '../../components/Helmet/Meta';\r\n\r\nconst ConsumerScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const consumerProductList = useSelector(state => state.consumerProductList)\r\n    const { loading, consumerProducts, error } = consumerProductList\r\n\r\n    const [numberOfItems, setNumberOfItems] = useState(3);\r\n\r\n    useEffect(() => {\r\n        dispatch(listConsumerProducts())\r\n    }, [dispatch])\r\n\r\n    const showMore = () => {\r\n        if (numberOfItems + 3 <= consumerProducts.length) {\r\n            setNumberOfItems(numberOfItems + 3)\r\n        } else {\r\n            setNumberOfItems(consumerProducts.length)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"consumerProductScreen\">\r\n            <Meta\r\n                title=\"Agroic | Consumer\"\r\n            />\r\n            <Container className='consumerContainer'>\r\n                <h1 className=\"title\">CONSUMER</h1>\r\n                <h4 className=\"consumer-title\">\r\n                    No need to visit field to get grains!!! Just order here and and get all kinds of garins deliverd at your doorstep. Why to wait? Go and order.</h4>\r\n                <br />\r\n                {\r\n                    loading ? <Loader />\r\n                        : error ? <Message variant='danger'>{error}</Message>\r\n                            : (\r\n                                <Row>\r\n                                    {\r\n                                        consumerProducts\r\n                                            .slice(0, numberOfItems)\r\n                                            .map(consumer => (\r\n                                                <ConsumerProducts\r\n                                                    key={consumer._id}\r\n                                                    _id={consumer._id}\r\n                                                    prod_name={consumer.prod_name}\r\n                                                    seller_name={consumer.seller_name}\r\n                                                    image={consumer.image}\r\n                                                    price={consumer.price}\r\n                                                    prod_size={consumer.prod_size}\r\n                                                    avalaible_location={consumer.avalaible_location}\r\n                                                    quantity={consumer.quantity}\r\n                                                />\r\n                                            ))\r\n                                    }\r\n                                    {\r\n                                        numberOfItems >= consumerProducts.length\r\n                                            ? <Alert style={{ backgroundColor: 'red' }} className=\"col-md-12 text-center\">Finished</Alert>\r\n                                            : ''\r\n                                    }\r\n                                    <Button className=\"col-md-12 text-center\" variant=\"success outline-dark\" onClick={showMore}>Show more</Button>\r\n                                </Row>\r\n                            )\r\n                }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConsumerScreen\r\n","import React from 'react'\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardDeck,\r\n    Card,\r\n    Button\r\n} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Meta from '../../components/Helmet/Meta';\r\nimport './FarmerStyle.css'\r\n\r\nconst FarmerScreen = () => {\r\n    return (\r\n        <div>\r\n            <Meta\r\n                title=\"Agroic | Farmers\"\r\n            />\r\n            <Container className='farmerContainer'>\r\n                <h1 className='title'>FARMER</h1>\r\n                <h4 className=\"farmer-title\">If you are a farmer then you are at perfect platfrom from where you can order all of your farming related products and you can sell your production also.</h4>\r\n                <Row className=\"row-one justify\">\r\n                    <CardDeck>\r\n                        <Card border=\"primary\" style={{ width: '25rem' }}>\r\n                            <Card.Body>\r\n                                <Card.Title className=\"card-titile\">Purchase Seeds, Pesticides & Fertilizer</Card.Title>\r\n                                <LinkContainer to=\"/farmers/purchaseSeeds\">\r\n                                    <Button className=\"btn-explore btn-md m-2\">EXPLORE MORE</Button>\r\n                                </LinkContainer>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card border=\"primary\" style={{ width: '25rem' }}>\r\n                            <Card.Body>\r\n                                <Card.Title className=\"card-titile\">Sell Your Producing Material through Us</Card.Title>\r\n                                <LinkContainer to=\"/login?redirect=supplier\">\r\n                                    <Button className=\"btn-explore btn-md m-2\">EXPLORE MORE</Button>\r\n                                </LinkContainer>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card border=\"primary\" style={{ width: '25rem' }}>\r\n                            <Card.Body>\r\n                                <Card.Title className=\"card-titile\">Lend All of Heavy Machine And Tractros</Card.Title>\r\n                                <LinkContainer to=\"/farmers/lendMachines\">\r\n                                    <Button className=\"btn-explore btn-md m-2\">EXPLORE MORE</Button>\r\n                                </LinkContainer>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </CardDeck>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FarmerScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    Form,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Container,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Message from './../../components/Message/Message'\r\nimport Loader from './../../components/Loader/Loader'\r\nimport { createSupplierProduct } from '../../actions/supplierProduct'\r\n\r\nconst AddSupplierProduct = () => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [cropSelection, setCropSelection] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [phonenumber, setPhonenumber] = useState('')\r\n    const [storage, setStorage] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading, success, error } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n    }, [userInfo, history, dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createSupplierProduct({\r\n            name,\r\n            email,\r\n            address,\r\n            cropSelection,\r\n            storage,\r\n            image,\r\n            phonenumber,\r\n            description,\r\n        })\r\n        )\r\n\r\n        setName('')\r\n        setEmail('')\r\n        setImage('')\r\n        setAddress('')\r\n        setCropSelection('')\r\n        setPhonenumber('')\r\n        setStorage('')\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {success && <Message variant='success'>Your product has been submitted</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Row>\r\n                    <Col md={5}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                placeholder=\"Enter name\"\r\n                                value={name}\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address / NIC <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"nic\"\r\n                                placeholder=\"Enter email or NIC\"\r\n                                value={email}\r\n                                required\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='address'>\r\n                            <Form.Label>Address <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"address\"\r\n                                as=\"textarea\" rows={1}\r\n                                placeholder=\"Enter address\"\r\n                                value={address}\r\n                                required\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='cropSelection'>\r\n                            <Form.Label>Crop Selection <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"cropSelection\"\r\n                                placeholder=\"Enter crop selection\"\r\n                                value={cropSelection}\r\n                                required\r\n                                onChange={(e) => setCropSelection(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='storage'>\r\n                            <Form.Label>Product Size <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"storage\"\r\n                                placeholder=\"Enter size (kg)\"\r\n                                value={storage}\r\n                                required\r\n                                onChange={(e) => setStorage(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={5}>\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter image url\"\r\n                                value={image}\r\n                                required\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                            ></Form.Control>\r\n                            <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            ></Form.File>\r\n                            {uploading && <Loader />}\r\n                        </Form.Group>\r\n                        <Form.Group controlId='phonenumber'>\r\n                            <Form.Label>Phone Number <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"phonenumber\"\r\n                                placeholder=\"Enter phonenumber\"\r\n                                value={phonenumber}\r\n                                required\r\n                                onChange={(e) => setPhonenumber(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\" rows={3}\r\n                                type=\"description\"\r\n                                placeholder=\"Enter description\"\r\n                                value={description}\r\n                                required\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <br />\r\n                        <Button type=\"submit\" variant=\"primary\">Submit</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AddSupplierProduct\r\n\r\n","import React from 'react'\r\nimport {\r\n    Container,\r\n} from 'react-bootstrap';\r\nimport Meta from '../../components/Helmet/Meta';\r\nimport AddSupplierProduct from '../../components/SupplierProduct/AddSupplierProduct';\r\nimport './supplierStyles.css'\r\n\r\nconst SupplierScreen = () => {\r\n    return (\r\n        <Container className='supplierContainer'>\r\n            <Meta\r\n                title=\"Agroic | Supplier\"\r\n            />\r\n            <h1 className='title'>SUPPLIER</h1>\r\n            <h4 className=\"supplier-title\">\r\n                Sell your wide variety of products related to farming, through our platform. We have millions of farmers connected from all parts of country.</h4>\r\n            <br />\r\n            <AddSupplierProduct />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SupplierScreen","import React, { useState, useEffect, useRef } from 'react'\r\nimport {\r\n    Form,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Table,\r\n    Image,\r\n    Overlay,\r\n    Popover\r\n} from 'react-bootstrap'\r\nimport { Scrollbar } from \"react-scrollbars-custom\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../components/Message/Message'\r\nimport Loader from './../../components/Loader/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../../actions/userActions'\r\nimport { listMyOrders } from './../../actions/orderAction'\r\nimport { listMyProducts } from './../../actions/supplierProduct'\r\nimport Meta from '../../components/Helmet/Meta';\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n    const ref = useRef(null);\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [cropSelection, setCropSelection] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, user, error } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    const supplierProdictListMy = useSelector(state => state.supplierProdictListMy)\r\n    const { loading: loadingProducts, error: errorProducts, products } = supplierProdictListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n                dispatch(listMyProducts())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setCropSelection(user.cropSelection)\r\n            }\r\n        }\r\n    }, [userInfo, history, user, dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password, cropSelection }))\r\n        }\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n\r\n    };\r\n\r\n    return (\r\n        <Container fluid style={{ marginBottom: '50px' }}>\r\n            <Meta\r\n                title=\"Agroic | Profile\"\r\n            />\r\n            <Row>\r\n                <Col md={3}>\r\n                    <h2 style={{ marginTop: '110px' }}>User Profile</h2>\r\n                    {message && <Message variant='danger'>{message}</Message>}\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                    {success && <Message variant='success'>Profile Updated!</Message>}\r\n                    {loading && <Loader />}\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                placeholder=\"Enter name\"\r\n                                value={name}\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address / NIC <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"nic\"\r\n                                placeholder=\"Enter email or NIC\"\r\n                                value={email}\r\n                                required\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='cropSelection'>\r\n                            <Form.Label>Crop Selection (optional)</Form.Label>\r\n                            <Form.Control\r\n                                type=\"cropSelection\"\r\n                                placeholder=\"Enter cropSelection\"\r\n                                value={cropSelection}\r\n                                onChange={(e) => setCropSelection(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Enter password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='confirmPassword'>\r\n                            <Form.Label>Confirm password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"primary\">Update</Button>\r\n                    </Form>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <Scrollbar style={{ width: '100%', height: 630 }}>\r\n                        <Container fluid>\r\n                            <Row>\r\n                                <h2 style={{ marginTop: '110px' }}>My Orders</h2>\r\n                                {loadingOrders ? <Loader />\r\n                                    : errorOrders ? <Message variant=\"danger\">{errorOrders}</Message>\r\n                                        : (\r\n                                            <Table striped bordered hover responsive className=\"table-sm\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>ID</th>\r\n                                                        <th>DATE</th>\r\n                                                        <th>TOTAL</th>\r\n                                                        <th>PAID</th>\r\n                                                        <th>DELIVERED</th>\r\n                                                        <th>MORE</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {orders.map(order => (\r\n                                                        <tr key={order._id}>\r\n                                                            <td>{order._id}</td>\r\n                                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                                            <td>{order.totalPrice}</td>\r\n                                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) :\r\n                                                                <i className=\"fas fa-times\" styles={{ color: \"red\" }}></i>\r\n                                                            }</td>\r\n                                                            <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) :\r\n                                                                <i className=\"fas fa-times\" styles={{ color: 'red' }}></i>\r\n                                                            }</td>\r\n                                                            <td>\r\n                                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                                    <Button className=\"btn-sm\" variant=\"success\">Details</Button>\r\n                                                                </LinkContainer>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    ))}\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        )\r\n                                }\r\n                            </Row>\r\n                            <Row>\r\n                                <h2 style={{ marginTop: '110px' }}>My Products</h2>\r\n                                {loadingProducts ? <Loader />\r\n                                    : errorProducts ? <Message variant=\"danger\">{errorProducts}</Message>\r\n                                        : (\r\n                                            <Table striped bordered hover responsive className=\"table-sm\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>NAME</th>\r\n                                                        <th>EMAIL/NIC</th>\r\n                                                        <th>ADDRESS</th>\r\n                                                        <th>IMAGE</th>\r\n                                                        <th>CROP</th>\r\n                                                        <th>REVIEWED</th>\r\n                                                        <th>EDIT</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {products.map(product => (\r\n                                                        <tr key={product._id}>\r\n                                                            <td>{product.name}</td>\r\n                                                            <td>{product.email}</td>\r\n                                                            <td>{product.address}</td>\r\n                                                            <td>\r\n                                                                <Image width={70} rounded src={product.image} />\r\n                                                            </td>\r\n                                                            <td>{product.cropSelection}</td>\r\n                                                            <td style={{ textAlign: \"center\" }}>\r\n                                                                {\r\n                                                                    product.isReviwed ? (\r\n                                                                        <Button\r\n                                                                            className=\"mt-2\"\r\n                                                                            ref={target}\r\n                                                                            onClick={handleClick}\r\n                                                                        > Check\r\n                                                                        </Button>\r\n                                                                    ) : <i className=\"fas fa-times\" style={{ color: 'red', fontSize: '24px' }}></i>\r\n                                                                }\r\n                                                                <Overlay\r\n                                                                    show={show}\r\n                                                                    target={target}\r\n                                                                    placement=\"bottom\"\r\n                                                                    container={ref.current}\r\n                                                                    containerPadding={10}\r\n                                                                >\r\n                                                                    <Popover id=\"popover-contained\">\r\n                                                                        <Popover.Title as=\"h3\">Rating: {product.rating}</Popover.Title>\r\n                                                                        {\r\n                                                                            product.reviews.map(review => (\r\n                                                                                <Popover.Content key={review._id}>\r\n                                                                                    <strong>Feedback: {review.comment}</strong>\r\n                                                                                </Popover.Content>\r\n                                                                            ))\r\n                                                                        }\r\n                                                                    </Popover>\r\n                                                                </Overlay>\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <LinkContainer to={`/supplierproducts/${product._id}/edit`}>\r\n                                                                    <Button variant=\"light\" className=\"btn btn-sm\">\r\n                                                                        <i className=\"fas fa-edit\"></i>\r\n                                                                    </Button>\r\n                                                                </LinkContainer>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    ))}\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        )\r\n                                }\r\n                            </Row>\r\n                        </Container>\r\n                    </Scrollbar>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen \r\n","import React from 'react'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport './SideBar.css'\r\n\r\nconst SideBarComponents = () => {\r\n    return (\r\n        <div className=\"sidebar\" style={{ marginTop: \"10px\", marginBottom: \"60px\" }}>\r\n            <ListGroup className=\"list-group-sidebar\">\r\n                <LinkContainer className='link-contain' to='/admin/dashboard'>\r\n                    <ListGroup.Item className=\"border-0 item\">\r\n                        <i className=\"fas icon-fas fa-chart-line\"></i> Dashboard\r\n                    </ListGroup.Item>\r\n                </LinkContainer>\r\n                <LinkContainer className='link-contain' to='/admin/profile'>\r\n                    <ListGroup.Item className=\"border-0 item\">\r\n                        <i className=\"fas icon-fas fa-user-alt\"></i> Profile\r\n                    </ListGroup.Item>\r\n                </LinkContainer>\r\n                <LinkContainer className='link-contain' to='/admin/userlist'>\r\n                    <ListGroup.Item className=\"border-0 item\">\r\n                        <i className=\"fas icon-fas fa-users-cog\"></i> User List\r\n                    </ListGroup.Item>\r\n                </LinkContainer>\r\n                <LinkContainer className='link-contain' to='/admin/productlist'>\r\n                    <ListGroup.Item className=\"border-0 item\">\r\n                        <i className=\"fas icon-fas fa-list\"></i>Product List\r\n                    </ListGroup.Item>\r\n                </LinkContainer>\r\n                <LinkContainer className='link-contain' to='/admin/orderlist'>\r\n                    <ListGroup.Item className=\"border-0 item\">\r\n                        <i className=\"fas icon-fas fa-sort-amount-up-alt\"></i>Order List\r\n                    </ListGroup.Item>\r\n                </LinkContainer>\r\n                <LinkContainer className='link-contain' to='/admin/supplierproducts'>\r\n                    <ListGroup.Item className=\"border-0 item\">\r\n                    <i className=\"fas icon-fas fa-seedling\"></i>Harvest\r\n                    </ListGroup.Item>\r\n                </LinkContainer>\r\n                <LinkContainer className='link-contain' to='/admin/map'>\r\n                    <ListGroup.Item className=\"border-0 item\">\r\n                        <i className=\"fas icon-fas fa-map-marker-alt\"></i>Map\r\n                    </ListGroup.Item>\r\n                </LinkContainer>\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBarComponents\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Card, Row, Col } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { listUsers } from '../../../../actions/userActions'\r\nimport { listOrders } from '../../../../actions/orderAction'\r\nimport './StatCard.css'\r\n\r\nconst StatCards = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const [userCount, setUserCount] = useState(0)\r\n    const [orderCount, setOrderCount] = useState(0)\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { orders } = orderList\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n            dispatch(listOrders())\r\n\r\n            const userLen = users.length;\r\n            const orderLen = orders.length;\r\n\r\n            setUserCount(userLen)\r\n            setOrderCount(orderLen)\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, userInfo, history])\r\n\r\n    return (\r\n        <Row>\r\n            <Card className=\"card-set-deck\" border=\"primary\" style={{ width: '16rem' }}>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col>\r\n                            <i className=\"fas card-icon fa-users\"></i>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <Card.Text>\r\n                                    <span className=\"card-text-name\">All Users</span>\r\n                                </Card.Text>\r\n                            </Row>\r\n                            <Row>\r\n                                <Card.Text>\r\n                                    <span className=\"card-count\">{userCount}</span>\r\n                                </Card.Text>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <Card className=\"card-set-deck\" border=\"primary\" style={{ width: '16rem' }}>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col>\r\n                            <i className=\"fas fa-sort-amount-down-alt\"></i>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <Card.Text>\r\n                                    <span className=\"card-text-name\">All Orders</span>\r\n                                </Card.Text>\r\n                            </Row>\r\n                            <Row>\r\n                                <Card.Text>\r\n                                    <span className=\"card-count\">{orderCount}</span>\r\n                                </Card.Text>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <Card className=\"card-set-deck\" border=\"primary\" style={{ width: '16rem' }}>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col>\r\n                            <i className=\"fas fa-truck\"></i>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <Card.Text>\r\n                                    <span className=\"card-text-name\">Delivered</span>\r\n                                </Card.Text>\r\n                            </Row>\r\n                            <Row>\r\n                                <Card.Text>\r\n                                    <span className=\"card-count\">{orderCount}\r\n                                    </span>\r\n                                </Card.Text>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default StatCards\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Message from '../../../Message/Message'\r\nimport Loader from '../../../Loader/Loader'\r\nimport { listOrders } from '../../../../actions/orderAction'\r\n\r\nconst BarChart = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error } = orderList\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    const data = {\r\n        labels: ['December', 'January'],\r\n        datasets: [\r\n            {\r\n                label: 'Order List',\r\n                backgroundColor: 'rgba(255,99,132,0.2)',\r\n                borderColor: 'rgba(255,99,132,1)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                hoverBorderColor: 'rgba(255,99,132,1)',\r\n                data: [1, 5, 0]\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <Container style={{ marginTop: \"40px\" }}>\r\n            <h4>Orders</h4>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Bar\r\n                            data={data}\r\n                            width={100}\r\n                            height={180}\r\n                            options={{\r\n                                maintainAspectRatio: false\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BarChart\r\n","import React, { useEffect } from 'react'\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../../components/Message/Message'\r\nimport Loader from './../../../../components/Loader/Loader'\r\nimport { listSupplierProducts } from './../../../../actions/supplierProduct'\r\n\r\nconst data = {\r\n    labels: ['paddy', 'seeds', 'fruits'],\r\n    datasets: [{\r\n        data: [2, 1, 3],\r\n        backgroundColor: [\r\n            '#FF6384',\r\n            '#36A2EB',\r\n            '#FFCE56'\r\n        ],\r\n        hoverBackgroundColor: [\r\n            '#FF6384',\r\n            '#36A2EB',\r\n            '#FFCE56'\r\n        ]\r\n    }]\r\n};\r\n\r\nconst DoughnutComponent = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const supplierProductList = useSelector(state => state.supplierProductList)\r\n    const { loading: loadingProducts, error: errorProducts } = supplierProductList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo.isAdmin && !userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listSupplierProducts())\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <h4 style={{ marginTop: \"40px\", textAlign: \"center\" }}>Suppliers</h4>\r\n            {loadingProducts ? <Loader />\r\n                : errorProducts ? <Message variant='danger'>{errorProducts}</Message>\r\n                    : (\r\n                        <Doughnut data={data} />\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DoughnutComponent\r\n","import React, { useEffect } from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../../components/Message/Message'\r\nimport Loader from './../../../../components/Loader/Loader'\r\nimport { listUsers } from './../../../../actions/userActions'\r\n\r\nconst data = {\r\n    labels: ['December', 'January'],\r\n    datasets: [\r\n        {\r\n            label: 'Users of Months',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [1, 4, 0, 8]\r\n        }\r\n    ]\r\n};\r\n\r\nconst LineChart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <h4 style={{ marginTop: \"40px\", textAlign: \"center\" }}>Users</h4>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Line data={data} />\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import React from 'react'\r\nimport {\r\n    Col,\r\n    Container,\r\n    Row,\r\n} from 'react-bootstrap'\r\nimport './listStyles.css'\r\nimport { Scrollbar } from \"react-scrollbars-custom\";\r\nimport StatCards from './StatCards/StatCards';\r\nimport Bar from './BarChart/Bar';\r\nimport DoughnutComponent from './Doughnut/Doughnut';\r\nimport LineChart from './LineChart/LineChart';\r\n\r\nconst StatisticsList = () => {\r\n    return (\r\n        <Scrollbar style={{ width: '100%', height: 500 }}>\r\n            <Container>\r\n                <Row className=\"list-container\">\r\n                    <StatCards />\r\n                </Row>\r\n                <Row>\r\n                    <Bar />\r\n                </Row>\r\n                <Row style={{ marginBottom: \"50px\"}}>\r\n                    <Col md={6}>\r\n                        <LineChart />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <DoughnutComponent />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Scrollbar>\r\n    )\r\n}\r\n\r\nexport default StatisticsList\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\r\nimport StatisticsList from '../../components/DashBoard/Statistics/StatisticsList';\r\nimport Meta from '../../components/Helmet/Meta';\r\n\r\nconst DashboardScreen = () => {\r\n    return (\r\n        <div style={{ marginTop: \"110px\" }}>\r\n            <Meta\r\n                title=\"Agroic | Admin Dashboard\"\r\n            />\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <h4>Dashboard</h4>\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <h4 style={{ marginLeft: \"30px\" }}>Overall Statistics</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <SideBarComponents />\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <StatisticsList />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Form,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Container,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../components/Message/Message'\r\nimport Loader from './../../../components/Loader/Loader'\r\nimport { getUserDetails, updateUserProfile } from './../../../actions/userActions'\r\nimport { listMyOrders } from './../../../actions/orderAction'\r\n\r\nconst EditProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [cropSelection, setCropSelection] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, user, error } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setCropSelection(user.cropSelection)\r\n            }\r\n        }\r\n    }, [userInfo, history, user, dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password, cropSelection }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container style={{ marginBottom: '50px', marginTop: '20px' }}>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile Updated!</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Row>\r\n                    <Col md={5}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"name\"\r\n                                placeholder=\"Enter name\"\r\n                                value={name}\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address / NIC <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email or NIC\"\r\n                                value={email}\r\n                                required\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='cropSelection'>\r\n                            <Form.Label>Crop Selection (optional)</Form.Label>\r\n                            <Form.Control\r\n                                type=\"cropSelection\"\r\n                                placeholder=\"Enter cropSelection\"\r\n                                value={cropSelection}\r\n                                onChange={(e) => setCropSelection(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={5}>\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Enter password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='confirmPassword'>\r\n                            <Form.Label>Confirm password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button type=\"submit\" variant=\"primary\">Update</Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default EditProfile \r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport EditProfile from '../../components/DashBoard/Profile/EditProfile'\r\nimport Meta from '../../components/Helmet/Meta'\r\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\r\n\r\nconst ProfileScreen = () => {\r\n    return (\r\n        <div style={{ marginTop: \"110px\" }}>\r\n            <Meta\r\n                title=\"Agroic | Admin Profile\"\r\n            />\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <h4>Admin Profile</h4>\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <h4 style={{ marginLeft: \"30px\" }}>Edit Profile</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <SideBarComponents />\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <EditProfile />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Rating.css'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.propTypes ={\r\n    value: PropTypes.number,\r\n    text: PropTypes.string.isRequired, \r\n    color: PropTypes.string,\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#47cf38'\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Card, Col, Button } from 'react-bootstrap';\r\nimport './PurchaseSeeds.css'\r\nimport Rating from '../Rating/Rating';\r\n\r\nconst PurchaseSeeds = ({ _id, name, rating, image, reviews, price }) => {\r\n    return (\r\n        <Col sm={12} md={6} lg={4}>\r\n            <Card className=\"my-3 p-3 \">\r\n                <Card.Img className=\"image card-image mx-auto\" src={image} variant=\"top\" />\r\n                <Card.Body>\r\n                    <LinkContainer to={`/farmers/purchaseSeeds/${_id}`}>\r\n                        <Card.Title className=\"title\">\r\n                            <strong>{name}</strong>\r\n                        </Card.Title>\r\n                    </LinkContainer>\r\n                    <Card.Text>\r\n                        <Rating\r\n                            value={rating}\r\n                            text={`${reviews} reviews`}\r\n                        />\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        <h4>RS.{price}</h4>\r\n                    </Card.Text>\r\n                    <LinkContainer to={`/farmers/purchaseSeeds/${_id}`}>\r\n                        <Button className=\"btn-preview\" varient=\"success\">Preview here</Button>\r\n                    </LinkContainer>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default PurchaseSeeds\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_SEED_LIST_REQUEST,\r\n    PRODUCT_SEED_LIST_SUCCESS,\r\n    PRODUCT_SEED_LIST_FAIL,\r\n    PRODUCT_SEED_DETAILS_REQUEST,\r\n    PRODUCT_SEED_DETAILS_SUCCESS,\r\n    PRODUCT_SEED_DETAILS_FAIL,\r\n    SEED_DELETE_REQUEST,\r\n    SEED_DELETE_SUCCESS,\r\n    SEED_DELETE_FAIL,\r\n    SEED_CREATE_REQUEST,\r\n    SEED_CREATE_SUCCESS,\r\n    SEED_CREATE_FAIL,\r\n    SEED_UPDATE_REQUEST,\r\n    SEED_UPDATE_FAIL,\r\n    SEED_UPDATE_SUCCESS,\r\n    SEED_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL\r\n} from './../constants/productConstants.js'\r\nimport { logout } from './userActions'\r\n\r\nexport const listSeedProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_SEED_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/seeds')\r\n\r\n        dispatch({\r\n            type: PRODUCT_SEED_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_SEED_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listSeedProductsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_SEED_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/seeds/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_SEED_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_SEED_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteSeedProducts = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: SEED_DELETE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/seeds/${id}`, config)\r\n\r\n        dispatch({\r\n            type: SEED_DELETE_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SEED_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createSeedProducts = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: SEED_CREATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/seeds`, {}, config)\r\n\r\n        dispatch({\r\n            type: SEED_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SEED_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateSeedProducts = (seed) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: SEED_UPDATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/seeds/${seed._id}`, seed, config)\r\n\r\n        dispatch({\r\n            type: SEED_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({ type: SEED_UPDATE_RESET })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SEED_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n    dispatch,\r\n    getState\r\n  ) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      await axios.post(`/api/seeds/${productId}/reviews`, review, config)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Container, Row, Button, Alert } from 'react-bootstrap'\r\nimport PurchaseSeeds from '../../components/PurchaseSeeds/PurchaseSeeds';\r\nimport './Farmer_ProductSeedStyles.css'\r\n\r\nimport Message from './../../components/Message/Message';\r\nimport Loader from './../../components/Loader/Loader';\r\n\r\nimport { listSeedProducts } from './../../actions/productSeedActions'\r\nimport Meta from '../../components/Helmet/Meta';\r\n\r\nconst Farmer_ProductSeedScreen = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const prodcutSeedList = useSelector(state => state.prodcutSeedList)\r\n    const { loading, error, productSeeds } = prodcutSeedList\r\n\r\n    const [numberOfItems, setNumberOfItems] = useState(3);\r\n\r\n    useEffect(() => {\r\n        dispatch(listSeedProducts())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch])\r\n\r\n    const showMore = () => {\r\n        if (numberOfItems + 3 <= productSeeds.length) {\r\n            setNumberOfItems(numberOfItems + 3)\r\n        } else {\r\n            setNumberOfItems(productSeeds.length)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"ProductSeedScreen\">\r\n            <Meta\r\n                title=\"Agroic | Farmer Seeds\"\r\n            />\r\n            <Container>\r\n                <h1 className=\"p-3\" style={{ textAlign: 'center' }}>Latest Seeds</h1>\r\n                {\r\n                    loading\r\n                        ? <Loader />\r\n                        : error ? <Message variant='danger'>{error}</Message>\r\n                            :\r\n                            (<Row>\r\n                                {\r\n                                    productSeeds\r\n                                        .slice(0, numberOfItems)\r\n                                        .map(seed => (\r\n                                            <PurchaseSeeds\r\n                                                key={seed._id}\r\n                                                _id={seed._id}\r\n                                                name={seed.name}\r\n                                                image={seed.image}\r\n                                                rating={seed.rating}\r\n                                                reviews={seed.numReviews}\r\n                                                price={seed.price}\r\n                                            />\r\n                                        ))\r\n                                }\r\n                                {\r\n                                    numberOfItems >= productSeeds.length\r\n                                        ? <Alert style={{ backgroundColor: 'red' }} className=\"col-md-12 text-center\">Finished</Alert>\r\n                                        : ''\r\n                                }\r\n                                <Button className=\"col-md-12 text-center\" variant=\"success outline-dark\" onClick={showMore}>Show more</Button>\r\n                            </Row>)\r\n                }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Farmer_ProductSeedScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport Rating from '../../components/Rating/Rating';\r\nimport {\r\n    Col,\r\n    Container,\r\n    Row,\r\n    Image,\r\n    ListGroup,\r\n    Card,\r\n    Button,\r\n    Form\r\n} from 'react-bootstrap';\r\nimport './SeedProduct.css'\r\n\r\nimport { listSeedProductsDetails, createProductReview } from './../../actions/productSeedActions'\r\nimport Loader from '../../components/Loader/Loader';\r\nimport Message from '../../components/Message/Message';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../../constants/productConstants'\r\nimport Meta from '../../components/Helmet/Meta';\r\n\r\nconst SeedProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1);\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const prodcutSeedDetails = useSelector(state => state.prodcutSeedDetails)\r\n    const { loading, error, productSeed } = prodcutSeedDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n    const {\r\n        success: successProductReview,\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n        }\r\n        if (!productSeed._id || productSeed._id !== match.params.id) {\r\n            dispatch(listSeedProductsDetails(match.params.id))\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            createProductReview(match.params.id, {\r\n                rating,\r\n                comment,\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"productScreen\">\r\n            <Meta\r\n                title=\"Agroic | Seed\"\r\n            />\r\n            <Container>\r\n                <Link className=\"btn btn-go-back btn-dark\" to=\"/farmers/purchaseSeeds\">GO BACK</Link>\r\n                {\r\n                    loading ?\r\n                        <Loader />\r\n                        : error\r\n                            ? <Message variant='danger'>{error}</Message>\r\n                            : (\r\n                                <Row className=\"p-3 seed-product\" >\r\n                                    <Col md={6}>\r\n                                        <Image className=\"mx-auto image-seed\" src={productSeed.image} alt={productSeed.name} width={350} />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <ListGroup className=\"borderless\" variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <h2>{productSeed.name}</h2>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Rating value={productSeed.rating} text={`${productSeed.numReviews} reviews`} />\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <h4>Price: {productSeed.price}</h4>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <p><span style={{fontWeight:\"bold\"}}>Description:</span><br /> {productSeed.description}</p>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Card>\r\n                                            <ListGroup variant='flush'>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Price:</Col>\r\n                                                        <Col><strong>RS. {productSeed.price}</strong></Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Status:</Col>\r\n                                                        <Col>\r\n                                                            {productSeed.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                {\r\n                                                    productSeed.countInStock > 0 && (\r\n                                                        <ListGroup.Item>\r\n                                                            <Row>\r\n                                                                <Col>Qty</Col>\r\n                                                                <Col>\r\n                                                                    <Form.Control as='select' value={qty} onChange={(e => setQty(e.target.value))}>\r\n                                                                        {\r\n                                                                            [...Array(productSeed.countInStock).keys()]\r\n                                                                                .map(x =>\r\n                                                                                    <option\r\n                                                                                        key={x + 1}\r\n                                                                                        value={x + 1}\r\n                                                                                    >{x + 1}</option>)\r\n                                                                        }\r\n                                                                    </Form.Control>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </ListGroup.Item>\r\n                                                    )\r\n                                                }\r\n                                                <ListGroup.Item>\r\n                                                    <Button type=\"button\" className=\"btn btn-block\" onClick={addToCartHandler}>Add To Cart</Button>\r\n                                                </ListGroup.Item>\r\n                                            </ListGroup>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                }\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <h2>Reviews</h2>\r\n                        {productSeed.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                        <ListGroup variant='flush'>\r\n                            {productSeed.reviews.map((review) => (\r\n                                <ListGroup.Item key={review._id}>\r\n                                    <strong>{review.name}</strong>\r\n                                    <Rating value={review.rating} />\r\n                                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                                    <p>{review.comment}</p>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>\r\n                                <h2>Write a Customer Review</h2>\r\n                                {successProductReview && (\r\n                                    <Message variant='success'>\r\n                                        Review submitted successfully\r\n                                    </Message>\r\n                                )}\r\n                                {loadingProductReview && <Loader />}\r\n                                {errorProductReview && (\r\n                                    <Message variant='danger'>{errorProductReview}</Message>\r\n                                )}\r\n                                {userInfo ? (\r\n                                    <Form onSubmit={submitHandler}>\r\n                                        <Form.Group controlId='rating'>\r\n                                            <Form.Label>Rating</Form.Label>\r\n                                            <Form.Control\r\n                                                as='select'\r\n                                                value={rating}\r\n                                                onChange={(e) => setRating(e.target.value)}\r\n                                            >\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Poor</option>\r\n                                                <option value='2'>2 - Fair</option>\r\n                                                <option value='3'>3 - Good</option>\r\n                                                <option value='4'>4 - Very Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId='comment'>\r\n                                            <Form.Label>Comment</Form.Label>\r\n                                            <Form.Control\r\n                                                as='textarea'\r\n                                                row='3'\r\n                                                value={comment}\r\n                                                onChange={(e) => setComment(e.target.value)}\r\n                                            ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Button\r\n                                            disabled={loadingProductReview}\r\n                                            type='submit'\r\n                                            variant='primary'\r\n                                        >Submit</Button>\r\n                                    </Form>\r\n                                ) : (\r\n                                        <p>\r\n                                            Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                                        </p>\r\n                                    )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <br /><br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeedProductScreen\r\n","import React from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Card, Col, Button } from 'react-bootstrap';\r\nimport './LendMachines.css'\r\n\r\nconst LendMachines = ({ _id, name, image, targetPlant, price }) => {\r\n    return (\r\n        <Col sm={12} md={6} lg={4}>\r\n            <Card className=\"my-3 p-3\">\r\n                <Card.Img className=\"image card-image mx-auto\" src={image} variant=\"top\" />\r\n                <Card.Body>\r\n                    <LinkContainer to={`/farmers/lendMachines/${_id}`}>\r\n                        <Card.Title className=\"title\">\r\n                            <strong>{name}</strong>\r\n                        </Card.Title>\r\n                    </LinkContainer>\r\n                    <Card.Text>\r\n                        <span style={{fontWeight:\"bold\"}}>Target Plants </span><br /> {targetPlant}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        <h3>RS.{price}</h3>\r\n                    </Card.Text>\r\n                    <LinkContainer to={`/farmers/lendMachines/${_id}`}>\r\n                        <Button className=\"btn-preview\" varient=\"success\">Preview here</Button>\r\n                    </LinkContainer>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default LendMachines\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_MACHINE_LIST_REQUEST,\r\n    PRODUCT_MACHINE_LIST_SUCCESS,\r\n    PRODUCT_MACHINE_LIST_FAIL,\r\n    PRODUCT_MACHINE_DETAILS_REQUEST,\r\n    PRODUCT_MACHINE_DETAILS_SUCCESS,\r\n    PRODUCT_MACHINE_DETAILS_FAIL,\r\n    MACHINE_DELETE_REQUEST,\r\n    MACHINE_DELETE_SUCCESS,\r\n    MACHINE_DELETE_FAIL,\r\n    MACHINE_CREATE_REQUEST,\r\n    MACHINE_CREATE_SUCCESS,\r\n    MACHINE_CREATE_FAIL,\r\n    MACHINE_UPDATE_REQUEST,\r\n    MACHINE_UPDATE_SUCCESS,\r\n    MACHINE_UPDATE_FAIL,\r\n    MACHINE_UPDATE_RESET,\r\n} from './../constants/productConstants.js'\r\n\r\nexport const listLendMachineProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_MACHINE_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/lendMachines')\r\n\r\n        dispatch({\r\n            type: PRODUCT_MACHINE_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_MACHINE_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listLendMachineProductsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_MACHINE_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/lendMachines/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_MACHINE_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_MACHINE_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteLendMachineProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: MACHINE_DELETE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/lendMachines/${id}`, config)\r\n\r\n        dispatch({\r\n            type: MACHINE_DELETE_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MACHINE_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createLendMachine = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: MACHINE_CREATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/lendMachines`, {}, config)\r\n\r\n        dispatch({\r\n            type: MACHINE_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MACHINE_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateLendMachine = (machine) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: MACHINE_UPDATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/lendMachines/${machine._id}`, machine, config)\r\n\r\n        dispatch({\r\n            type: MACHINE_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({ type: MACHINE_UPDATE_RESET })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: MACHINE_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Container, Row, Button, Alert } from 'react-bootstrap'\r\nimport LendMachines from './../../components/LendMachines//LendMachines';\r\n\r\nimport './Farmer_LendMachine.css'\r\nimport Message from './../../components/Message/Message';\r\nimport Loader from './../../components/Loader/Loader';\r\n\r\nimport { listLendMachineProducts } from './../../actions/productLendMachinesActions'\r\nimport Meta from '../../components/Helmet/Meta';\r\n\r\nconst Farmer_LendScreen = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productLendMachinesList = useSelector(state => state.productLendMachinesList)\r\n    const { loading, error, productLendMachines } = productLendMachinesList\r\n\r\n    const [numberOfItems, setNumberOfItems] = useState(3);\r\n\r\n    useEffect(() => {\r\n        dispatch(listLendMachineProducts())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch])\r\n\r\n    const showMore = () => {\r\n        if (numberOfItems + 3 <= productLendMachines.length) {\r\n            setNumberOfItems(numberOfItems + 3)\r\n        } else {\r\n            setNumberOfItems(productLendMachines.length)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"MachineLendScreen\">\r\n            <Meta\r\n                title=\"Agroic | Farmer Machines\"\r\n            />\r\n            <Container>\r\n                <h1 className=\"p-3\" style={{ textAlign: 'center' }}>All Machines</h1>\r\n                {\r\n                    loading\r\n                        ? <Loader />\r\n                        : error ? <Message variant='danger'>{error}</Message>\r\n                            : (\r\n                                <Row>\r\n                                    {\r\n                                        productLendMachines\r\n                                            .slice(0, numberOfItems)\r\n                                            .map(machine => (\r\n                                                <LendMachines\r\n                                                    key={machine._id}\r\n                                                    _id={machine._id}\r\n                                                    name={machine.name}\r\n                                                    image={machine.image}\r\n                                                    targetPlant={machine.target_plant}\r\n                                                    price={machine.price}\r\n                                                    quantity={machine.quantity}\r\n                                                />\r\n                                            ))\r\n                                    }\r\n                                    {\r\n                                        numberOfItems >= productLendMachines.length\r\n                                            ? <Alert style={{ backgroundColor: 'red' }} className=\"col-md-12 text-center\">Finished</Alert>\r\n                                            : ''\r\n                                    }\r\n                                    <Button className=\"col-md-12 text-center\" variant=\"success outline-dark\" onClick={showMore}>show more</Button>\r\n                                </Row>\r\n                            )\r\n                }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Farmer_LendScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Col,\r\n    Container,\r\n    Row,\r\n    Image,\r\n    ListGroup,\r\n    Card,\r\n    Button,\r\n    Form\r\n} from 'react-bootstrap';\r\nimport './LendMachineScreen.css';\r\n\r\nimport { listLendMachineProductsDetails } from './../../actions/productLendMachinesActions'\r\nimport Loader from '../../components/Loader/Loader';\r\nimport Message from '../../components/Message/Message';\r\nimport Meta from '../../components/Helmet/Meta';\r\n\r\nconst LendMachineProduct = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productLendMachinesDetails = useSelector(state => state.productLendMachinesDetails)\r\n    const { loading, error, productLendMachines } = productLendMachinesDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listLendMachineProductsDetails(match.params.id))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, match])\r\n\r\n    const addtoCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n    return (\r\n        <div className=\"productScreen\">\r\n            <Meta\r\n                title=\"Agroic | Machine\"\r\n            />\r\n            <Container>\r\n                <Link className=\"btn btn-go-back btn-dark\" to=\"/farmers/lendMachines\">GO BACK</Link>\r\n                {\r\n                    loading\r\n                        ? <Loader />\r\n                        : error\r\n                            ? <Message variant='danger'>{error}</Message>\r\n                            : (\r\n                                <Row className=\"p-3 seed-product\" >\r\n                                    <Col md={6}>\r\n                                        <Image className=\"mx-auto image-machine\" src={productLendMachines.image} alt={productLendMachines.name} width={200} />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <ListGroup className=\"borderless\" variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <h2>{productLendMachines.name}</h2>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <h4>Price: {productLendMachines.price}</h4>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                            <p><span style={{fontWeight:\"bold\"}}>Description:</span><br /> {productLendMachines.description}</p>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <p>Quantity Available: {productLendMachines.quantity}</p>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Card>\r\n                                            <ListGroup variant='flush'>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Machine Power:</Col>\r\n                                                        <Col><strong>{productLendMachines.machine_power}</strong></Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Target Plant:</Col>\r\n                                                        <Col>\r\n                                                            {productLendMachines.target_plant}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                {\r\n                                                    productLendMachines.quantity > 0 && (\r\n                                                        <ListGroup.Item>\r\n                                                            <Row>\r\n                                                                <Col>Qty</Col>\r\n                                                                <Col>\r\n                                                                    <Form.Control as='select' value={qty} onChange={(e => setQty(e.target.value))}>\r\n                                                                        {\r\n                                                                            [...Array(productLendMachines.quantity).keys()]\r\n                                                                                .map(x =>\r\n                                                                                    <option\r\n                                                                                        key={x + 1}\r\n                                                                                        value={x + 1}\r\n                                                                                    >{x + 1}</option>)\r\n                                                                        }\r\n                                                                    </Form.Control>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </ListGroup.Item>\r\n                                                    )\r\n                                                }\r\n                                                <ListGroup.Item>\r\n                                                    <Button type=\"button\" className=\"btn btn-block\" onClick={addtoCartHandler} >Add To Cart</Button>\r\n                                                </ListGroup.Item>\r\n                                            </ListGroup>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LendMachineProduct\r\n","import axios from 'axios'\r\nimport { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESSS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from './../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    try {\r\n        const { data } = await axios.get(`/api/seeds/${id}`)\r\n        dispatch({\r\n            type: CART_ADD_ITEM,\r\n            payload: {\r\n                seed: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty,\r\n            }\r\n        })\r\n    } catch (error) {\r\n        try {\r\n            const { data } = await axios.get(`/api/lendMachines/${id}`)\r\n            dispatch({\r\n                type: CART_ADD_ITEM,\r\n                payload: {\r\n                    seed: data._id,\r\n                    name: data.name,\r\n                    image: data.image,\r\n                    price: data.price,\r\n                    countInStock: data.quantity,\r\n                    qty,\r\n                }\r\n            })\r\n        } catch (error) { \r\n            const { data } = await axios.get(`/api/consumer/${id}`)\r\n            dispatch({\r\n                type: CART_ADD_ITEM,\r\n                payload: {\r\n                    seed: data._id,\r\n                    name: data.prod_name,\r\n                    image: data.image,\r\n                    price: data.price,\r\n                    countInStock: data.quantity,\r\n                    qty,\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cartSeed.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cartSeed.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESSS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useState } from 'react'\r\nimport {\r\n    Form,\r\n    Button,\r\n    Col,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from './../../components/CheckoutSteps/CheckoutSteps'\r\nimport FormContainer from '../../components/FormContainer/FormContainer'\r\nimport { savePaymentMethod } from './../../actions/cartActions.js'\r\nimport Meta from '../../components/Helmet/Meta'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cartSeed)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginTop: '100px' }}>\r\n            <FormContainer>\r\n                <Meta\r\n                    title=\"Agroic | Payment\"\r\n                />\r\n                <CheckoutSteps step1 step2 step3 />\r\n                <h1>Payment Method</h1>\r\n                <Form onSubmit={submitHandler} style={{ marginBottom: '40px' }}>\r\n                    <Form.Group>\r\n                        <Form.Label as='legend'>Select Method</Form.Label>\r\n\r\n                        <Col>\r\n                            <Form.Check\r\n                                type='radio'\r\n                                label='Paypal or Credit Card'\r\n                                id='paypal'\r\n                                name='paymentMethod'\r\n                                value='PayPal'\r\n                                checked\r\n                                onChange={(e) => setPaymentMethod(e.target.value)}\r\n                            ></Form.Check>\r\n                            <Form.Check\r\n                                type='radio'\r\n                                label='Stripe'\r\n                                id='Stripe'\r\n                                name='paymentMethod'\r\n                                value='Stripe'\r\n                                checked\r\n                                onChange={(e) => setPaymentMethod(e.target.value)}\r\n                            ></Form.Check>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Button type='submit'>Continue</Button>\r\n                </Form>\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Col,\r\n    Container,\r\n    Row,\r\n    Image,\r\n    ListGroup,\r\n    Card,\r\n    Button,\r\n    Form\r\n} from 'react-bootstrap';\r\nimport './consumerStyles.css';\r\n\r\nimport Loader from '../../components/Loader/Loader';\r\nimport Message from '../../components/Message/Message';\r\nimport { listConsumerProductsDetails } from '../../actions/consumerProductAction.js'\r\nimport Meta from '../../components/Helmet/Meta';\r\n\r\nconst ConsumerProductDetailScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const consumerProductDetails = useSelector(state => state.consumerProductDetails)\r\n    const { loading, error, consumerProduct } = consumerProductDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listConsumerProductsDetails(match.params.id))\r\n    }, [dispatch, match])\r\n\r\n    const addtoCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"productScreen\">\r\n            <Meta\r\n                title=\"Agroic | Consumer Product\"\r\n            />\r\n            <Container>\r\n                <Link className=\"btn btn-go-back btn-dark\" to=\"/consumer\">GO BACK</Link>\r\n                {\r\n                    loading ?\r\n                        <Loader />\r\n                        : error\r\n                            ? <Message variant='danger'>{error}</Message>\r\n                            : (\r\n                                <Row className=\"p-3 seed-product\" >\r\n                                    <Col md={6}>\r\n                                        <Image className=\"mx-auto image-seed\"\r\n                                            src={consumerProduct.image}\r\n                                            alt={consumerProduct.prod_name}\r\n                                            width={300}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <ListGroup className=\"borderless\" variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <h2>{consumerProduct.prod_name}</h2>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <h4>Seller: {consumerProduct.seller_name}</h4>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <h4>Price: {consumerProduct.price}</h4>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <p>Avalaible Location: {consumerProduct.avalaible_location}</p>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Card>\r\n                                            <ListGroup variant='flush'>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Price:</Col>\r\n                                                        <Col><strong>RS. {consumerProduct.price}</strong></Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Status:</Col>\r\n                                                        <Col>\r\n                                                            {consumerProduct.quantity > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                {\r\n                                                    consumerProduct.quantity > 0 && (\r\n                                                        <ListGroup.Item>\r\n                                                            <Row>\r\n                                                                <Col>Qty</Col>\r\n                                                                <Col>\r\n                                                                    <Form.Control as='select' value={qty} onChange={(e => setQty(e.target.value))}>\r\n                                                                        {\r\n                                                                            [...Array(consumerProduct.quantity).keys()]\r\n                                                                                .map(x =>\r\n                                                                                    <option\r\n                                                                                        key={x + 1}\r\n                                                                                        value={x + 1}\r\n                                                                                    >{x + 1}</option>)\r\n                                                                        }\r\n                                                                    </Form.Control>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </ListGroup.Item>\r\n                                                    )\r\n                                                }\r\n                                                <ListGroup.Item>\r\n                                                    <Button type=\"button\" className=\"btn btn-block\" onClick={addtoCartHandler}>Add To Cart</Button>\r\n                                                </ListGroup.Item>\r\n                                            </ListGroup>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ConsumerProductDetailScreen\r\n","import React, { useState } from 'react'\r\nimport {\r\n    Form,\r\n    Button,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from './../../components/CheckoutSteps/CheckoutSteps'\r\nimport FormContainer from '../../components/FormContainer/FormContainer'\r\nimport { saveShippingAddress } from './../../actions/cartActions.js'\r\nimport Meta from '../../components/Helmet/Meta'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cartSeed)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginTop: '100px' }}>\r\n            <FormContainer>\r\n                <Meta\r\n                    title=\"Agroic | Shipping\"\r\n                />\r\n                <CheckoutSteps step1 step2 />\r\n                <h1>Shipping</h1>\r\n                <Form onSubmit={submitHandler} style={{ marginBottom: '40px' }}>\r\n                    <Form.Group controlId='address'>\r\n                        <Form.Label>Address <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter address\"\r\n                            value={address}\r\n                            required\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='city'>\r\n                        <Form.Label>City <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter City\"\r\n                            value={city}\r\n                            required\r\n                            onChange={(e) => setCity(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='postalCode'>\r\n                        <Form.Label>Postal Code <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter postal code\"\r\n                            value={postalCode}\r\n                            required\r\n                            onChange={(e) => setPostalCode(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='country'>\r\n                        <Form.Label>Country <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Country\"\r\n                            value={country}\r\n                            required\r\n                            onChange={(e) => setCountry(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit'>Continue</Button>\r\n                </Form>\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    ListGroup,\r\n    Image,\r\n    Card,\r\n    Button\r\n} from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './../../components/Loader/Loader'\r\nimport Message from '../../components/Message/Message'\r\nimport { getOrderDetails, payOrder, deliverOrder } from './../../actions/orderAction'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from './../../constants/orderConstant'\r\nimport Meta from '../../components/Helmet/Meta'\r\n\r\nconst OrderScreen = ({ match }) => {\r\n\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { success: successPay, loading: loadingPay } = orderPay\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { success: successDeliver, loading: loadingDeliver } = orderDeliver\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        // Add paypal script to body\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, orderId, successPay, order, successDeliver, history, userInfo])\r\n\r\n    const onSuccessPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n    // const itemsPrice = order.totalPrice - (order.taxPrice + order.shippingPrice)\r\n\r\n    return (\r\n        <div>\r\n            <Meta\r\n                title=\"Agroic | Order\"\r\n            />\r\n            {\r\n                loading\r\n                    ? <Loader />\r\n                    : error ? <Message variant=\"danger\">{error}</Message>\r\n                        : (\r\n                            <Container style={{ marginTop: '120px' }}>\r\n                                <h2>Order {order._id}</h2>\r\n                                <Row>\r\n                                    <Col md={8}>\r\n                                        <ListGroup variant='flush' className=\"mb-3\">\r\n                                            <ListGroup.Item>\r\n                                                <h1>Shipping</h1>\r\n                                                <p>\r\n                                                    <strong>Name: </strong>{order.user.name}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Email / NIC: </strong>\r\n                                                    <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Address : </strong>\r\n                                                    {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                                                    {order.shippingAddress.postalCode},{' '}\r\n                                                    {order.shippingAddress.country}\r\n                                                </p>\r\n                                                {order.isDelivered\r\n                                                    ? <Message variant=\"success\">Delivered on {order.deliveredAt}</Message>\r\n                                                    : <Message variant=\"danger\">Not Delivered</Message>\r\n                                                }\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <h2>Payment Method</h2>\r\n                                                <p>\r\n                                                    <strong>Method : </strong>\r\n                                                    {order.paymentMethod}\r\n                                                </p>\r\n                                                {order.isPaid\r\n                                                    ? <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n                                                    : <Message variant=\"danger\">Not Paid</Message>\r\n                                                }\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <h2>Order Items</h2>\r\n                                                {order.length === 0\r\n                                                    ? <Message>Order is empty</Message>\r\n                                                    : (\r\n                                                        <ListGroup variant=\"flush\">\r\n                                                            {\r\n                                                                order.orderItems.map((item, index) => (\r\n                                                                    <ListGroup.Item key={index}>\r\n                                                                        <Row>\r\n                                                                            <Col md={1}>\r\n                                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                                            </Col>\r\n                                                                            <Col>\r\n                                                                                {item.name}\r\n                                                                            </Col>\r\n                                                                            <Col md={4}>\r\n                                                                                {`${item.qty} x RS. ${item.price} = RS. ${item.qty * item.price}`}\r\n                                                                            </Col>\r\n                                                                        </Row>\r\n                                                                    </ListGroup.Item>\r\n                                                                ))\r\n                                                            }\r\n                                                        </ListGroup>\r\n                                                    )\r\n                                                }\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <Card>\r\n                                            <ListGroup variant=\"flush\">\r\n                                                <ListGroup.Item>\r\n                                                    <h2>Order Summary</h2>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Total Price</Col>\r\n                                                        <Col>{`RS. ${(order.totalPrice - (order.taxPrice + order.shippingPrice).toFixed(2))}`}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Shipping</Col>\r\n                                                        <Col>{`RS. ${order.shippingPrice}`}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Tax</Col>\r\n                                                        <Col>{`RS. ${order.taxPrice}`}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item><ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Total</Col>\r\n                                                        <Col>{`RS. ${order.totalPrice}`}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                {\r\n                                                    !order.isPaid && (\r\n                                                        <ListGroup.Item>\r\n                                                            { loadingPay && <Loader />}\r\n                                                            { !sdkReady ? <Loader /> : (\r\n                                                                <PayPalButton\r\n                                                                    amount={order.totalPrice}\r\n                                                                    onSuccess={onSuccessPaymentHandler}\r\n                                                                />\r\n                                                            )}\r\n                                                        </ListGroup.Item>\r\n                                                    )\r\n                                                }\r\n                                                {loadingDeliver && <Loader />}\r\n                                                {\r\n                                                    userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                                        <ListGroup.Item>\r\n                                                            <Button\r\n                                                                type='button'\r\n                                                                className='btn btn-block'\r\n                                                                onClick={deliverHandler}\r\n                                                            > Mark as delivered </Button>\r\n                                                        </ListGroup.Item>\r\n                                                    )\r\n                                                }\r\n                                            </ListGroup>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from './../../components/Message/Message';\r\nimport { addToCart, removeFromCart } from './../../actions/cartActions'\r\nimport { Row, Col, ListGroup, Image, Button, Form, Container, Card } from 'react-bootstrap';\r\nimport Meta from '../../components/Helmet/Meta';\r\n\r\nconst Cart = ({ match, location, history }) => {\r\n\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cartSeed = useSelector((state) => state.cartSeed)\r\n    const { cartItems } = cartSeed\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Container style={{ marginTop: '100px', marginBottom: '50px' }}>\r\n            <Meta\r\n                title=\"Agroic | Cart\"\r\n            />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <h1>Shopping Cart</h1>\r\n                    {\r\n                        cartItems.length === 0 ? (\r\n                            <Message variant='danger'>\r\n                                Your cart is empty <Link to='/'>GO BACK</Link>\r\n                            </Message>\r\n                        ) : (\r\n                                <ListGroup variant='flush' >\r\n                                    {cartItems.map((item) => (\r\n                                        <ListGroup.Item key={item.seed} style={{ marginTop: '10px' }}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col md={3}>\r\n                                                    <Link to={`/farmers/purchaseSeeds/${item.seed}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={2}>RS.{item.price}</Col>\r\n                                                <Col md={2}>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={item.qty}\r\n                                                        onChange={(e) =>\r\n                                                            dispatch(\r\n                                                                addToCart(item.seed, Number(e.target.value))\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                            <option key={x + 1} value={x + 1}>\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                                <Col md={2}>\r\n                                                    <Button\r\n                                                        type='button'\r\n                                                        variant='light'\r\n                                                        onClick={() => removeFromCartHandler(item.seed)}\r\n                                                    >\r\n                                                        <i className='fas fa-trash'></i>\r\n                                                    </Button>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card style={{ marginTop: '50px' }}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                                RS.{cartItems\r\n                                    .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                                    .toFixed(2)}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={checkoutHandler}\r\n                                >\r\n                                    Proceed To Checkout\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {\r\n    Table,\r\n    Button,\r\n    Container,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../..//../components/Message/Message'\r\nimport Loader from '../../../components/Loader/Loader'\r\nimport { listUsers, deleteUsers } from './../../../actions/userActions'\r\n\r\nconst UserList = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteUsers(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LinkContainer style={{ float: 'right' }} to='/register'>\r\n                <Button className=\"mr-3 mb-3\">ADD ADMIN</Button>\r\n            </LinkContainer>\r\n            <Container>\r\n                {loading ? <Loader />\r\n                    : error ? <Message variant='danger'>{error}</Message>\r\n                        : (\r\n                            <Table style={{ marginBottom: '223px' }} striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td>ID</td>\r\n                                        <td>NAME</td>\r\n                                        <td>CROP SELECTION</td>\r\n                                        <td>EMAIL / NIC</td>\r\n                                        <td>ADMIN</td>\r\n                                        <td>EDIT / DELETE</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        users.map(user => (\r\n                                            <tr key={user._id}>\r\n                                                <td>{user._id}</td>\r\n                                                <td>{user.name}</td>\r\n                                                {\r\n                                                    user.cropSelection\r\n                                                        ? <td>{user.cropSelection}</td>\r\n                                                        : <td style={{ color: 'red' }}>No Crop Selected</td>\r\n                                                }\r\n                                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                                <td>\r\n                                                    {\r\n                                                        user.isAdmin ? (\r\n                                                            <i className=\"fas fa-check\" style={{ color: 'green' }}></i>\r\n                                                        ) : <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\r\n                                                    }\r\n                                                </td>\r\n                                                <td>\r\n                                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                        <Button variant=\"light\" className=\"btn btn-sm\">\r\n                                                            <i className=\"fas fa-edit\"></i>\r\n                                                        </Button>\r\n                                                    </LinkContainer>\r\n                                                    <Button\r\n                                                        variant=\"danger\"\r\n                                                        className=\"btn-sm mr-2\"\r\n                                                        onClick={() => deleteHandler(user._id)}\r\n                                                    >\r\n                                                        <i className=\"fas fa-trash-alt\"></i>\r\n                                                    </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n                }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserList\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport UserList from '../../components/DashBoard/UserList/UserList'\r\nimport Meta from '../../components/Helmet/Meta'\r\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\r\n\r\nconst UserListScreen = () => {\r\n    return (\r\n        <div style={{ marginTop: \"110px\" }}>\r\n            <Meta\r\n                title=\"Agroic | Admin Users\"\r\n            />\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <h4>Agroic Users</h4>\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <h4 style={{ marginLeft: \"30px\" }}>User List</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <SideBarComponents />\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <UserList />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Form,\r\n    Button,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message/Message'\r\nimport Loader from '../../components/Loader/Loader'\r\nimport FormContainer from '../../components/FormContainer/FormContainer'\r\nimport { getUserDetails, updateUser } from '../../actions/userActions'\r\nimport { USER_UPDATE_RESET } from './../../constants/userConstants'\r\nimport Meta from '../../components/Helmet/Meta'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [cropSelection, setCropSelection] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, user, error } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userList')\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setCropSelection(user.cropSelection)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [user, userId, dispatch, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Meta\r\n                title=\"Agroic | Admin User Edit\"\r\n            />\r\n            <FormContainer>\r\n                <h1 style={{ marginTop: '120px' }}>Edit User</h1>\r\n                <Link to='/admin/userList' className=\"btn btn-light my-2\">GO BACK</Link>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler} style={{ marginBottom: '50px' }}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"name\"\r\n                                    placeholder=\"Enter name\"\r\n                                    value={name}\r\n                                    required\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address / NIC <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"nic\"\r\n                                    placeholder=\"Enter email or NIC\"\r\n                                    value={email}\r\n                                    required\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='cropSelection'>\r\n                                <Form.Label>Crop Selection (optional)</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"cropSelection\"\r\n                                    placeholder=\"Enter crop               \"\r\n                                    value={cropSelection}\r\n                                    onChange={(e) => setCropSelection(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='isAdmin'>\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    label=\"Is Admin\"\r\n                                    value={isAdmin}\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                ></Form.Check>\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" variant=\"primary\">Update</Button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {\r\n    Table,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Container\r\n} from 'react-bootstrap'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../../components/Message/Message'\r\nimport Loader from './../../../../components/Loader/Loader'\r\nimport { listSeedProducts, deleteSeedProducts, createSeedProducts } from './../../../../actions/productSeedActions'\r\nimport { SEED_CREATE_RESET } from './../../../../constants/productConstants'\r\n\r\nconst SeedList = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const prodcutSeedList = useSelector(state => state.prodcutSeedList)\r\n    const { loading: loadingSeed, error: errorSeed, productSeeds } = prodcutSeedList\r\n\r\n    const prodcutSeedDelete = useSelector(state => state.prodcutSeedDelete)\r\n    const { success: successSeedDelete, loading: loadingDelete, error: errorDelete } = prodcutSeedDelete\r\n\r\n    const seedCreate = useSelector(state => state.seedCreate)\r\n    const {\r\n        success: successSeedCreate,\r\n        loading: loadingCreate,\r\n        error: errorCreate,\r\n        product: productCreate\r\n    } = seedCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: SEED_CREATE_RESET })\r\n        if (!userInfo.isAdmin && !userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (successSeedCreate) {\r\n                history.push(`/admin/productlist/seed/${productCreate._id}/edit`)\r\n            } else {\r\n                dispatch(listSeedProducts())\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, successSeedDelete, successSeedCreate, productCreate])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteSeedProducts(id))\r\n        }\r\n    }\r\n\r\n    const createSeedProductHandler = () => {\r\n        dispatch(createSeedProducts())\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1 style={{ marginBottom: '20px' }}>Seeds</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button className='my-3' onClick={createSeedProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            { loadingCreate && <Loader />}\r\n            { loadingDelete && <Loader />}\r\n            { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingSeed ? <Loader />\r\n                : errorSeed ? <Message variant='danger'>{errorSeed}</Message>\r\n                    : (\r\n                        <Table style={{ marginBottom: '50px' }} striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>ID</td>\r\n                                    <td>NAME</td>\r\n                                    <td>CATEGORY</td>\r\n                                    <td>PRICE</td>\r\n                                    <td>EDIT / DELETE</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    productSeeds.map(productSeed => (\r\n                                        <tr key={productSeed._id}>\r\n                                            <td>{productSeed._id}</td>\r\n                                            <td>{productSeed.name}</td>\r\n                                            <td>{productSeed.category}</td>\r\n                                            <td>{productSeed.price}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/productlist/seed/${productSeed._id}/edit`}>\r\n                                                    <Button variant=\"light\" className=\"btn btn-sm\">\r\n                                                        <i className=\"fas fa-edit\"></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button\r\n                                                    variant=\"danger\"\r\n                                                    className=\"btn-sm mr-2\"\r\n                                                    onClick={() => deleteHandler(productSeed._id)}\r\n                                                >\r\n                                                    <i className=\"fas fa-trash-alt\"></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SeedList\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {\r\n    Table,\r\n    Button,\r\n    Container,\r\n    Col,\r\n    Row\r\n} from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../../components/Message/Message'\r\nimport Loader from './../../../../components/Loader/Loader'\r\nimport { listLendMachineProducts, deleteLendMachineProduct, createLendMachine } from './../../../../actions/productLendMachinesActions'\r\nimport { MACHINE_CREATE_RESET } from './../../../../constants/productConstants'\r\n\r\nconst SeedList = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const productLendMachinesList = useSelector(state => state.productLendMachinesList)\r\n    const { loading: loadingMachine, error: errorMachine, productLendMachines } = productLendMachinesList\r\n\r\n    const productLendMachinesDelete = useSelector(state => state.productLendMachinesDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productLendMachinesDelete\r\n\r\n    const LendMachinesCreate = useSelector(state => state.LendMachinesCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: productCreate } = LendMachinesCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: MACHINE_CREATE_RESET })\r\n        if (!userInfo.isAdmin && !userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (successCreate) {\r\n                history.push(`/admin/productlist/machine/${productCreate._id}/edit`)\r\n            } else {\r\n                dispatch(listLendMachineProducts())\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, productCreate])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteLendMachineProduct(id))\r\n        }\r\n    }\r\n\r\n    const createMachineProductHandler = () => {\r\n        dispatch(createLendMachine())\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1 style={{ marginBottom: '20px' }}>Lend Machines</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button className='my-3' onClick={createMachineProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            { loadingCreate && <Loader />}\r\n            { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            { loadingDelete && <Loader />}\r\n            { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingMachine ? <Loader />\r\n                : errorMachine ? <Message variant='danger'>{errorMachine}</Message>\r\n                    : (\r\n                        <Table style={{ marginBottom: '50px' }} striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>ID</td>\r\n                                    <td>NAME</td>\r\n                                    <td>TARGET PLANT</td>\r\n                                    <td>MACHINE POWER</td>\r\n                                    <td>EDIT / DELETE</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    productLendMachines.map(machine => (\r\n                                        <tr key={machine._id}>\r\n                                            <td>{machine._id}</td>\r\n                                            <td>{machine.name}</td>\r\n                                            <td>{machine.target_plant}</td>\r\n                                            <td>{machine.machine_power}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/productlist/machine/${machine._id}/edit`}>\r\n                                                    <Button variant=\"light\" className=\"btn btn-sm\">\r\n                                                        <i className=\"fas fa-edit\"></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button\r\n                                                    variant=\"danger\"\r\n                                                    className=\"btn-sm mr-2\"\r\n                                                    onClick={() => deleteHandler(machine._id)}\r\n                                                >\r\n                                                    <i className=\"fas fa-trash-alt\"></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SeedList\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {\r\n    Table,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Container\r\n} from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../../components/Message/Message'\r\nimport Loader from './../../../../components/Loader/Loader'\r\nimport { listConsumerProducts, deleteConsumerProduct, createConsumer } from './../../../../actions/consumerProductAction'\r\nimport { CONSUMER_CREATE_RESET } from './../../../../constants/productConstants'\r\n\r\nconst ConsumerList = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const consumerProductList = useSelector(state => state.consumerProductList)\r\n    const { loading: loadingConsumer, error: errorConsumer, consumerProducts } = consumerProductList\r\n\r\n    const consumerProductDelete = useSelector(state => state.consumerProductDelete)\r\n    const { loading: deleteLoadingConsumer, error: errorDeleteConsumer, success: successDelete } = consumerProductDelete\r\n\r\n    const consumerCreate = useSelector(state => state.consumerCreate)\r\n    const {\r\n        loading: createLoadingConsumer,\r\n        error: errorcreateConsumer,\r\n        success: successCreate,\r\n        product: consumerProduct\r\n    } = consumerCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: CONSUMER_CREATE_RESET })\r\n        if (!userInfo.isAdmin && !userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (successCreate) {\r\n                history.push(`/admin/productlist/consumer/${consumerProduct._id}/edit`)\r\n            } else {\r\n                dispatch(listConsumerProducts())\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, consumerProduct])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteConsumerProduct(id))\r\n        }\r\n    }\r\n\r\n    const createConsumerProductHandler = () => {\r\n        dispatch(createConsumer())\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1 style={{ marginBottom: '20px' }}>Consumer</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button className='my-3' onClick={createConsumerProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            { createLoadingConsumer && <Loader />}\r\n            { errorcreateConsumer && <Message variant='danger'>{errorcreateConsumer}</Message>}\r\n            { deleteLoadingConsumer && <Loader />}\r\n            { errorDeleteConsumer && <Message variant='danger'>{errorDeleteConsumer}</Message>}\r\n            {loadingConsumer ? <Loader />\r\n                : errorConsumer ? <Message variant='danger'>{errorConsumer}</Message>\r\n                    : (\r\n                        <Table style={{ marginBottom: '50px' }} striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>ID</td>\r\n                                    <td>SELLER NAME</td>\r\n                                    <td>PRODUCT NAME</td>\r\n                                    <td>AVALAIBLE LOCATION</td>\r\n                                    <td>EDIT / DELETE</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    consumerProducts.map(consumer => (\r\n                                        <tr key={consumer._id}>\r\n                                            <td>{consumer._id}</td>\r\n                                            <td>{consumer.seller_name}</td>\r\n                                            <td>{consumer.prod_name}</td>\r\n                                            <td>{consumer.avalaible_location}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/productlist/consumer/${consumer._id}/edit`}>\r\n                                                    <Button variant=\"light\" className=\"btn btn-sm\">\r\n                                                        <i className=\"fas fa-edit\"></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button\r\n                                                    variant=\"danger\"\r\n                                                    className=\"btn-sm mr-2\"\r\n                                                    onClick={() => deleteHandler(consumer._id)}\r\n                                                >\r\n                                                    <i className=\"fas fa-trash-alt\"></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ConsumerList\r\n","import React from 'react'\r\nimport {\r\n    Container,\r\n    Row,\r\n} from 'react-bootstrap'\r\nimport './listStyles.css'\r\nimport { Scrollbar } from \"react-scrollbars-custom\";\r\nimport SeedList from './SeedList/SeedList'\r\nimport LendMachineList from './LendMachineList/LendMachineList'\r\nimport ConsumerList from './ConsumerList/ConsumerList'\r\n\r\nconst ProductListHome = () => {\r\n\r\n    return (\r\n        <Scrollbar style={{ width: '100%', height: 450 }}>\r\n            <Container>\r\n                <Row className=\"list-container\">\r\n                    <SeedList />\r\n                    <LendMachineList />\r\n                    <ConsumerList />\r\n                </Row>\r\n            </Container>\r\n        </Scrollbar>\r\n    )\r\n}\r\n\r\nexport default ProductListHome\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport ProductListHome from '../../components/DashBoard/ProductList/ProductListHome'\r\nimport Meta from '../../components/Helmet/Meta'\r\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\r\n\r\nconst ProductListScreen = () => {\r\n    return (\r\n        <div style={{ marginTop: \"110px\" }}>\r\n            <Meta\r\n                title=\"Agroic | Admin Products\"\r\n            />\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <h4>Agroic Products</h4>\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <h4 style={{ marginLeft: \"30px\" }}>Product List</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <SideBarComponents />\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <ProductListHome />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    Form,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../components/Message/Message'\r\nimport Loader from './../../../components/Loader/Loader'\r\nimport FormContainer from './../../../components/FormContainer/FormContainer'\r\nimport { listSeedProductsDetails, updateSeedProducts } from './../../../actions/productSeedActions'\r\nimport { SEED_UPDATE_RESET } from '../../../constants/productConstants'\r\nimport Meta from '../../../components/Helmet/Meta'\r\n\r\nconst SeedListEdit = ({ match }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const productId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const prodcutSeedDetails = useSelector(state => state.prodcutSeedDetails)\r\n    const { loading, productSeed, error } = prodcutSeedDetails\r\n\r\n    const seedUpdate = useSelector(state => state.seedUpdate)\r\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = seedUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: SEED_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!productSeed.name || productSeed._id !== productId) {\r\n                dispatch(listSeedProductsDetails(productId))\r\n            } else {\r\n                setName(productSeed.name)\r\n                setDescription(productSeed.description)\r\n                setPrice(productSeed.price)\r\n                setCategory(productSeed.category)\r\n                setImage(productSeed.image)\r\n                setCountInStock(productSeed.countInStock)\r\n            }\r\n        }\r\n    }, [history, productSeed, dispatch, productId, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateSeedProducts({\r\n            _id: productId,\r\n            name,\r\n            image,\r\n            description,\r\n            category,\r\n            price,\r\n            countInStock\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container style={{ marginBottom: '50px' }}>\r\n            <Meta\r\n                title=\"Agroic | Admin Seed Edit\"\r\n            />\r\n            <FormContainer>\r\n                <h2 style={{ marginTop: '120px', textAlign: 'center' }}>Seed Profile</h2>\r\n                <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                    GO BACK\r\n                </Link>\r\n                {loading && <Loader />}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Updated!</Message>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"name\"\r\n                                    placeholder=\"Enter name\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter image url\"\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                ></Form.Control>\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                ></Form.File>\r\n                                {uploading && <Loader />}\r\n                            </Form.Group>\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    type=\"description\"\r\n                                    placeholder=\"Enter description\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"category\"\r\n                                    placeholder=\"Enter price\"\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"price\"\r\n                                    placeholder=\"Enter price\"\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='countInStock'>\r\n                                <Form.Label>Count in stock</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"countInStock\"\r\n                                    placeholder=\"Enter count in stock\"\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" variant=\"primary\">Update</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </FormContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SeedListEdit \r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    Form,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../components/Message/Message'\r\nimport Loader from './../../../components/Loader/Loader'\r\nimport FormContainer from './../../../components/FormContainer/FormContainer'\r\nimport { listLendMachineProductsDetails, updateLendMachine } from './../../../actions/productLendMachinesActions'\r\nimport { MACHINE_UPDATE_RESET } from '../../../constants/productConstants'\r\nimport Meta from '../../../components/Helmet/Meta'\r\n\r\nconst SeedListEdit = ({ match }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [target_plant, setTarget_plant] = useState('')\r\n    const [quantity, setQuantity] = useState('')\r\n    const [machine_power, setMachine_power] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const productId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const productLendMachinesDetails = useSelector(state => state.productLendMachinesDetails)\r\n    const { loading, productLendMachines, error } = productLendMachinesDetails\r\n\r\n    const LendMachinesUpdate = useSelector(state => state.LendMachinesUpdate)\r\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = LendMachinesUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: MACHINE_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!productLendMachines.name || productLendMachines._id !== productId) {\r\n                dispatch(listLendMachineProductsDetails(productId))\r\n            } else {\r\n                setName(productLendMachines.name)\r\n                setDescription(productLendMachines.description)\r\n                setPrice(productLendMachines.price)\r\n                setImage(productLendMachines.image)\r\n                setTarget_plant(productLendMachines.target_plant)\r\n                setQuantity(productLendMachines.quantity)\r\n                setMachine_power(productLendMachines.machine_power)\r\n            }\r\n        }\r\n    }, [history, productLendMachines, dispatch, productId, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateLendMachine({\r\n            _id: productId,\r\n            name,\r\n            image,\r\n            price,\r\n            description,\r\n            target_plant,\r\n            quantity,\r\n            machine_power\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container style={{ marginBottom: '50px' }}>\r\n            <Meta\r\n                title=\"Agroic | Admin Machine Edit\"\r\n            />\r\n            <FormContainer>\r\n                <h2 style={{ marginTop: '120px', textAlign: 'center' }}>Lend Machine Profile</h2>\r\n                <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                    GO BACK\r\n                </Link>\r\n                {loading && <Loader />}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Updated!</Message>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"name\"\r\n                                    placeholder=\"Enter name\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter image url\"\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                ></Form.Control>\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                ></Form.File>\r\n                                {uploading && <Loader />}\r\n                            </Form.Group>\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"price\"\r\n                                    placeholder=\"Enter price\"\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows={3}\r\n                                    type=\"description\"\r\n                                    placeholder=\"Enter description\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Form.Group controlId='countInStock'>\r\n                                <Form.Label>Target Plant</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"countInStock\"\r\n                                    placeholder=\"Enter target plant\"\r\n                                    value={target_plant}\r\n                                    onChange={(e) => setTarget_plant(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='quantity'>\r\n                                <Form.Label>Quantity</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"countInStock\"\r\n                                    placeholder=\"Enter qunatity\"\r\n                                    value={quantity}\r\n                                    onChange={(e) => setQuantity(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='machinepower'>\r\n                                <Form.Label>Machine Power</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"machinepower\"\r\n                                    placeholder=\"Enter machine power\"\r\n                                    value={machine_power}\r\n                                    onChange={(e) => setMachine_power(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" variant=\"primary\">Update</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </FormContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SeedListEdit \r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    Form,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../components/Message/Message'\r\nimport Loader from './../../../components/Loader/Loader'\r\nimport FormContainer from './../../../components/FormContainer/FormContainer'\r\nimport { listConsumerProductsDetails, updateConsumer } from './../../../actions/consumerProductAction'\r\nimport { CONSUMER_UPDATE_RESET } from '../../../constants/productConstants'\r\nimport Meta from '../../../components/Helmet/Meta'\r\n\r\nconst ConsumerListEdit = ({ match }) => {\r\n\r\n    const [prodName, setProdName] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [sellerName, setSellerName] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [prodSize, setProdSize] = useState('')\r\n    const [quantity, setQuantity] = useState('')\r\n    const [avalaibleLoc, setAvalaibleLoc] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const productId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const consumerProductDetails = useSelector(state => state.consumerProductDetails)\r\n    const { loading, consumerProduct, error } = consumerProductDetails\r\n\r\n    const consumerUpdate = useSelector(state => state.consumerUpdate)\r\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = consumerUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: CONSUMER_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!consumerProduct.prod_name || consumerProduct._id !== productId) {\r\n                dispatch(listConsumerProductsDetails(productId))\r\n            } else {\r\n                setProdName(consumerProduct.prod_name)\r\n                setSellerName(consumerProduct.seller_name)\r\n                setPrice(consumerProduct.price)\r\n                setImage(consumerProduct.image)\r\n                setProdSize(consumerProduct.prod_size)\r\n                setQuantity(consumerProduct.quantity)\r\n                setAvalaibleLoc(consumerProduct.avalaible_location)\r\n            }\r\n        }\r\n    }, [history, consumerProduct, dispatch, productId, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateConsumer({\r\n            _id: productId,\r\n            prod_name: prodName,\r\n            image: image,\r\n            price: price,\r\n            seller_name: sellerName,\r\n            prod_size: prodSize,\r\n            quantity: quantity,\r\n            avalaible_location: avalaibleLoc\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container style={{ marginBottom: '50px' }}>\r\n            <Meta\r\n                title=\"Agroic | Admin Consumer Edit\"\r\n            />\r\n            <FormContainer>\r\n                <h2 style={{ marginTop: '120px', textAlign: 'center' }}>Consumer Profile</h2>\r\n                <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                    GO BACK\r\n                </Link>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading && <Loader />}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Updated!</Message>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Form.Group controlId='prodname'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"prodName\"\r\n                                    placeholder=\"Enter Product Name\"\r\n                                    value={prodName}\r\n                                    onChange={(e) => setProdName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter image url\"\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                ></Form.Control>\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                ></Form.File>\r\n                                {uploading && <Loader />}\r\n                            </Form.Group>\r\n                            <Form.Group controlId='sellerName'>\r\n                                <Form.Label>Seller Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"sellerName\"\r\n                                    placeholder=\"Enter seller name\"\r\n                                    value={sellerName}\r\n                                    onChange={(e) => setSellerName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"price\"\r\n                                    placeholder=\"Enter price\"\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Form.Group controlId='prodSize'>\r\n                                <Form.Label>Product Size</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"prodSize\"\r\n                                    placeholder=\"Enter product size\"\r\n                                    value={prodSize}\r\n                                    onChange={(e) => setProdSize(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='quantity'>\r\n                                <Form.Label>Quantity</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"countInStock\"\r\n                                    placeholder=\"Enter qunatity\"\r\n                                    value={quantity}\r\n                                    onChange={(e) => setQuantity(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='avalaibleLoc'>\r\n                                <Form.Label>Machine Power</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"avalaibleLoc\"\r\n                                    placeholder=\"Enter avalaible location\"\r\n                                    value={avalaibleLoc}\r\n                                    onChange={(e) => setAvalaibleLoc(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" variant=\"primary\">Update</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </FormContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ConsumerListEdit \r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    Form,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../Message/Message'\r\nimport Loader from './../Loader/Loader'\r\nimport FormContainer from './../FormContainer/FormContainer'\r\nimport { updateSupplierProduct, getroductsDetails } from './../../actions/supplierProduct'\r\nimport { SUPPLIER_PRODUCT_UPDATE_RESET } from './../../constants/supplierConstant'\r\nimport Meta from '../Helmet/Meta'\r\n\r\nconst SupplierProductEdit = ({ match }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [cropSelection, setCropSelection] = useState('')\r\n    const [storage, setStorage] = useState('')\r\n    const [phonenumber, setPhonenumber] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const productId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const FarmerProductDetails = useSelector(state => state.FarmerProductDetails)\r\n    const { loading, product, error } = FarmerProductDetails\r\n\r\n    const farmerProductUpdate = useSelector(state => state.farmerProductUpdate)\r\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = farmerProductUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: SUPPLIER_PRODUCT_UPDATE_RESET })\r\n            history.push('/profile')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(getroductsDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setDescription(product.description)\r\n                setEmail(product.email)\r\n                setAddress(product.address)\r\n                setImage(product.image)\r\n                setCropSelection(product.cropSelection)\r\n                setStorage(product.storage)\r\n                setPhonenumber(product.phonenumber)\r\n            }\r\n        }\r\n    }, [history, product, dispatch, productId, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateSupplierProduct({\r\n            _id: productId,\r\n            name,\r\n            email,\r\n            address,\r\n            cropSelection,\r\n            storage,\r\n            image,\r\n            phonenumber,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container style={{ marginBottom: '50px' }}>\r\n            <Meta\r\n                title=\"Agroic | Supplier Edit\"\r\n            />\r\n            <FormContainer>\r\n                <h2 style={{ marginTop: '100px', textAlign: 'center' }}>Product Profile</h2>\r\n                <Link to='/profile' className='btn btn-light my-3'>\r\n                    GO BACK\r\n                </Link>\r\n                {loading && <Loader />}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {successUpdate && <Message variant='success'>Profile Updated!</Message>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"name\"\r\n                                    placeholder=\"Enter name\"\r\n                                    value={name}\r\n                                    required\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address / NIC <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"nic\"\r\n                                    placeholder=\"Enter email or NIC\"\r\n                                    value={email}\r\n                                    required\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='address'>\r\n                                <Form.Label>Address <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"address\"\r\n                                    as=\"textarea\" rows={1}\r\n                                    placeholder=\"Enter address\"\r\n                                    value={address}\r\n                                    required\r\n                                    onChange={(e) => setAddress(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='cropSelection'>\r\n                                <Form.Label>Crop Selection <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"cropSelection\"\r\n                                    placeholder=\"Enter crop selection\"\r\n                                    value={cropSelection}\r\n                                    required\r\n                                    onChange={(e) => setCropSelection(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='storage'>\r\n                                <Form.Label>Product Size <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"storage\"\r\n                                    placeholder=\"Enter size (kg)\"\r\n                                    value={storage}\r\n                                    required\r\n                                    onChange={(e) => setStorage(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter image url\"\r\n                                    value={image}\r\n                                    required\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                ></Form.Control>\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                ></Form.File>\r\n                                {uploading && <Loader />}\r\n                            </Form.Group>\r\n                            <Form.Group controlId='phonenumber'>\r\n                                <Form.Label>Phone Number <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"phonenumber\"\r\n                                    placeholder=\"Enter phonenumber\"\r\n                                    value={phonenumber}\r\n                                    required\r\n                                    onChange={(e) => setPhonenumber(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\" rows={3}\r\n                                    type=\"description\"\r\n                                    placeholder=\"Enter description\"\r\n                                    value={description}\r\n                                    required\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <br />\r\n                            <Button type=\"submit\" variant=\"primary\">Submit</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </FormContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SupplierProductEdit \r\n","import React, { useEffect } from 'react'\r\nimport {\r\n    Table,\r\n    Container,\r\n    Button\r\n} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../components/Message/Message'\r\nimport Loader from './../../../components/Loader/Loader'\r\nimport { listOrders } from './../../../actions/orderAction'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <div style={{ marginTop: '10px' }}>\r\n            <Container>\r\n                {loading ? <Loader />\r\n                    : error ? <Message variant='danger'>{error}</Message>\r\n                        : (\r\n                            <Table style={{ marginBottom: '223px' }} striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td>ID</td>\r\n                                        <td>USER</td>\r\n                                        <td>DATE</td>\r\n                                        <td>TOTAL PRICE</td>\r\n                                        <td>PAID</td>\r\n                                        <td>DELIVERED</td>\r\n                                        <td>MORE</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        orders.map(order => (\r\n                                            <tr key={order._id}>\r\n                                                <td>{order._id}</td>\r\n                                                <td>{order.user && order.user.name}</td>\r\n                                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                                <td>{order.totalPrice}</td>\r\n                                                <td>\r\n                                                    {order.isPaid ? (\r\n                                                        order.paidAt.substring(0, 10)\r\n                                                    ) : (\r\n                                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                                        )\r\n                                                    }\r\n                                                </td>\r\n                                                <td>\r\n                                                    {order.isDelivered ? (\r\n                                                        order.paidAt.substring(0, 10)\r\n                                                    ) : (\r\n                                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                                        )}\r\n                                                </td>\r\n                                                <td>\r\n                                                    <LinkContainer to={`/order/${order._id}/edit`}>\r\n                                                        <Button varinat='light' className='btn-sm'>\r\n                                                            Details\r\n                                                        </Button>\r\n                                                    </LinkContainer>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n                }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport OrderList from '../../components/DashBoard/OrderList/OrderList'\r\nimport Meta from '../../components/Helmet/Meta'\r\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\r\n\r\nconst OrderListScreen = () => {\r\n    return (\r\n        <div style={{ marginTop: \"110px\" }}>\r\n            <Meta\r\n                title=\"Agroic | Admin Orders\"\r\n            />\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <h4>Agroic Orders</h4>\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <h4 style={{ marginLeft: \"30px\" }}>All Orders</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <SideBarComponents />\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <OrderList />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {\r\n    Table,\r\n    Button,\r\n    Container,\r\n    Image\r\n} from 'react-bootstrap'\r\nimport { Scrollbar } from \"react-scrollbars-custom\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './../../../components/Message/Message'\r\nimport Loader from './../../../components/Loader/Loader'\r\nimport { listSupplierProducts } from './../../../actions/supplierProduct'\r\n\r\nconst Harvest = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const supplierProductList = useSelector(state => state.supplierProductList)\r\n    const { loading: loadingProducts, error: errorProducts, products } = supplierProductList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo.isAdmin && !userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listSupplierProducts())\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Scrollbar style={{ width: '100%', height: 450 }}>\r\n                {loadingProducts ? <Loader />\r\n                    : errorProducts ? <Message variant='danger'>{errorProducts}</Message>\r\n                        : (\r\n                            <Table style={{ marginBottom: '50px', marginTop: \"5px\" }} striped bordered hover responsive className='table-sm'>\r\n                                <thead style={{ fontWeight: \"bold\" }}>\r\n                                    <tr>\r\n                                        <td>NAME</td>\r\n                                        <td>ADDRESS</td>\r\n                                        <td>IMAGE</td>\r\n                                        <td>DESCRPTION</td>\r\n                                        <td>CONTACT</td>\r\n                                        <td>CROP</td>\r\n                                        <td>MORE</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        products.map(product => (\r\n                                            <tr key={product._id}>\r\n                                                <td>{product.name}</td>\r\n                                                <td>{product.address}</td>\r\n                                                <td>\r\n                                                    <Image src={product.image} rounded width=\"60px\" />\r\n                                                </td>\r\n                                                <td>{product.description}</td>\r\n                                                {\r\n                                                    product.phonenumber\r\n                                                        ? <td>\r\n                                                            <a rel=\"noreferrer\" target='_blank' href={`https://wa.me/${product.phonenumber}`}>{product.phonenumber}</a>\r\n                                                        </td>\r\n                                                        : <td>Null</td>\r\n                                                }\r\n                                                <td>{product.cropSelection}</td>\r\n                                                <td>\r\n                                                    {\r\n                                                        product.isReviwed ? (\r\n                                                            <LinkContainer to={`/supplierproducts/${product._id}/review`}>\r\n                                                                <Button\r\n                                                                    disabled\r\n                                                                    variant=\"danger\"\r\n                                                                    className=\"btn-sm mr-2\">Reviewed\r\n                                                                    </Button>\r\n                                                            </LinkContainer>\r\n                                                        ) : (\r\n                                                                <LinkContainer to={`/supplierproducts/${product._id}/review`}>\r\n                                                                    <Button\r\n                                                                        variant=\"primary\"\r\n                                                                        className=\"btn-sm mr-2\">\r\n                                                                        <i className=\"fas fa-eye\"></i> Review\r\n                                                                    </Button>\r\n                                                                </LinkContainer>\r\n                                                            )\r\n                                                    }\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n                }\r\n            </Scrollbar>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Harvest\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Harvest from '../../components/DashBoard/Harvest/Harvest'\r\nimport Meta from '../../components/Helmet/Meta'\r\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\r\n\r\nconst HarvestScreen = () => {\r\n    return (\r\n        <div style={{ marginTop: \"110px\" }}>\r\n            <Meta\r\n                title=\"Agroic | Admin Harvest\"\r\n            />\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <h4>Harvest</h4>\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <h4 style={{ marginLeft: \"30px\" }}>Farmers Products</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <SideBarComponents />\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <Harvest />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HarvestScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Col,\r\n    Container,\r\n    Row,\r\n    Image,\r\n    ListGroup,\r\n    Card,\r\n    Button,\r\n    Form\r\n} from 'react-bootstrap';\r\nimport { getroductsDetails, createProductReview } from './../../actions/supplierProduct'\r\nimport Loader from '../../components/Loader/Loader';\r\nimport Message from '../../components/Message/Message';\r\nimport Meta from '../../components/Helmet/Meta';\r\n\r\nconst FarmerProduct = ({ history, match }) => {\r\n\r\n    const userId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const FarmerProductDetails = useSelector(state => state.FarmerProductDetails)\r\n    const { loading, error, product } = FarmerProductDetails\r\n\r\n    const farmerReviewCreate = useSelector(state => state.farmerReviewCreate)\r\n    const { loading: loadingReview, error: loadingError, success: successReview } = farmerReviewCreate\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    useEffect(() => {\r\n\r\n        if (successReview) {\r\n\r\n            // history.push('/admin/dashboard')\r\n        } else {\r\n            if (!product.name || product._id !== userId) {\r\n                dispatch(getroductsDetails(userId))\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, match, successReview, history, userId])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"productScreen\">\r\n            <Meta\r\n                title=\"Agroic | Admin Farmer Review\"\r\n            />\r\n            <Container>\r\n                <Link className=\"btn btn-go-back btn-dark\" to=\"/admin/supplierproducts\">GO BACK</Link>\r\n                {\r\n                    loading\r\n                        ? <Loader />\r\n                        : error\r\n                            ? <Message variant='danger'>{error}</Message>\r\n                            : (\r\n                                <Row className=\"p-1 seed-product\" >\r\n                                    <Col md={5}>\r\n                                        <Image className=\"mx-auto image-machine\" src={product.image} alt={product.name} width={200} />\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <ListGroup className=\"borderless\" variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <h4>Name </h4>{product.name}\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <h4>Address </h4> {product.address}\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <h4>Product Description<br /></h4> {product.description}\r\n                                            </ListGroup.Item>\r\n                                            {\r\n                                                product.phonenumber ? (\r\n                                                    <ListGroup.Item>\r\n                                                        <h4> Contact Number<br /></h4>\r\n                                                        <a rel=\"noreferrer\" target='_blank' href={`https://wa.me/${product.phonenumber}`}>\r\n                                                            {product.phonenumber}\r\n                                                        </a>\r\n                                                    </ListGroup.Item>\r\n                                                ) : ''\r\n                                            }\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col md={6}>\r\n                                                        <h4>Crop </h4>{product.cropSelection}\r\n                                                    </Col>\r\n                                                    {\r\n                                                        product.storage ? (\r\n                                                            <Col md={6}>\r\n                                                                <h4>Quantity </h4>{product.storage} kg\r\n                                                            </Col>\r\n                                                        ) : ''\r\n                                                    }\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Card>\r\n                                            <ListGroup>\r\n                                                <ListGroup.Item>\r\n                                                    <p>Write a Farmer Review</p>\r\n                                                    {successReview && (\r\n                                                        <Message variant='success'>\r\n                                                            Review submitted successfully\r\n                                                        </Message>\r\n                                                    )}\r\n                                                    {loadingReview && <Loader />}\r\n                                                    {loadingError && (\r\n                                                        <Message variant='danger'>{loadingError}</Message>\r\n                                                    )}\r\n                                                    {userInfo && userInfo.isAdmin ? (\r\n                                                        <Form onSubmit={submitHandler}>\r\n                                                            <Form.Group controlId='rating'>\r\n                                                                <Form.Label>Rating</Form.Label>\r\n                                                                <Form.Control\r\n                                                                    as='select'\r\n                                                                    value={rating}\r\n                                                                    onChange={(e) => setRating(e.target.value)}\r\n                                                                >\r\n                                                                    <option value=''>Select...</option>\r\n                                                                    <option value='1'>1 - Poor</option>\r\n                                                                    <option value='2'>2 - Fair</option>\r\n                                                                    <option value='3'>3 - Good</option>\r\n                                                                    <option value='4'>4 - Very Good</option>\r\n                                                                    <option value='5'>5 - Excellent</option>\r\n                                                                </Form.Control>\r\n                                                            </Form.Group>\r\n                                                            <Form.Group controlId='comment'>\r\n                                                                <Form.Label>Feedback</Form.Label>\r\n                                                                <Form.Control\r\n                                                                    as='textarea'\r\n                                                                    row='3'\r\n                                                                    value={comment}\r\n                                                                    onChange={(e) => setComment(e.target.value)}\r\n                                                                ></Form.Control>\r\n                                                            </Form.Group>\r\n                                                            <Button\r\n                                                                disabled={loadingReview}\r\n                                                                type='submit'\r\n                                                                variant='primary'\r\n                                                            >Submit</Button>\r\n                                                        </Form>\r\n                                                    ) : (\r\n                                                            <Message>\r\n                                                                Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                                                            </Message>\r\n                                                        )}\r\n                                                </ListGroup.Item>\r\n                                            </ListGroup>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FarmerProduct\r\n","const MapStyles = [\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#e9e9e9\"\r\n            },\r\n            {\r\n                \"lightness\": 17\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f5f5f5\"\r\n            },\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            },\r\n            {\r\n                \"lightness\": 17\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            },\r\n            {\r\n                \"lightness\": 29\r\n            },\r\n            {\r\n                \"weight\": 0.2\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            },\r\n            {\r\n                \"lightness\": 18\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            },\r\n            {\r\n                \"lightness\": 16\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f5f5f5\"\r\n            },\r\n            {\r\n                \"lightness\": 21\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi.park\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#dedede\"\r\n            },\r\n            {\r\n                \"lightness\": 21\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            },\r\n            {\r\n                \"lightness\": 16\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": 36\r\n            },\r\n            {\r\n                \"color\": \"#333333\"\r\n            },\r\n            {\r\n                \"lightness\": 40\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            },\r\n            {\r\n                \"lightness\": 19\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#fefefe\"\r\n            },\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#fefefe\"\r\n            },\r\n            {\r\n                \"lightness\": 17\r\n            },\r\n            {\r\n                \"weight\": 1.2\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default MapStyles","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Rating.css'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span className=\"text-span\">{text && text}: </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }\r\n                ></i>\r\n            </span>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#47cf38'\r\n}\r\n\r\nexport default Rating\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image } from 'react-bootstrap'\r\nimport {\r\n    GoogleMap,\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    Marker,\r\n    InfoWindow\r\n} from 'react-google-maps'\r\nimport Message from '../../Message/Message'\r\nimport Loader from '../../Loader/Loader'\r\nimport { listSupplierProducts } from '../../../actions/supplierProduct'\r\nimport MapStyles from './MapStyles'\r\nimport Rating from './Rating/Rating'\r\n\r\nconst Map = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const [selectedPlace, setSelectedPlace] = useState(null)\r\n\r\n    const supplierProductList = useSelector(state => state.supplierProductList)\r\n    const { loading: loadingProducts, error: errorProducts, products } = supplierProductList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo.isAdmin && !userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listSupplierProducts())\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <GoogleMap\r\n            defaultCenter={{ lat: 6.927079, lng: 79.861244 }}\r\n            defaultZoom={10}\r\n            defaultOptions={{ styles: MapStyles }}\r\n        >\r\n            {\r\n                loadingProducts ? <Loader />\r\n                    : errorProducts\r\n                        ? <Message variant='danger'>{errorProducts}</Message>\r\n                        : (\r\n                            products.map(place => (\r\n                                <Marker\r\n                                    key={place._id}\r\n                                    position={{\r\n                                        lat: place.latitude,\r\n                                        lng: place.longitude\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        setSelectedPlace(place)\r\n                                    }}\r\n                                    icon={{\r\n                                        url: '/mapIcon.svg',\r\n                                        scaledSize: new window.google.maps.Size(25, 25)\r\n                                    }}\r\n                                />\r\n                            ))\r\n                        )\r\n\r\n            }\r\n            {\r\n                selectedPlace && (\r\n                    <InfoWindow\r\n                        position={{\r\n                            lat: selectedPlace.latitude,\r\n                            lng: selectedPlace.longitude\r\n                        }}\r\n                        onCloseClick={() => {\r\n                            setSelectedPlace(null)\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <Image className=\"mx-auto d-block img-fluid mb-1\" rounded width=\"120px\" src={selectedPlace.image} alt={selectedPlace.name} />\r\n                            <h4 style={{ textAlign: \"center\" }}>{selectedPlace.cropSelection}</h4>\r\n                            <p>\r\n                                Farmer: <span style={{ fontWeight: \"bold\" }}>{selectedPlace.name}</span><br />\r\n                                Description: {selectedPlace.description}<br />\r\n                                Address: {selectedPlace.address}<br />\r\n                                Reviewed: {\r\n                                    selectedPlace.isReviwed\r\n                                        ? (<>\r\n                                            <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                                            <p><Rating text=\"Rating\" value={selectedPlace.rating} /></p>\r\n                                        </>\r\n                                        )\r\n                                        : (<i className=\"fas fa-times\" style={{ color: \"red\" }} />)\r\n                                }\r\n                            </p>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )\r\n            }\r\n        </GoogleMap>\r\n\r\n    )\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\r\n\r\nexport default WrappedMap\r\n","import React from 'react'\r\nimport WrappedMap from './Map'\r\nimport { Scrollbar } from \"react-scrollbars-custom\";\r\n\r\nconst OverLay = () => {\r\n    return (\r\n        <Scrollbar style={{ width: '100%', height: 480 }}>\r\n            <div style={{ width: '100%', height: '100vh' }}>\r\n                <WrappedMap\r\n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\r\n                    loadingElement={<div style={{ height: '100%' }} />}\r\n                    containerElement={<div style={{ height: '400px' }} />}\r\n                    mapElement={<div style={{ height: '100vh' }} />}\r\n                />\r\n            </div>\r\n        </Scrollbar>\r\n    )\r\n}\r\n\r\nexport default OverLay\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport OverLay from '../../components/DashBoard/Map/OverLay'\r\nimport Meta from '../../components/Helmet/Meta'\r\nimport SideBarComponents from '../../components/SideBar/SideBarComponents'\r\n\r\nconst MapScreen = () => {\r\n    return (\r\n        <div style={{ marginTop: \"110px\" }}>\r\n            <Meta\r\n                title=\"Agroic | Admin Map\"\r\n            />\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <h4>Map</h4>\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <h4 style={{ marginLeft: \"30px\" }}>Farmers Harvest Map</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <SideBarComponents />\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <OverLay />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapScreen\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Footer from './components/Footer/Footer';\r\nimport Header from './components/Header/Header';\r\nimport LoginComponent from './components/Login/LoginComponent';\r\nimport Register from './components/Register/Register';\r\nimport PlaceOrder from './components/PlaceOrder/PlaceOrder.jsx'\r\n\r\nimport HomeScreen from './screens/Home/HomeScreen';\r\nimport Consumer from './screens/Consumer/ConsumerScreen';\r\nimport Farmer from './screens/Farmer/FarmerScreen';\r\nimport Supplier from './screens/Supplier/SupplierScreen';\r\nimport ProfileScreen from './screens/Profile/ProfileScreen';\r\nimport DashboardScreen from './screens/Dashboard/DashboardScreen';\r\nimport AdminProfileScreen from './screens/Dashboard/ProfileScreen';\r\nimport Farmer_ProductSeed from './screens/Farmer_ProductSeed/Farmer_ProductSeedScreen';\r\nimport SeedProductScreen from './screens/Product_Seed/SeedProductScreen';\r\nimport Farmer_LendScreen from './screens/Farmer_LendMachine/Farmer_LendScreen';\r\nimport LendMachineProduct from './screens/Product_LendMachine/LendMachineProduct';\r\nimport PaymentMethodScreen from './screens/Payment/PaymentMethodScreen'\r\nimport ConsumerProductDetailScreen from './screens/Product_Consumer/ConsumerProductDetailScreen'\r\nimport ShippingScreen from './screens/Shipping/ShippingScreen';\r\nimport OrderScreen from './screens/Order/OrderScreen';\r\nimport Cart from './screens/Cart/Cart';\r\nimport UserListScreen from './screens/Dashboard/UserListScreen';\r\nimport UserEditScreen from './screens/UserEdit/UserEditScreen';\r\nimport ProductListScreen from './screens/Dashboard/ProductListScreen'\r\nimport SeedListEdit from './screens/ProductListEdit/SeedListEdit/SeedListEdit'\r\nimport MachineListEdit from './screens/ProductListEdit/MachineListEdit/MachineListEdit'\r\nimport ConsumerListEdit from './screens/ProductListEdit/ConsumerListEdit/ConsumerListEdit'\r\nimport SupplierProductEdit from './components/SupplierProductEdit/SupplierProductEdit'\r\nimport OrderListScreen from './screens/Dashboard/OrderListScreen'\r\nimport HarvestScreen from './screens/Dashboard/HarvestScreen';\r\nimport FarmerProduct from './screens/FarmerProducts/FarmerProducts';\r\nimport MapScreen from './screens/Dashboard/MapScreen';\r\n\r\nconst Layout = () => {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={HomeScreen} />\r\n                    <Route exact path=\"/farmer\" component={Farmer} />\r\n                    <Route exact path=\"/consumer\" component={Consumer} />\r\n                    <Route exact path=\"/supplier\" component={Supplier} />\r\n                    <Route exact path=\"/farmers/sellMeterial\" component={LoginComponent} />\r\n                    <Route exact path=\"/login\" component={LoginComponent} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <Route exact path=\"/profile\" component={ProfileScreen} />\r\n                    <Route exact path=\"/shipping\" component={ShippingScreen} />\r\n                    <Route exact path=\"/payment\" component={PaymentMethodScreen} />\r\n                    <Route exact path=\"/placeorder\" component={PlaceOrder} />\r\n                    <Route exact path=\"/cart/:id?\" component={Cart} />\r\n                    <Route path=\"/order/:id\" component={OrderScreen} />\r\n\r\n                    <Route exact path=\"/admin/userList\" component={UserListScreen} />\r\n                    <Route exact path=\"/admin/dashboard\" component={DashboardScreen} />\r\n                    <Route exact path=\"/admin/profile\" component={AdminProfileScreen} />\r\n                    <Route exact path=\"/admin/productlist\" component={ProductListScreen} />\r\n                    <Route exact path=\"/admin/orderlist\" component={OrderListScreen} />\r\n                    <Route exact path=\"/admin/supplierproducts\" component={HarvestScreen} />\r\n                    <Route exact path=\"/admin/map\" component={MapScreen} />\r\n                    <Route exact path=\"/admin/productlist/seed/:id/edit\" component={SeedListEdit} />\r\n                    <Route exact path=\"/admin/productlist/machine/:id/edit\" component={MachineListEdit} />\r\n                    <Route exact path=\"/admin/productlist/consumer/:id/edit\" component={ConsumerListEdit} />\r\n                    <Route exact path=\"/admin/user/:id/edit\" component={UserEditScreen} />\r\n                    <Route exact path=\"/supplierproducts/:id/review\" component={FarmerProduct} />\r\n                    <Route exact path=\"/supplierproducts/:id/edit\" component={SupplierProductEdit} />\r\n\r\n                    <Route exact path=\"/farmers/purchaseSeeds\" component={Farmer_ProductSeed} />\r\n                    <Route exact path=\"/farmers/purchaseSeeds/:id\" component={SeedProductScreen} />\r\n                    <Route exact path=\"/farmers/lendMachines\" component={Farmer_LendScreen} />\r\n                    <Route exact path=\"/farmers/lendMachines/:id\" component={LendMachineProduct} />\r\n                    <Route exact path=\"/consumer/:id\" component={ConsumerProductDetailScreen} />\r\n                </Switch>\r\n                <Footer />\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react';\r\nimport Layout from './Layout';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n        <Layout />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport dotenv from 'dotenv';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport store from './store';\r\nimport './bootstrap.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\ndotenv.config('./../.env');\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}