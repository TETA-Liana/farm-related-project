{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'../../components/Message/Message';import Loader from'../../components/Loader/Loader';import FormContainer from'../../components/FormContainer/FormContainer';import{getUserDetails,updateUser}from'../../actions/userActions';import{USER_UPDATE_RESET}from'./../../constants/userConstants';import Meta from'../../components/Helmet/Meta';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const UserEditScreen=_ref=>{let{match,history}=_ref;const userId=match.params.id;const[name,setName]=useState('');const[email,setEmail]=useState('');const[cropSelection,setCropSelection]=useState('');const[isAdmin,setIsAdmin]=useState(false);const dispatch=useDispatch();const userDetails=useSelector(state=>state.userDetails);const{loading,user,error}=userDetails;const userUpdate=useSelector(state=>state.userUpdate);const{loading:loadingUpdate,success:successUpdate,error:errorUpdate}=userUpdate;useEffect(()=>{if(successUpdate){dispatch({type:USER_UPDATE_RESET});history.push('/admin/userList');}else{if(!user.name||user._id!==userId){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setCropSelection(user.cropSelection);setIsAdmin(user.isAdmin);}}},[user,userId,dispatch,successUpdate,history]);const submitHandler=e=>{e.preventDefault();dispatch(updateUser({_id:userId,name,email,isAdmin}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Meta,{title:\"Agroic | Admin User Edit\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{style:{marginTop:'120px'},children:\"Edit User\"}),/*#__PURE__*/_jsx(Link,{to:\"/admin/userList\",className:\"btn btn-light my-2\",children:\"GO BACK\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,style:{marginBottom:'50px'},children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Name \",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"})]}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,required:true,onChange:e=>setName(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Email Address / NIC \",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"})]}),/*#__PURE__*/_jsx(Form.Control,{type:\"nic\",placeholder:\"Enter email or NIC\",value:email,required:true,onChange:e=>setEmail(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"cropSelection\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Crop Selection (optional)\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"cropSelection\",placeholder:\"Enter crop               \",value:cropSelection,onChange:e=>setCropSelection(e.target.value)})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isAdmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",value:isAdmin,checked:isAdmin,onChange:e=>setIsAdmin(e.target.checked)})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]})]});};export default UserEditScreen;","map":{"version":3,"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","Meta","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UserEditScreen","_ref","match","history","userId","params","id","name","setName","email","setEmail","cropSelection","setCropSelection","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","user","error","userUpdate","loadingUpdate","success","successUpdate","errorUpdate","type","push","_id","submitHandler","e","preventDefault","children","title","style","marginTop","to","className","variant","onSubmit","marginBottom","Group","controlId","Label","color","Control","placeholder","value","required","onChange","target","Check","label","checked"],"sources":["C:/Users/PC/web-cw/frontend/src/screens/UserEdit/UserEditScreen.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Form,\r\n    Button,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message/Message'\r\nimport Loader from '../../components/Loader/Loader'\r\nimport FormContainer from '../../components/FormContainer/FormContainer'\r\nimport { getUserDetails, updateUser } from '../../actions/userActions'\r\nimport { USER_UPDATE_RESET } from './../../constants/userConstants'\r\nimport Meta from '../../components/Helmet/Meta'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [cropSelection, setCropSelection] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, user, error } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userList')\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setCropSelection(user.cropSelection)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [user, userId, dispatch, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Meta\r\n                title=\"Agroic | Admin User Edit\"\r\n            />\r\n            <FormContainer>\r\n                <h1 style={{ marginTop: '120px' }}>Edit User</h1>\r\n                <Link to='/admin/userList' className=\"btn btn-light my-2\">GO BACK</Link>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler} style={{ marginBottom: '50px' }}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"name\"\r\n                                    placeholder=\"Enter name\"\r\n                                    value={name}\r\n                                    required\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address / NIC <span style={{ color: 'red' }}>*</span></Form.Label>\r\n                                <Form.Control\r\n                                    type=\"nic\"\r\n                                    placeholder=\"Enter email or NIC\"\r\n                                    value={email}\r\n                                    required\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='cropSelection'>\r\n                                <Form.Label>Crop Selection (optional)</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"cropSelection\"\r\n                                    placeholder=\"Enter crop               \"\r\n                                    value={cropSelection}\r\n                                    onChange={(e) => setCropSelection(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='isAdmin'>\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    label=\"Is Admin\"\r\n                                    value={isAdmin}\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                ></Form.Check>\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" variant=\"primary\">Update</Button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OACIC,IAAI,CACJC,MAAM,KACH,iBAAiB,CACxB,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,MAAO,CAAAC,OAAO,KAAM,kCAAkC,CACtD,MAAO,CAAAC,MAAM,KAAM,gCAAgC,CACnD,MAAO,CAAAC,aAAa,KAAM,8CAA8C,CACxE,OAASC,cAAc,CAAEC,UAAU,KAAQ,2BAA2B,CACtE,OAASC,iBAAiB,KAAQ,iCAAiC,CACnE,MAAO,CAAAC,IAAI,KAAM,8BAA8B,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE/C,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,KAAK,CAAEC,OAAQ,CAAC,CAAAF,IAAA,CAEtC,KAAM,CAAAG,MAAM,CAAGF,KAAK,CAACG,MAAM,CAACC,EAAE,CAE9B,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAG5B,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAAC6B,KAAK,CAAEC,QAAQ,CAAC,CAAG9B,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAC+B,aAAa,CAAEC,gBAAgB,CAAC,CAAGhC,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACiC,OAAO,CAAEC,UAAU,CAAC,CAAGlC,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAmC,QAAQ,CAAG9B,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAA+B,WAAW,CAAG9B,WAAW,CAAC+B,KAAK,EAAIA,KAAK,CAACD,WAAW,CAAC,CAC3D,KAAM,CAAEE,OAAO,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGJ,WAAW,CAE5C,KAAM,CAAAK,UAAU,CAAGnC,WAAW,CAAC+B,KAAK,EAAIA,KAAK,CAACI,UAAU,CAAC,CACzD,KAAM,CAAEH,OAAO,CAAEI,aAAa,CAAEC,OAAO,CAAEC,aAAa,CAAEJ,KAAK,CAAEK,WAAY,CAAC,CAAGJ,UAAU,CAEzFxC,SAAS,CAAC,IAAM,CACZ,GAAI2C,aAAa,CAAE,CACfT,QAAQ,CAAC,CAAEW,IAAI,CAAElC,iBAAkB,CAAC,CAAC,CACrCW,OAAO,CAACwB,IAAI,CAAC,iBAAiB,CAAC,CACnC,CAAC,IAAM,CACH,GAAI,CAACR,IAAI,CAACZ,IAAI,EAAIY,IAAI,CAACS,GAAG,GAAKxB,MAAM,CAAE,CACnCW,QAAQ,CAACzB,cAAc,CAACc,MAAM,CAAC,CAAC,CACpC,CAAC,IAAM,CACHI,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC,CAClBG,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC,CACpBG,gBAAgB,CAACO,IAAI,CAACR,aAAa,CAAC,CACpCG,UAAU,CAACK,IAAI,CAACN,OAAO,CAAC,CAC5B,CACJ,CACJ,CAAC,CAAE,CAACM,IAAI,CAAEf,MAAM,CAAEW,QAAQ,CAAES,aAAa,CAAErB,OAAO,CAAC,CAAC,CAEpD,KAAM,CAAA0B,aAAa,CAAIC,CAAC,EAAK,CACzBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBhB,QAAQ,CAACxB,UAAU,CAAC,CAAEqC,GAAG,CAAExB,MAAM,CAAEG,IAAI,CAAEE,KAAK,CAAEI,OAAQ,CAAC,CAAC,CAAC,CAC/D,CAAC,CAED,mBACIhB,KAAA,CAAAE,SAAA,EAAAiC,QAAA,eACIrC,IAAA,CAACF,IAAI,EACDwC,KAAK,CAAC,0BAA0B,CACnC,CAAC,cACFpC,KAAA,CAACR,aAAa,EAAA2C,QAAA,eACVrC,IAAA,OAAIuC,KAAK,CAAE,CAAEC,SAAS,CAAE,OAAQ,CAAE,CAAAH,QAAA,CAAC,WAAS,CAAI,CAAC,cACjDrC,IAAA,CAACb,IAAI,EAACsD,EAAE,CAAC,iBAAiB,CAACC,SAAS,CAAC,oBAAoB,CAAAL,QAAA,CAAC,SAAO,CAAM,CAAC,CACvEV,aAAa,eAAI3B,IAAA,CAACP,MAAM,GAAE,CAAC,CAC3BqC,WAAW,eAAI9B,IAAA,CAACR,OAAO,EAACmD,OAAO,CAAC,QAAQ,CAAAN,QAAA,CAAEP,WAAW,CAAU,CAAC,CAChEP,OAAO,cAAGvB,IAAA,CAACP,MAAM,GAAE,CAAC,CAAGgC,KAAK,cAAGzB,IAAA,CAACR,OAAO,EAACmD,OAAO,CAAC,QAAQ,CAAAN,QAAA,CAAEZ,KAAK,CAAU,CAAC,cAEnEvB,KAAA,CAACd,IAAI,EAACwD,QAAQ,CAAEV,aAAc,CAACK,KAAK,CAAE,CAAEM,YAAY,CAAE,MAAO,CAAE,CAAAR,QAAA,eAC3DnC,KAAA,CAACd,IAAI,CAAC0D,KAAK,EAACC,SAAS,CAAC,MAAM,CAAAV,QAAA,eACxBnC,KAAA,CAACd,IAAI,CAAC4D,KAAK,EAAAX,QAAA,EAAC,OAAK,cAAArC,IAAA,SAAMuC,KAAK,CAAE,CAAEU,KAAK,CAAE,KAAM,CAAE,CAAAZ,QAAA,CAAC,GAAC,CAAM,CAAC,EAAY,CAAC,cACrErC,IAAA,CAACZ,IAAI,CAAC8D,OAAO,EACTnB,IAAI,CAAC,MAAM,CACXoB,WAAW,CAAC,YAAY,CACxBC,KAAK,CAAExC,IAAK,CACZyC,QAAQ,MACRC,QAAQ,CAAGnB,CAAC,EAAKtB,OAAO,CAACsB,CAAC,CAACoB,MAAM,CAACH,KAAK,CAAE,CAC9B,CAAC,EACR,CAAC,cACblD,KAAA,CAACd,IAAI,CAAC0D,KAAK,EAACC,SAAS,CAAC,OAAO,CAAAV,QAAA,eACzBnC,KAAA,CAACd,IAAI,CAAC4D,KAAK,EAAAX,QAAA,EAAC,sBAAoB,cAAArC,IAAA,SAAMuC,KAAK,CAAE,CAAEU,KAAK,CAAE,KAAM,CAAE,CAAAZ,QAAA,CAAC,GAAC,CAAM,CAAC,EAAY,CAAC,cACpFrC,IAAA,CAACZ,IAAI,CAAC8D,OAAO,EACTnB,IAAI,CAAC,KAAK,CACVoB,WAAW,CAAC,oBAAoB,CAChCC,KAAK,CAAEtC,KAAM,CACbuC,QAAQ,MACRC,QAAQ,CAAGnB,CAAC,EAAKpB,QAAQ,CAACoB,CAAC,CAACoB,MAAM,CAACH,KAAK,CAAE,CAC/B,CAAC,EACR,CAAC,cACblD,KAAA,CAACd,IAAI,CAAC0D,KAAK,EAACC,SAAS,CAAC,eAAe,CAAAV,QAAA,eACjCrC,IAAA,CAACZ,IAAI,CAAC4D,KAAK,EAAAX,QAAA,CAAC,2BAAyB,CAAY,CAAC,cAClDrC,IAAA,CAACZ,IAAI,CAAC8D,OAAO,EACTnB,IAAI,CAAC,eAAe,CACpBoB,WAAW,CAAC,2BAA2B,CACvCC,KAAK,CAAEpC,aAAc,CACrBsC,QAAQ,CAAGnB,CAAC,EAAKlB,gBAAgB,CAACkB,CAAC,CAACoB,MAAM,CAACH,KAAK,CAAE,CACvC,CAAC,EACR,CAAC,cACbpD,IAAA,CAACZ,IAAI,CAAC0D,KAAK,EAACC,SAAS,CAAC,SAAS,CAAAV,QAAA,cAC3BrC,IAAA,CAACZ,IAAI,CAACoE,KAAK,EACPzB,IAAI,CAAC,UAAU,CACf0B,KAAK,CAAC,UAAU,CAChBL,KAAK,CAAElC,OAAQ,CACfwC,OAAO,CAAExC,OAAQ,CACjBoC,QAAQ,CAAGnB,CAAC,EAAKhB,UAAU,CAACgB,CAAC,CAACoB,MAAM,CAACG,OAAO,CAAE,CACrC,CAAC,CACN,CAAC,cACb1D,IAAA,CAACX,MAAM,EAAC0C,IAAI,CAAC,QAAQ,CAACY,OAAO,CAAC,SAAS,CAAAN,QAAA,CAAC,QAAM,CAAQ,CAAC,EACrD,CACT,EAEM,CAAC,EAClB,CAAC,CAEX,CAAC,CAED,cAAe,CAAAhC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}