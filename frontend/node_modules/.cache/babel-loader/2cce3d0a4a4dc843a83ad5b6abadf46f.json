{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useHistory}from\"react-router-dom\";import{useDispatch,useSelector}from'react-redux';import{Image}from'react-bootstrap';import{GoogleMap,withScriptjs,withGoogleMap,Marker,InfoWindow}from'react-google-maps';import Message from'../../Message/Message';import Loader from'../../Loader/Loader';import{listSupplierProducts}from'../../../actions/supplierProduct';import MapStyles from'./MapStyles';import Rating from'./Rating/Rating';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Map=()=>{const dispatch=useDispatch();let history=useHistory();const[selectedPlace,setSelectedPlace]=useState(null);const supplierProductList=useSelector(state=>state.supplierProductList);const{loading:loadingProducts,error:errorProducts,products}=supplierProductList;const userLogin=useSelector(state=>state.userLogin);const{userInfo}=userLogin;useEffect(()=>{if(!userInfo.isAdmin&&!userInfo){history.push('/login');}else{dispatch(listSupplierProducts());}},[dispatch,history,userInfo]);return/*#__PURE__*/_jsxs(GoogleMap,{defaultCenter:{lat:6.927079,lng:79.861244},defaultZoom:10,defaultOptions:{styles:MapStyles},children:[loadingProducts?/*#__PURE__*/_jsx(Loader,{}):errorProducts?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorProducts}):products.map(place=>/*#__PURE__*/_jsx(Marker,{position:{lat:place.latitude,lng:place.longitude},onClick:()=>{setSelectedPlace(place);},icon:{url:'/mapIcon.svg',scaledSize:new window.google.maps.Size(25,25)}},place._id)),selectedPlace&&/*#__PURE__*/_jsx(InfoWindow,{position:{lat:selectedPlace.latitude,lng:selectedPlace.longitude},onCloseClick:()=>{setSelectedPlace(null);},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Image,{className:\"mx-auto d-block img-fluid mb-1\",rounded:true,width:\"120px\",src:selectedPlace.image,alt:selectedPlace.name}),/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:\"center\"},children:selectedPlace.cropSelection}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Farmer: \",/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:\"bold\"},children:selectedPlace.name}),/*#__PURE__*/_jsx(\"br\",{}),\"Description: \",selectedPlace.description,/*#__PURE__*/_jsx(\"br\",{}),\"Address: \",selectedPlace.address,/*#__PURE__*/_jsx(\"br\",{}),\"Reviewed: \",selectedPlace.isReviwed?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-check\",style:{color:\"green\"}}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(Rating,{text:\"Rating\",value:selectedPlace.rating})})]}):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\",style:{color:\"red\"}})]})]})})]});};const WrappedMap=withScriptjs(withGoogleMap(Map));export default WrappedMap;","map":{"version":3,"names":["React","useEffect","useState","useHistory","useDispatch","useSelector","Image","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","Message","Loader","listSupplierProducts","MapStyles","Rating","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Map","dispatch","history","selectedPlace","setSelectedPlace","supplierProductList","state","loading","loadingProducts","error","errorProducts","products","userLogin","userInfo","isAdmin","push","defaultCenter","lat","lng","defaultZoom","defaultOptions","styles","children","variant","map","place","position","latitude","longitude","onClick","icon","url","scaledSize","window","google","maps","Size","_id","onCloseClick","className","rounded","width","src","image","alt","name","style","textAlign","cropSelection","fontWeight","description","address","isReviwed","color","text","value","rating","WrappedMap"],"sources":["C:/Users/PC/web-cw/frontend/src/components/DashBoard/Map/Map.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image } from 'react-bootstrap'\r\nimport {\r\n    GoogleMap,\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    Marker,\r\n    InfoWindow\r\n} from 'react-google-maps'\r\nimport Message from '../../Message/Message'\r\nimport Loader from '../../Loader/Loader'\r\nimport { listSupplierProducts } from '../../../actions/supplierProduct'\r\nimport MapStyles from './MapStyles'\r\nimport Rating from './Rating/Rating'\r\n\r\nconst Map = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const [selectedPlace, setSelectedPlace] = useState(null)\r\n\r\n    const supplierProductList = useSelector(state => state.supplierProductList)\r\n    const { loading: loadingProducts, error: errorProducts, products } = supplierProductList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo.isAdmin && !userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listSupplierProducts())\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <GoogleMap\r\n            defaultCenter={{ lat: 6.927079, lng: 79.861244 }}\r\n            defaultZoom={10}\r\n            defaultOptions={{ styles: MapStyles }}\r\n        >\r\n            {\r\n                loadingProducts ? <Loader />\r\n                    : errorProducts\r\n                        ? <Message variant='danger'>{errorProducts}</Message>\r\n                        : (\r\n                            products.map(place => (\r\n                                <Marker\r\n                                    key={place._id}\r\n                                    position={{\r\n                                        lat: place.latitude,\r\n                                        lng: place.longitude\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        setSelectedPlace(place)\r\n                                    }}\r\n                                    icon={{\r\n                                        url: '/mapIcon.svg',\r\n                                        scaledSize: new window.google.maps.Size(25, 25)\r\n                                    }}\r\n                                />\r\n                            ))\r\n                        )\r\n\r\n            }\r\n            {\r\n                selectedPlace && (\r\n                    <InfoWindow\r\n                        position={{\r\n                            lat: selectedPlace.latitude,\r\n                            lng: selectedPlace.longitude\r\n                        }}\r\n                        onCloseClick={() => {\r\n                            setSelectedPlace(null)\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <Image className=\"mx-auto d-block img-fluid mb-1\" rounded width=\"120px\" src={selectedPlace.image} alt={selectedPlace.name} />\r\n                            <h4 style={{ textAlign: \"center\" }}>{selectedPlace.cropSelection}</h4>\r\n                            <p>\r\n                                Farmer: <span style={{ fontWeight: \"bold\" }}>{selectedPlace.name}</span><br />\r\n                                Description: {selectedPlace.description}<br />\r\n                                Address: {selectedPlace.address}<br />\r\n                                Reviewed: {\r\n                                    selectedPlace.isReviwed\r\n                                        ? (<>\r\n                                            <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                                            <p><Rating text=\"Rating\" value={selectedPlace.rating} /></p>\r\n                                        </>\r\n                                        )\r\n                                        : (<i className=\"fas fa-times\" style={{ color: \"red\" }} />)\r\n                                }\r\n                            </p>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )\r\n            }\r\n        </GoogleMap>\r\n\r\n    )\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\r\n\r\nexport default WrappedMap\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}