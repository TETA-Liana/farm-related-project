{"ast":null,"code":"import axios from'axios';import{ORDER_CREATE_REQUEST,ORDER_CREATE_SAVE,ORDER_CREATE_FAIL,ORDER_DETAILS_REQUEST,ORDER_DETAILS_SAVE,ORDER_DETAILS_FAIL,ORDER_PAY_REQUEST,ORDER_PAY_SAVE,ORDER_PAY_FAIL,ORDER_LIST_MY_REQUEST,ORDER_LIST_MY_SAVE,ORDER_LIST_MY_FAIL,ORDER_LIST_REQUEST,ORDER_LIST_SAVE,ORDER_LIST_FAIL,ORDER_DELIVER_REQUEST,ORDER_DELIVER_SAVE,ORDER_DELIVER_FAIL}from'../constants/orderConstant';import{logout}from'./userActions';export const createOrder=order=>async(dispatch,getState)=>{try{dispatch({type:ORDER_CREATE_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{'Content-type':'application/json',Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.post('/api/orders',order,config);dispatch({type:ORDER_CREATE_SAVE,payload:data});}catch(error){dispatch({type:ORDER_CREATE_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const getOrderDetails=id=>async(dispatch,getState)=>{try{dispatch({type:ORDER_DETAILS_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.get(\"/api/orders/\".concat(id),config);dispatch({type:ORDER_DETAILS_SAVE,payload:data});}catch(error){const message=error.response&&error.response.data.message?error.response.data.message:error.message;if(message==='Not authorized, token failed'){dispatch(logout());}dispatch({type:ORDER_DETAILS_FAIL,payload:message});}};export const deliverOrder=order=>async(dispatch,getState)=>{try{dispatch({type:ORDER_DELIVER_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.put(\"/api/orders/\".concat(order._id,\"/deliver\"),{},config);dispatch({type:ORDER_DELIVER_SAVE,payload:data});}catch(error){const message=error.response&&error.response.data.message?error.response.data.message:error.message;if(message==='Not authorized, token failed'){dispatch(logout());}dispatch({type:ORDER_DELIVER_FAIL,payload:message});}};export const payOrder=(orderId,paymentResult)=>async(dispatch,getState)=>{try{dispatch({type:ORDER_PAY_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{'Content-type':'application/json',Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.put(\"/api/orders/\".concat(orderId,\"/pay\"),paymentResult,config);dispatch({type:ORDER_PAY_SAVE,payload:data});}catch(error){const message=error.response&&error.response.data.message?error.response.data.message:error.message;if(message==='Not authorized, token failed'){dispatch(logout());}dispatch({type:ORDER_PAY_FAIL,payload:message});}};export const listMyOrders=()=>async(dispatch,getState)=>{try{dispatch({type:ORDER_LIST_MY_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.get(\"/api/orders/myorders\",config);dispatch({type:ORDER_LIST_MY_SAVE,payload:data});}catch(error){const message=error.response&&error.response.data.message?error.response.data.message:error.message;if(message==='Not authorized, token failed'){dispatch(logout());}dispatch({type:ORDER_LIST_MY_FAIL,payload:message});}};export const listOrders=()=>async(dispatch,getState)=>{try{dispatch({type:ORDER_LIST_REQUEST});const{userLogin:{userInfo}}=getState();const config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};const{data}=await axios.get(\"/api/orders\",config);dispatch({type:ORDER_LIST_SAVE,payload:data});}catch(error){const message=error.response&&error.response.data.message?error.response.data.message:error.message;if(message==='Not authorized, token failed'){dispatch(logout());}dispatch({type:ORDER_LIST_FAIL,payload:message});}};","map":{"version":3,"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SAVE","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SAVE","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SAVE","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SAVE","ORDER_LIST_MY_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SAVE","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SAVE","ORDER_DELIVER_FAIL","logout","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","concat","token","data","post","payload","error","response","message","getOrderDetails","id","get","deliverOrder","put","_id","payOrder","orderId","paymentResult","listMyOrders","listOrders"],"sources":["C:/Users/PC/web-cw/frontend/src/actions/orderAction.js"],"sourcesContent":["import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SAVE,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SAVE,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SAVE,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SAVE,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SAVE,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SAVE,\r\n    ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstant'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/orders',\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SAVE,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SAVE,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SAVE,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${orderId}/pay`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SAVE,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SAVE,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SAVE,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}