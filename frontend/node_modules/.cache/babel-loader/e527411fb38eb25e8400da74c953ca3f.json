{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\web-cw\\\\frontend\\\\src\\\\screens\\\\Map\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Image } from 'react-bootstrap';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from 'react-google-maps';\nimport Message from './../../components/Message/Message';\nimport Loader from './../../components/Loader/Loader';\nimport { listSupplierProductsForAll } from './../../actions/supplierProduct';\nimport MapStyles from './MapStyles';\nimport Rating from './Rating/Rating';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const supplierProductForAllList = useSelector(state => state.supplierProductForAllList);\n  const {\n    loading: loadingProducts,\n    error: errorProducts,\n    products\n  } = supplierProductForAllList;\n  useEffect(() => {\n    dispatch(listSupplierProductsForAll());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultCenter: {\n      lat: 6.927079,\n      lng: 79.861244\n    },\n    defaultZoom: 10,\n    defaultOptions: {\n      styles: MapStyles\n    },\n    children: [loadingProducts ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 35\n    }, this) : errorProducts ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }, this) : products.map(place => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: place.latitude,\n        lng: place.longitude\n      },\n      onClick: () => {\n        setSelectedPlace(place);\n      },\n      icon: {\n        url: '/mapIcon.svg',\n        scaledSize: new window.google.maps.Size(25, 25)\n      }\n    }, place._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }, this)), selectedPlace && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: selectedPlace.latitude,\n        lng: selectedPlace.longitude\n      },\n      onCloseClick: () => {\n        setSelectedPlace(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          className: \"mx-auto d-block img-fluid mb-1\",\n          rounded: true,\n          width: \"120px\",\n          src: selectedPlace.image,\n          alt: selectedPlace.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: selectedPlace.cropSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedPlace.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 73\n          }, this), selectedPlace.isReviwed ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                text: \"Rating\",\n                value: selectedPlace.rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 45\n            }, this)\n          }, void 0, false) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"KFXAyrUhNhSROzSofRIVK9Py9h4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Map;\nconst WrappedMap = withScriptjs(_c2 = withGoogleMap(Map));\n_c3 = WrappedMap;\nexport default WrappedMap;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"WrappedMap$withScriptjs\");\n$RefreshReg$(_c3, \"WrappedMap\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Image","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","Message","Loader","listSupplierProductsForAll","MapStyles","Rating","jsxDEV","_jsxDEV","Fragment","_Fragment","Map","_s","dispatch","selectedPlace","setSelectedPlace","supplierProductForAllList","state","loading","loadingProducts","error","errorProducts","products","defaultCenter","lat","lng","defaultZoom","defaultOptions","styles","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","map","place","position","latitude","longitude","onClick","icon","url","scaledSize","window","google","maps","Size","_id","onCloseClick","className","rounded","width","src","image","alt","name","style","textAlign","cropSelection","description","isReviwed","text","value","rating","_c","WrappedMap","_c2","_c3","$RefreshReg$"],"sources":["C:/Users/PC/web-cw/frontend/src/screens/Map/Map.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image } from 'react-bootstrap'\r\nimport {\r\n    GoogleMap,\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    Marker,\r\n    InfoWindow\r\n} from 'react-google-maps'\r\nimport Message from './../../components/Message/Message'\r\nimport Loader from './../../components/Loader/Loader'\r\nimport { listSupplierProductsForAll } from './../../actions/supplierProduct'\r\nimport MapStyles from './MapStyles'\r\nimport Rating from './Rating/Rating'\r\n\r\nconst Map = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [selectedPlace, setSelectedPlace] = useState(null)\r\n\r\n    const supplierProductForAllList = useSelector(state => state.supplierProductForAllList)\r\n    const { loading: loadingProducts, error: errorProducts, products } = supplierProductForAllList\r\n\r\n    useEffect(() => {\r\n        dispatch(listSupplierProductsForAll())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <GoogleMap\r\n            defaultCenter={{ lat: 6.927079, lng: 79.861244 }}\r\n            defaultZoom={10}\r\n            defaultOptions={{ styles: MapStyles }}\r\n        >\r\n            {\r\n                loadingProducts ? <Loader />\r\n                    : errorProducts\r\n                        ? <Message variant='danger'>{errorProducts}</Message>\r\n                        : (\r\n                            products.map(place => (\r\n                                <Marker\r\n                                    key={place._id}\r\n                                    position={{\r\n                                        lat: place.latitude,\r\n                                        lng: place.longitude\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        setSelectedPlace(place)\r\n                                    }}\r\n                                    icon={{\r\n                                        url: '/mapIcon.svg',\r\n                                        scaledSize: new window.google.maps.Size(25, 25)\r\n                                    }}\r\n                                />\r\n                            ))\r\n                        )\r\n\r\n            }\r\n            {\r\n                selectedPlace && (\r\n                    <InfoWindow\r\n                        position={{\r\n                            lat: selectedPlace.latitude,\r\n                            lng: selectedPlace.longitude\r\n                        }}\r\n                        onCloseClick={() => {\r\n                            setSelectedPlace(null)\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <Image className=\"mx-auto d-block img-fluid mb-1\" rounded width=\"120px\" src={selectedPlace.image} alt={selectedPlace.name} />\r\n                            <h4 style={{ textAlign: \"center\" }}>{selectedPlace.cropSelection}</h4>\r\n                            <p>\r\n                                Description: {selectedPlace.description}<br />\r\n                                {\r\n                                    selectedPlace.isReviwed\r\n                                        ? (<>\r\n                                            <p><Rating text=\"Rating\" value={selectedPlace.rating} /></p>\r\n                                        </>\r\n                                        )\r\n                                        : ''\r\n                                }\r\n                            </p>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )\r\n            }\r\n        </GoogleMap>\r\n\r\n    )\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\r\n\r\nexport default WrappedMap\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}