{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\web-cw\\\\frontend\\\\src\\\\components\\\\DashBoard\\\\Map\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Image } from 'react-bootstrap';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from 'react-google-maps';\nimport Message from '../../Message/Message';\nimport Loader from '../../Loader/Loader';\nimport { listSupplierProducts } from '../../../actions/supplierProduct';\nimport MapStyles from './MapStyles';\nimport Rating from './Rating/Rating';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const supplierProductList = useSelector(state => state.supplierProductList);\n  const {\n    loading: loadingProducts,\n    error: errorProducts,\n    products\n  } = supplierProductList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo.isAdmin && !userInfo) {\n      history.push('/login');\n    } else {\n      dispatch(listSupplierProducts());\n    }\n  }, [dispatch, history, userInfo]);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultCenter: {\n      lat: 6.927079,\n      lng: 79.861244\n    },\n    defaultZoom: 10,\n    defaultOptions: {\n      styles: MapStyles\n    },\n    children: [loadingProducts ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 35\n    }, this) : errorProducts ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 27\n    }, this) : products.map(place => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: place.latitude,\n        lng: place.longitude\n      },\n      onClick: () => {\n        setSelectedPlace(place);\n      },\n      icon: {\n        url: '/mapIcon.svg',\n        scaledSize: new window.google.maps.Size(25, 25)\n      }\n    }, place._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }, this)), selectedPlace && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: selectedPlace.latitude,\n        lng: selectedPlace.longitude\n      },\n      onCloseClick: () => {\n        setSelectedPlace(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          className: \"mx-auto d-block img-fluid mb-1\",\n          rounded: true,\n          width: \"120px\",\n          src: selectedPlace.image,\n          alt: selectedPlace.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: selectedPlace.cropSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Farmer: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: selectedPlace.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 105\n          }, this), \"Description: \", selectedPlace.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 73\n          }, this), \"Address: \", selectedPlace.address, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 65\n          }, this), \"Reviewed: \", selectedPlace.isReviwed ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-check\",\n              style: {\n                color: \"green\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                text: \"Rating\",\n                value: selectedPlace.rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\",\n            style: {\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"MlcKeOg1eJwybBtLbedFC3pnJa8=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n_c = Map;\nconst WrappedMap = withScriptjs(_c2 = withGoogleMap(Map));\n_c3 = WrappedMap;\nexport default WrappedMap;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"WrappedMap$withScriptjs\");\n$RefreshReg$(_c3, \"WrappedMap\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useDispatch","useSelector","Image","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","Message","Loader","listSupplierProducts","MapStyles","Rating","jsxDEV","_jsxDEV","Fragment","_Fragment","Map","_s","dispatch","history","selectedPlace","setSelectedPlace","supplierProductList","state","loading","loadingProducts","error","errorProducts","products","userLogin","userInfo","isAdmin","push","defaultCenter","lat","lng","defaultZoom","defaultOptions","styles","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","map","place","position","latitude","longitude","onClick","icon","url","scaledSize","window","google","maps","Size","_id","onCloseClick","className","rounded","width","src","image","alt","name","style","textAlign","cropSelection","fontWeight","description","address","isReviwed","color","text","value","rating","_c","WrappedMap","_c2","_c3","$RefreshReg$"],"sources":["C:/Users/PC/web-cw/frontend/src/components/DashBoard/Map/Map.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Image } from 'react-bootstrap'\r\nimport {\r\n    GoogleMap,\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    Marker,\r\n    InfoWindow\r\n} from 'react-google-maps'\r\nimport Message from '../../Message/Message'\r\nimport Loader from '../../Loader/Loader'\r\nimport { listSupplierProducts } from '../../../actions/supplierProduct'\r\nimport MapStyles from './MapStyles'\r\nimport Rating from './Rating/Rating'\r\n\r\nconst Map = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n\r\n    const [selectedPlace, setSelectedPlace] = useState(null)\r\n\r\n    const supplierProductList = useSelector(state => state.supplierProductList)\r\n    const { loading: loadingProducts, error: errorProducts, products } = supplierProductList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo.isAdmin && !userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listSupplierProducts())\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <GoogleMap\r\n            defaultCenter={{ lat: 6.927079, lng: 79.861244 }}\r\n            defaultZoom={10}\r\n            defaultOptions={{ styles: MapStyles }}\r\n        >\r\n            {\r\n                loadingProducts ? <Loader />\r\n                    : errorProducts\r\n                        ? <Message variant='danger'>{errorProducts}</Message>\r\n                        : (\r\n                            products.map(place => (\r\n                                <Marker\r\n                                    key={place._id}\r\n                                    position={{\r\n                                        lat: place.latitude,\r\n                                        lng: place.longitude\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        setSelectedPlace(place)\r\n                                    }}\r\n                                    icon={{\r\n                                        url: '/mapIcon.svg',\r\n                                        scaledSize: new window.google.maps.Size(25, 25)\r\n                                    }}\r\n                                />\r\n                            ))\r\n                        )\r\n\r\n            }\r\n            {\r\n                selectedPlace && (\r\n                    <InfoWindow\r\n                        position={{\r\n                            lat: selectedPlace.latitude,\r\n                            lng: selectedPlace.longitude\r\n                        }}\r\n                        onCloseClick={() => {\r\n                            setSelectedPlace(null)\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <Image className=\"mx-auto d-block img-fluid mb-1\" rounded width=\"120px\" src={selectedPlace.image} alt={selectedPlace.name} />\r\n                            <h4 style={{ textAlign: \"center\" }}>{selectedPlace.cropSelection}</h4>\r\n                            <p>\r\n                                Farmer: <span style={{ fontWeight: \"bold\" }}>{selectedPlace.name}</span><br />\r\n                                Description: {selectedPlace.description}<br />\r\n                                Address: {selectedPlace.address}<br />\r\n                                Reviewed: {\r\n                                    selectedPlace.isReviwed\r\n                                        ? (<>\r\n                                            <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                                            <p><Rating text=\"Rating\" value={selectedPlace.rating} /></p>\r\n                                        </>\r\n                                        )\r\n                                        : (<i className=\"fas fa-times\" style={{ color: \"red\" }} />)\r\n                                }\r\n                            </p>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )\r\n            }\r\n        </GoogleMap>\r\n\r\n    )\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\r\n\r\nexport default WrappedMap\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}